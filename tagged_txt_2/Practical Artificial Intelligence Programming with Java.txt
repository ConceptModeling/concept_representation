practical	O
artificial	O
intelligence	O
programming	O
with	O
java	O
third	O
edition	O
mark	O
watson	O
copyright	O
mark	O
watson	O
all	O
rights	O
reserved	O
this	O
work	O
is	O
licensed	O
under	O
a	O
creative	O
commons	O
attribution-noncommercial-no	O
derivative	O
works	O
version	O
united	O
states	O
license	O
november	O
contents	O
preface	O
introduction	O
other	O
jvm	O
languages	O
why	O
is	O
a	O
pdf	O
version	O
of	O
this	O
book	O
available	O
free	O
on	O
the	O
web	O
book	O
software	O
use	O
of	O
java	O
generics	O
and	O
native	O
types	O
notes	O
on	O
java	O
coding	O
styles	O
used	O
in	O
this	O
book	O
book	O
summary	O
search	B
representation	O
of	O
search	B
state	O
space	O
and	O
search	B
operators	O
finding	O
paths	O
in	O
mazes	O
finding	O
paths	O
in	O
graphs	O
adding	O
heuristics	O
to	O
breadth	O
first	O
search	B
search	B
and	O
game	B
playing	I
alpha-beta	B
search	B
a	O
java	O
framework	O
for	O
search	B
and	O
game	B
playing	I
tic-tac-toe	B
using	O
the	O
alpha-beta	B
search	B
algorithm	O
chess	B
using	O
the	O
alpha-beta	B
search	B
algorithm	O
reasoning	B
logic	B
history	O
of	O
logic	B
examples	O
of	O
different	O
logic	B
types	O
powerloom	B
overview	O
running	O
powerloom	B
interactively	O
using	O
the	O
powerloom	B
apis	O
in	O
java	O
programs	O
suggestions	O
for	O
further	O
study	O
semantic	B
web	I
relational	B
database	I
model	O
has	O
problems	O
dealing	O
with	O
rapidly	O
chang	O
ing	O
data	O
requirements	O
rdf	B
the	O
universal	O
data	O
format	O
extending	O
rdf	B
with	O
rdf	B
schema	O
the	O
sparql	B
query	O
language	O
using	O
sesame	B
xi	O
iii	O
contents	O
owl	B
the	O
web	O
ontology	O
language	O
knowledge	B
representation	I
and	O
rest	O
material	O
for	O
further	O
study	O
expert	O
systems	O
production	O
systems	O
the	O
drools	B
rules	O
language	O
using	O
drools	B
in	O
java	O
applications	O
example	O
drools	B
expert	B
system	I
blocks	O
world	O
pojo	O
object	O
models	O
for	O
blocks	O
world	O
example	O
drools	B
rules	O
for	O
blocks	O
world	O
example	O
java	O
code	O
for	O
blocks	O
world	O
example	O
example	O
drools	B
expert	B
system	I
help	O
desk	O
system	O
object	O
models	O
for	O
an	O
example	O
help	O
desk	O
drools	B
rules	O
for	O
an	O
example	O
help	O
desk	O
java	O
code	O
for	O
an	O
example	O
help	O
desk	O
notes	O
on	O
the	O
craft	O
of	O
building	O
expert	O
systems	O
genetic	O
algorithms	O
theory	O
finding	O
the	O
maximum	O
value	O
of	O
a	O
function	O
java	O
library	O
for	O
genetic	O
algorithms	O
neural	O
networks	O
hopfield	O
neural	O
networks	O
java	O
classes	O
for	O
hopfield	O
neural	O
networks	O
testing	O
the	O
hopfield	O
neural	B
network	I
class	O
back	B
propagation	I
neural	O
networks	O
a	O
java	O
class	O
library	O
for	O
back	B
propagation	I
adding	O
momentum	O
to	O
speed	O
up	O
back-prop	O
training	O
machine	B
learning	I
with	O
weka	B
using	O
weka	B
s	O
interactive	O
gui	O
application	O
interactive	O
command	O
line	O
use	O
of	O
weka	B
embedding	O
weka	B
in	O
a	O
java	O
application	O
suggestions	O
for	O
further	O
study	O
statistical	O
natural	O
language	O
processing	O
tokenizing	O
stemming	O
and	O
part	O
of	O
speech	O
tagging	B
text	O
named	B
entity	I
extraction	I
from	O
text	O
using	O
the	O
wordnet	B
linguistic	O
database	O
tutorial	O
on	O
wordnet	B
example	O
use	O
of	O
the	O
jaws	O
wordnet	B
library	O
suggested	O
project	O
using	O
a	O
part	O
of	O
speech	O
tagger	O
to	O
use	O
the	O
correct	O
wordnet	B
synonyms	O
iv	O
contents	O
suggested	O
project	O
using	O
wordnet	B
synonyms	O
to	O
improve	O
document	O
clustering	O
automatically	O
assigning	O
tags	O
to	O
text	O
text	B
clustering	I
spelling	B
correction	O
gnu	O
aspell	O
library	O
and	O
jazzy	O
peter	O
norvig	O
s	O
spelling	B
algorithm	O
extending	O
the	O
norvig	O
algorithm	O
by	O
using	O
word	O
pair	O
training	O
hidden	O
markov	B
models	I
using	O
the	O
trained	O
markov	O
model	O
to	O
tag	O
text	O
hidden	O
markov	B
models	I
information	O
gathering	O
open	B
calais	I
information	O
discovery	O
in	O
relational	O
databases	O
creating	O
a	O
test	O
derby	B
database	O
using	O
the	O
cia	O
world	O
fact	O
book	O
and	O
data	O
on	O
us	O
states	O
using	O
the	O
jdbc	B
meta	O
data	O
apis	O
using	O
the	O
meta	O
data	O
apis	O
to	O
discern	O
entity	O
relationships	O
down	O
to	O
the	O
bare	O
metal	O
in-memory	O
index	O
and	O
search	B
indexing	B
and	O
search	B
using	O
embedded	O
lucene	B
indexing	B
and	O
search	B
with	O
nutch	B
clients	O
nutch	B
server	O
fast	O
start	O
setup	O
using	O
the	O
nutch	B
opensearch	O
web	O
apis	O
conclusions	O
v	O
contents	O
vi	O
list	O
of	O
figures	O
solution	O
a	O
directed	O
graph	O
representation	O
is	O
shown	O
on	O
the	O
left	O
and	O
a	O
twodimensional	O
grid	O
maze	O
representation	O
is	O
shown	O
on	O
the	O
right	O
in	O
both	O
representations	O
the	O
letter	O
r	O
is	O
used	O
to	O
represent	O
the	O
current	O
position	O
reference	O
point	O
and	O
the	O
arrowheads	O
indicate	O
legal	O
moves	O
generated	O
by	O
a	O
search	B
operator	O
in	O
the	O
maze	O
representation	O
the	O
two	O
grid	O
cells	O
marked	O
with	O
an	O
x	O
indicate	O
that	O
a	O
search	B
operator	O
cannot	O
generate	O
this	O
grid	O
location	O
uml	O
class	O
diagram	O
for	O
the	O
maze	O
search	B
java	O
classes	O
using	O
depth	O
first	O
search	B
to	O
find	O
a	O
path	O
in	O
a	O
maze	O
finds	O
a	O
non-optimal	O
using	O
breadth	O
first	O
search	B
in	O
a	O
maze	O
to	O
find	O
an	O
optimal	O
solution	O
uml	O
class	O
diagram	O
for	O
the	O
graph	O
search	B
classes	O
using	O
depth	O
first	O
search	B
in	O
a	O
sample	O
graph	O
using	O
breadth	O
first	O
search	B
in	O
a	O
sample	O
graph	O
alpha-beta	O
algorithm	O
applied	O
to	O
part	O
of	O
a	O
game	O
of	O
tic-tac-toe	B
uml	O
class	O
diagrams	O
for	O
game	O
search	B
engine	O
and	O
tic-tac-toe	B
uml	O
class	O
diagrams	O
for	O
game	O
search	B
engine	O
and	O
chess	B
the	O
example	O
chess	B
program	O
does	O
not	O
contain	O
an	O
opening	O
book	O
so	O
it	O
plays	O
to	O
maximize	O
the	O
mobility	O
of	O
its	O
pieces	O
and	O
maximize	O
material	O
advantage	O
using	O
a	O
two-move	O
lookahead	O
the	O
first	O
version	O
of	O
the	O
chess	B
program	O
contains	O
a	O
few	O
heuristics	O
like	O
wanting	O
to	O
control	O
the	O
center	O
four	O
squares	O
continuing	O
the	O
first	O
sample	O
game	O
the	O
computer	O
is	O
looking	O
ahead	O
two	O
moves	O
and	O
no	O
opening	O
book	O
is	O
used	O
second	O
game	O
with	O
a	O
move	O
lookahead	O
continuing	O
the	O
second	O
game	O
with	O
a	O
two	O
and	O
a	O
half	O
move	O
lookahead	O
we	O
will	O
add	O
more	O
heuristics	O
to	O
the	O
static	O
evaluation	O
method	O
to	O
reduce	O
the	O
value	O
of	O
moving	O
the	O
queen	O
early	O
in	O
the	O
game	O
overview	O
of	O
how	O
we	O
will	O
use	O
powerloom	B
for	O
development	O
and	O
de	O
ployment	O
layers	O
of	O
data	O
models	O
used	O
in	O
implementing	O
semantic	B
web	I
applications	O
java	O
utility	O
classes	O
and	O
interface	O
for	O
using	O
sesame	B
vii	O
list	O
of	O
figures	O
using	O
drools	B
for	O
developing	O
rule-based	O
systems	O
and	O
then	O
deploying	O
them	O
initial	O
state	O
of	O
a	O
blocks	O
world	O
problem	O
with	O
three	O
blocks	O
stacked	O
on	O
top	O
of	O
each	O
other	O
the	O
goal	O
is	O
to	O
move	O
the	O
blocks	O
so	O
that	O
block	O
c	O
is	O
on	O
top	O
of	O
block	O
a	O
block	O
c	O
has	O
been	O
removed	O
from	O
block	O
b	O
and	O
placed	O
on	O
the	O
table	O
block	O
b	O
has	O
been	O
removed	O
from	O
block	O
a	O
and	O
placed	O
on	O
the	O
table	O
the	O
goal	O
is	O
solved	O
by	O
placing	O
block	O
c	O
on	O
top	O
of	O
block	O
a	O
the	O
test	O
function	O
evaluated	O
over	O
the	O
interval	O
the	O
maxi	O
mum	O
value	O
of	O
occurs	O
at	O
crossover	B
operation	O
physical	O
structure	O
of	O
a	O
neuron	B
two	O
views	O
of	O
the	O
same	O
two-layer	O
neural	B
network	I
the	O
view	O
on	O
the	O
right	O
shows	O
the	O
connection	O
weights	O
between	O
the	O
input	O
and	O
output	O
layers	O
as	O
a	O
two-dimensional	O
array	O
sigmoid	O
and	O
derivative	O
of	O
the	O
sigmoid	O
functions	O
this	O
plot	O
was	O
produced	O
by	O
the	O
file	O
src-neural-networksgraph	O
java	O
capabilities	O
of	O
zero	O
one	O
and	O
two	O
hidden	O
neuron	B
layer	O
neural	O
networks	O
the	O
grayed	O
areas	O
depict	O
one	O
of	O
two	O
possible	O
output	O
values	O
based	O
on	O
two	O
input	O
neuron	B
activation	O
values	O
note	O
that	O
this	O
is	O
a	O
two-dimensional	O
case	O
for	O
visualization	O
purposes	O
if	O
a	O
network	O
had	O
ten	O
input	O
neurons	O
instead	O
of	O
two	O
then	O
these	O
plots	O
would	O
have	O
to	O
be	O
ten-dimensional	O
instead	O
of	O
two-dimensional	O
example	O
backpropagation	O
neural	B
network	I
with	O
one	O
hidden	O
layer	O
example	O
backpropagation	O
neural	B
network	I
with	O
two	O
hidden	O
layers	O
running	O
the	O
weka	B
data	O
explorer	O
running	O
the	O
weka	B
data	O
explorer	O
viii	O
list	O
of	O
tables	O
runtimes	O
by	O
method	O
for	O
chess	B
program	O
random	O
chromosomes	O
and	O
the	O
floating	O
point	O
numbers	O
that	O
they	O
most	O
commonly	O
used	O
part	O
of	O
speech	O
tags	O
sample	O
part	O
of	O
speech	O
tags	O
transition	O
counts	O
from	O
the	O
first	O
tag	O
in	O
row	O
to	O
the	O
second	O
tag	O
in	O
column	O
we	O
see	O
that	O
the	O
transition	O
from	O
nnp	O
to	O
vb	O
is	O
common	O
normalize	O
data	O
in	O
table	O
to	O
get	O
probability	O
of	O
one	O
tag	O
in	O
row	O
transitioning	O
to	O
another	O
tag	O
in	O
column	O
probabilities	O
of	O
words	O
having	O
specific	O
tags	O
only	O
a	O
few	O
tags	O
are	O
shown	O
in	O
this	O
table	O
ix	O
list	O
of	O
tables	O
x	O
preface	O
i	O
wrote	O
this	O
book	O
for	O
both	O
professional	O
programmers	O
and	O
home	O
hobbyists	O
who	O
already	O
know	O
how	O
to	O
program	O
in	O
java	O
and	O
who	O
want	O
to	O
learn	O
practical	O
artificial	O
intelligence	O
programming	O
and	O
information	O
processing	O
techniques	O
i	O
have	O
tried	O
to	O
make	O
this	O
an	O
enjoyable	O
book	O
to	O
work	O
through	O
in	O
the	O
style	O
of	O
a	O
cook	O
book	O
the	O
chapters	O
can	O
be	O
studied	O
in	O
any	O
order	O
each	O
chapter	O
follows	O
the	O
same	O
pattern	O
a	O
motivation	O
for	O
learning	O
a	O
technique	O
some	O
theory	O
for	O
the	O
technique	O
and	O
a	O
java	O
example	O
program	O
that	O
you	O
can	O
experiment	O
with	O
i	O
have	O
been	O
interested	O
in	O
ai	O
since	O
reading	O
bertram	O
raphael	O
s	O
excellent	O
book	O
thinking	O
computer	O
mind	O
inside	O
matter	O
in	O
the	O
early	O
i	O
have	O
also	O
had	O
the	O
good	O
fortune	O
to	O
work	O
on	O
many	O
interesting	O
ai	O
projects	O
including	O
the	O
development	O
of	O
commercial	O
expert	B
system	I
tools	O
for	O
the	O
xerox	O
lisp	O
machines	O
and	O
the	O
apple	O
macintosh	O
development	O
of	O
commercial	O
neural	B
network	I
tools	O
application	O
of	O
natural	O
language	O
and	O
expert	O
systems	O
technology	O
medical	O
information	O
systems	O
application	O
of	O
ai	O
technologies	O
to	O
nintendo	O
and	O
pc	O
video	O
games	O
and	O
the	O
application	O
of	O
ai	O
technologies	O
to	O
the	O
financial	O
markets	O
i	O
enjoy	O
ai	O
programming	O
and	O
hopefully	O
this	O
enthusiasm	O
will	O
also	O
infect	O
the	O
reader	O
software	O
licenses	O
for	O
example	O
programs	O
in	O
this	O
book	O
my	O
example	O
programs	O
for	O
chapters	O
using	O
open	O
source	O
libraries	O
are	O
released	O
under	O
the	O
same	O
licenses	O
as	O
the	O
libraries	O
drools	B
expert	B
system	I
demos	O
apache	O
style	O
license	O
powerloom	B
reasoning	B
lgpl	O
sesame	B
semantic	B
web	I
lgpl	O
the	O
licenses	O
for	O
the	O
rest	O
of	O
my	O
example	O
programs	O
are	O
in	O
the	O
directory	O
licenses-forbook-code	O
license	O
for	O
commercial	O
use	O
if	O
you	O
purchase	O
a	O
print	O
version	O
of	O
this	O
book	O
or	O
the	O
for-fee	O
pdf	O
version	O
from	O
lulu	O
com	O
then	O
you	O
can	O
use	O
any	O
of	O
my	O
code	O
and	O
data	O
used	O
in	O
the	O
book	O
examples	O
under	O
a	O
non-restrictive	O
license	O
this	O
book	O
can	O
be	O
purchaed	O
at	O
free	O
for	O
non-commercial	O
and	O
academic	O
use	O
if	O
you	O
use	O
the	O
free	O
pdf	O
version	O
xi	O
preface	O
of	O
this	O
book	O
you	O
can	O
use	O
the	O
code	O
and	O
data	O
used	O
in	O
the	O
book	O
examples	O
free	O
for	O
activities	O
that	O
do	O
not	O
generate	O
revenue	O
acknowledgements	O
i	O
would	O
like	O
to	O
thank	O
kevin	O
knight	O
for	O
writing	O
a	O
flexible	O
framework	O
for	O
game	O
search	B
algorithms	O
in	O
common	O
lisp	O
knight	O
and	O
for	O
giving	O
me	O
permission	O
to	O
reuse	O
his	O
framework	O
rewritten	O
in	O
java	O
for	O
some	O
of	O
the	O
examples	O
in	O
chapter	O
i	O
have	O
a	O
library	O
full	O
of	O
books	O
on	O
ai	O
and	O
i	O
would	O
like	O
to	O
thank	O
the	O
authors	O
of	O
all	O
of	O
these	O
books	O
for	O
their	O
influence	O
on	O
my	O
professional	O
life	O
i	O
frequently	O
reference	O
books	O
in	O
the	O
text	O
that	O
have	O
been	O
especially	O
useful	O
to	O
me	O
and	O
that	O
i	O
recommend	O
to	O
my	O
readers	O
in	O
particular	O
i	O
would	O
like	O
to	O
thank	O
the	O
authors	O
of	O
the	O
following	O
two	O
books	O
that	O
have	O
had	O
the	O
most	O
influence	O
on	O
me	O
stuart	O
russell	O
and	O
peter	O
norvig	O
s	O
artificial	O
intelligence	O
a	O
modern	O
approach	O
which	O
i	O
consider	O
to	O
be	O
the	O
best	O
single	O
reference	O
book	O
for	O
ai	O
theory	O
john	O
sowa	O
s	O
book	O
knowledge	B
representation	I
is	O
a	O
resource	O
that	O
i	O
frequently	O
turn	O
to	O
for	O
a	O
holistic	O
treatment	O
of	O
logic	B
philosophy	O
and	O
knowledge	B
representation	I
in	O
general	O
book	O
editor	O
carol	O
watson	O
thanks	O
to	O
the	O
following	O
people	O
who	O
found	O
typos	O
carol	O
watson	O
james	O
fysh	O
joshua	O
cranmer	O
jack	O
marsh	O
jeremy	O
burt	O
jean-marc	O
vanel	O
xii	O
introduction	O
there	O
are	O
many	O
fine	O
books	O
on	O
artificial	O
intelligence	O
and	O
good	O
tutorials	O
and	O
software	O
on	O
the	O
web	O
this	O
book	O
is	O
intended	O
for	O
professional	O
programmers	O
who	O
either	O
already	O
have	O
an	O
interest	O
in	O
ai	O
or	O
need	O
to	O
use	O
specific	O
ai	O
technologies	O
at	O
work	O
the	O
material	O
is	O
not	O
intended	O
as	O
a	O
complete	O
reference	O
for	O
ai	O
theory	O
instead	O
i	O
provide	O
enough	O
theoretical	O
background	O
to	O
understand	O
the	O
example	O
programs	O
and	O
to	O
provide	O
a	O
launching	O
point	O
if	O
you	O
want	O
or	O
need	O
to	O
delve	O
deeper	O
into	O
any	O
of	O
the	O
topics	O
covered	O
other	O
jvm	O
languages	O
the	O
java	O
language	O
and	O
jvm	O
platform	O
are	O
very	O
widely	O
used	O
so	O
that	O
techniques	O
that	O
you	O
learn	O
can	O
be	O
broadly	O
useful	O
there	O
are	O
other	O
jvm	O
languages	O
like	O
jruby	O
clojure	O
jython	O
and	O
scala	O
that	O
can	O
use	O
existing	O
java	O
classes	O
while	O
the	O
examples	O
in	O
this	O
book	O
are	O
written	O
in	O
java	O
you	O
should	O
have	O
little	O
trouble	O
using	O
my	O
java	O
example	O
classes	O
and	O
the	O
open	O
source	O
libraries	O
with	O
these	O
alternative	O
jvm	O
languages	O
why	O
is	O
a	O
pdf	O
version	O
of	O
this	O
book	O
available	O
free	O
on	O
the	O
web	O
i	O
have	O
written	O
books	O
that	O
have	O
been	O
published	O
by	O
the	O
traditional	O
publishers	O
springerverlag	O
mcgraw-hill	O
j	O
wiley	O
morgan	O
kaufman	O
hungry	O
minds	O
mcp	O
and	O
sybex	O
this	O
is	O
my	O
first	O
book	O
that	O
i	O
have	O
produced	O
and	O
published	O
on	O
my	O
own	O
and	O
my	O
motivation	O
for	O
this	O
change	O
is	O
the	O
ability	O
to	O
write	O
for	O
smaller	O
niche	O
markets	O
on	O
topics	O
that	O
most	O
interest	O
me	O
as	O
an	O
author	O
i	O
want	O
to	O
both	O
earn	O
a	O
living	O
writing	O
and	O
have	O
many	O
people	O
read	O
and	O
enjoy	O
my	O
books	O
by	O
offering	O
for	O
sale	O
both	O
a	O
print	O
version	O
and	O
a	O
for-fee	O
pdf	O
version	O
for	O
purchase	O
at	O
i	O
can	O
earn	O
some	O
money	O
for	O
my	O
efforts	O
and	O
also	O
allow	O
readers	O
who	O
can	O
not	O
afford	O
to	O
buy	O
many	O
books	O
or	O
may	O
only	O
be	O
interested	O
in	O
a	O
few	O
chapters	O
of	O
this	O
book	O
to	O
read	O
the	O
free	O
pdf	O
version	O
that	O
is	O
available	O
from	O
my	O
web	O
site	O
introduction	O
please	O
note	O
that	O
i	O
do	O
not	O
give	O
permission	O
to	O
post	O
the	O
free	O
pdf	O
version	O
of	O
this	O
book	O
on	O
other	O
people	O
s	O
web	O
sites	O
i	O
consider	O
this	O
to	O
be	O
commercial	O
exploitation	O
in	O
violation	O
of	O
the	O
creative	O
commons	O
license	O
that	O
i	O
have	O
chosen	O
for	O
this	O
book	O
having	O
my	O
free	O
web	O
books	O
only	O
available	O
on	O
my	O
web	O
site	O
brings	O
viewers	O
to	O
my	O
site	O
and	O
helps	O
attract	O
customers	O
for	O
my	O
consulting	O
business	O
i	O
do	O
encourage	O
you	O
to	O
copy	O
the	O
pdf	O
for	O
this	O
book	O
onto	O
your	O
own	O
computer	O
for	O
local	O
reading	O
and	O
it	O
is	O
fine	O
to	O
email	O
copies	O
of	O
the	O
free	O
pdf	O
to	O
friends	O
if	O
you	O
enjoy	O
reading	O
the	O
no-cost	O
pdf	O
version	O
of	O
this	O
book	O
i	O
would	O
also	O
appreciate	O
it	O
if	O
you	O
would	O
purchase	O
a	O
print	O
copy	O
using	O
the	O
purchase	O
link	O
i	O
thank	O
you	O
for	O
your	O
support	O
book	O
software	O
you	O
can	O
download	O
a	O
large	O
zip	O
file	O
containing	O
all	O
code	O
and	O
test	O
data	O
used	O
in	O
this	O
book	O
from	O
the	O
url	O
all	O
the	O
example	O
code	O
that	O
i	O
have	O
written	O
is	O
covered	O
by	O
the	O
licenses	O
discussed	O
in	O
the	O
preface	O
the	O
code	O
examples	O
usually	O
consist	O
of	O
reusable	O
gui	O
libraries	O
and	O
throwaway	O
text-based	O
test	O
programs	O
to	O
solve	O
a	O
specific	O
application	O
problem	O
in	O
some	O
cases	O
the	O
test	O
code	O
will	O
contain	O
a	O
test	O
or	O
demonstration	O
gui	O
use	O
of	O
java	O
generics	O
and	O
native	O
types	O
in	O
general	O
i	O
usually	O
use	O
java	O
generics	O
and	O
the	O
new	O
collection	O
classes	O
for	O
almost	O
all	O
of	O
my	O
java	O
programming	O
that	O
is	O
also	O
the	O
case	O
for	O
the	O
examples	O
in	O
this	O
book	O
except	O
when	O
using	O
native	O
types	O
and	O
arrays	O
provides	O
a	O
real	O
performance	O
advantage	O
example	O
in	O
the	O
search	B
examples	O
since	O
arrays	O
must	O
contain	O
reifiable	O
types	O
they	O
play	O
poorly	O
with	O
generics	O
so	O
i	O
prefer	O
not	O
to	O
mix	O
coding	O
styles	O
in	O
the	O
same	O
code	O
base	O
there	O
are	O
some	O
obvious	O
cases	O
where	O
not	O
using	O
primitive	O
types	O
leads	O
to	O
excessive	O
object	O
creation	O
and	O
boxingunboxing	O
that	O
said	O
i	O
expect	O
java	O
compilers	O
hotspot	O
and	O
the	O
jvm	O
in	O
general	O
to	O
keep	O
getting	O
better	O
and	O
this	O
may	O
be	O
a	O
non-issue	O
in	O
the	O
future	O
notes	O
on	O
java	O
coding	O
styles	O
used	O
in	O
this	O
book	O
notes	O
on	O
java	O
coding	O
styles	O
used	O
in	O
this	O
book	O
many	O
of	O
the	O
example	O
programs	O
do	O
not	O
strictly	O
follow	O
common	O
java	O
programming	O
idioms	O
this	O
is	O
usually	O
done	O
for	O
brevity	O
for	O
example	O
when	O
a	O
short	O
example	O
is	O
all	O
in	O
one	O
java	O
package	O
i	O
will	O
save	O
lines	O
of	O
code	O
and	O
programing	O
listing	O
space	O
by	O
not	O
declaring	O
class	O
data	O
private	O
with	O
public	O
getters	O
and	O
setters	O
instead	O
i	O
will	O
sometimes	O
simply	O
use	O
package	O
visibility	O
as	O
in	O
this	O
example	O
public	O
static	O
class	O
problem	O
constants	O
for	O
appliance	O
types	O
enum	O
appliance	O
microwave	O
tv	O
dvd	O
constants	O
for	O
problem	O
types	O
enum	O
problemtype	O
smoking	O
on	O
fire	O
makes	O
noise	O
constants	O
for	O
environmental	O
data	O
enum	O
environmentaldescription	O
lights	O
off	O
in	O
room	O
appliance	O
appliancetype	O
listproblemtype	O
problemtypes	O
new	O
arraylistproblemtype	O
listenvironmentaldescription	O
environmentaldata	O
new	O
arraylistenvironmentaldescription	O
etc	O
please	O
understand	O
that	O
i	O
do	O
not	O
advocate	O
this	O
style	O
of	O
programming	O
in	O
large	O
projects	O
but	O
one	O
challenge	O
in	O
writing	O
about	O
software	O
development	O
is	O
the	O
requirement	O
to	O
make	O
the	O
examples	O
short	O
and	O
easily	O
read	O
and	O
understood	O
many	O
of	O
the	O
examples	O
started	O
as	O
large	O
code	O
bases	O
for	O
my	O
own	O
projects	O
that	O
i	O
whittled	O
down	O
to	O
a	O
small	O
size	O
to	O
show	O
one	O
or	O
two	O
specific	O
techniques	O
forgoing	O
the	O
use	O
of	O
getters	O
and	O
setters	O
in	O
many	O
of	O
the	O
examples	O
is	O
just	O
another	O
way	O
to	O
shorten	O
the	O
examples	O
authors	O
of	O
programming	O
books	O
are	O
faced	O
with	O
a	O
problem	O
in	O
formatting	O
program	O
snippets	O
limited	O
page	O
width	O
you	O
will	O
frequently	O
see	O
what	O
would	O
be	O
a	O
single	O
line	O
in	O
a	O
java	O
source	O
file	O
split	O
over	O
two	O
or	O
three	O
lines	O
to	O
accommodate	O
limited	O
page	O
width	O
as	O
seen	O
in	O
this	O
example	O
private	O
static	O
void	O
createtestfactsworkingmemory	O
workingmemory	O
throws	O
exception	O
introduction	O
book	O
summary	O
chapter	O
is	O
the	O
introduction	O
for	O
this	O
book	O
chapter	O
deals	O
with	O
heuristic	O
search	B
in	O
two	O
domains	O
two-dimensional	O
grids	O
example	O
mazes	O
and	O
graphs	O
by	O
nodes	O
and	O
edges	O
connecting	O
nodes	O
chapter	O
covers	O
logic	B
knowledge	B
representation	I
and	O
reasoning	B
using	O
the	O
powerloom	B
system	O
chapter	O
covers	O
the	O
semantic	B
web	I
you	O
will	O
learn	O
how	O
to	O
use	O
rdf	B
and	O
rdfs	B
data	O
for	O
knowledge	B
representation	I
and	O
how	O
to	O
use	O
the	O
popular	O
sesame	B
open	O
source	O
semantic	B
web	I
system	O
chapter	O
introduces	O
you	O
to	O
rule-based	O
or	O
production	O
systems	O
we	O
will	O
use	O
the	O
open	O
source	O
drools	B
system	O
to	O
implement	O
simple	O
expert	O
systems	O
for	O
solving	O
blocks	O
world	O
problems	O
and	O
to	O
simulate	O
a	O
help	O
desk	O
system	O
chapter	O
gives	O
an	O
overview	O
of	O
genetic	O
algorithms	O
provides	O
a	O
java	O
library	O
and	O
solves	O
a	O
test	O
problem	O
the	O
chapter	O
ends	O
with	O
suggestions	O
for	O
projects	O
you	O
might	O
want	O
to	O
try	O
chapter	O
introduces	O
hopfield	O
and	O
back	B
propagation	I
neural	O
networks	O
in	O
addition	O
to	O
java	O
libraries	O
you	O
can	O
use	O
in	O
your	O
own	O
projects	O
we	O
will	O
use	O
two	O
swing-based	O
java	O
applications	O
to	O
visualize	O
how	O
neural	O
networks	O
are	O
trained	O
chapter	O
introduces	O
you	O
to	O
the	O
gpled	O
weka	B
project	O
weka	B
is	O
a	O
best	O
of	O
breed	O
toolkit	O
for	O
solving	O
a	O
wide	O
range	O
of	O
machine	B
learning	I
problems	O
chapter	O
covers	O
several	O
statistical	O
natural	O
language	O
processing	O
techniques	O
that	O
i	O
often	O
use	O
in	O
my	O
own	O
work	O
processing	O
text	O
stemming	O
and	O
determining	O
part	O
of	O
speech	O
named	B
entity	I
extraction	I
from	O
text	O
using	O
the	O
wordnet	B
lexical	O
database	O
automatically	O
assigning	O
tags	O
to	O
text	O
text	B
clustering	I
three	O
different	O
approaches	O
to	O
spelling	B
correction	O
and	O
a	O
short	O
tutorial	O
on	O
markov	B
models	I
chapter	O
provides	O
useful	O
techniques	O
for	O
gathering	O
and	O
using	O
information	O
using	O
the	O
open	B
calais	I
web	O
services	O
for	O
extracting	O
semantic	O
information	O
from	O
text	O
information	O
discovery	O
in	O
relational	O
databases	O
and	O
three	O
different	O
approaches	O
to	O
indexing	B
and	O
searching	O
text	O
search	B
early	O
ai	O
research	O
emphasized	O
the	O
optimization	O
of	O
search	B
algorithms	O
this	O
approach	O
made	O
a	O
lot	O
of	O
sense	O
because	O
many	O
ai	O
tasks	O
can	O
be	O
solved	O
effectively	O
by	O
defining	O
state	O
spaces	O
and	O
using	O
search	B
algorithms	O
to	O
define	O
and	O
explore	O
search	B
trees	O
in	O
this	O
state	O
space	O
search	B
programs	O
were	O
frequently	O
made	O
tractable	O
by	O
using	O
heuristics	O
to	O
limit	O
areas	O
of	O
search	B
in	O
these	O
search	B
trees	O
this	O
use	O
of	O
heuristics	O
converts	O
intractable	O
problems	O
to	O
solvable	O
problems	O
by	O
compromising	O
the	O
quality	O
of	O
solutions	O
this	O
trade	O
off	O
of	O
less	O
computational	O
complexity	O
for	O
less	O
than	O
optimal	O
solutions	O
has	O
become	O
a	O
standard	O
design	O
pattern	O
for	O
ai	O
programming	O
we	O
will	O
see	O
in	O
this	O
chapter	O
that	O
we	O
trade	O
off	O
memory	O
for	O
faster	O
computation	O
time	O
and	O
better	O
results	O
often	O
by	O
storing	O
extra	O
data	O
we	O
can	O
make	O
search	B
time	O
faster	O
and	O
make	O
future	O
searches	O
in	O
the	O
same	O
search	B
space	O
even	O
more	O
efficient	O
what	O
are	O
the	O
limitations	O
of	O
search	B
early	O
on	O
search	B
applied	O
to	O
problems	O
like	O
checkers	O
and	O
chess	B
misled	O
early	O
researchers	O
into	O
underestimating	O
the	O
extreme	O
difficulty	O
of	O
writing	O
software	O
that	O
performs	O
tasks	O
in	O
domains	O
that	O
require	O
general	O
world	O
knowledge	O
or	O
deal	O
with	O
complex	O
and	O
changing	O
environments	O
these	O
types	O
of	O
problems	O
usually	O
require	O
the	O
understanding	O
and	O
then	O
the	O
implementation	O
of	O
domain	O
specific	O
knowledge	O
in	O
this	O
chapter	O
we	O
will	O
use	O
three	O
search	B
problem	O
domains	O
for	O
studying	O
search	B
algorithms	O
path	O
finding	O
in	O
a	O
maze	O
path	O
finding	O
in	O
a	O
graph	O
and	O
alpha-beta	B
search	B
in	O
the	O
games	O
tic-tac-toe	B
and	O
chess	B
representation	O
of	O
search	B
state	O
space	O
and	O
search	B
operators	O
we	O
will	O
use	O
a	O
single	O
search	B
tree	I
representation	O
in	O
graph	O
search	B
and	O
maze	O
search	B
examples	O
in	O
this	O
chapter	O
search	B
trees	O
consist	O
of	O
nodes	O
that	O
define	O
locations	O
in	O
state	O
space	O
and	O
links	O
to	O
other	O
nodes	O
for	O
some	O
small	O
problems	O
the	O
search	B
tree	I
can	O
be	O
easily	O
specified	O
statically	O
for	O
example	O
when	O
performing	O
search	B
in	O
game	O
mazes	O
we	O
can	O
compute	O
and	O
save	O
a	O
search	B
tree	I
for	O
the	O
entire	O
state	O
space	O
of	O
the	O
maze	O
for	O
many	O
problems	O
it	O
is	O
impossible	O
to	O
completely	O
enumerate	O
a	O
search	B
tree	I
for	O
a	O
state	O
space	O
so	O
we	O
must	O
define	O
successor	O
node	O
search	B
operators	O
that	O
for	O
a	O
given	O
node	O
produce	O
all	O
nodes	O
that	O
can	O
be	O
reached	O
from	O
the	O
current	O
node	O
in	O
one	O
step	O
for	O
example	O
in	O
the	O
search	B
game	O
of	O
chess	B
we	O
can	O
not	O
possibly	O
enumerate	O
the	O
search	B
tree	I
for	O
all	O
possible	O
games	O
of	O
chess	B
so	O
we	O
define	O
a	O
successor	O
node	O
search	B
operator	O
that	O
given	O
a	O
board	O
position	O
by	O
a	O
node	O
in	O
the	O
search	B
tree	I
calculates	O
all	O
possible	O
moves	O
for	O
either	O
the	O
white	O
or	O
black	O
pieces	O
the	O
possible	O
chess	B
moves	O
are	O
calculated	O
by	O
a	O
successor	O
node	O
search	B
operator	O
and	O
are	O
represented	O
by	O
newly	O
calculated	O
nodes	O
that	O
are	O
linked	O
to	O
the	O
previous	O
node	O
note	O
that	O
even	O
when	O
it	O
is	O
simple	O
to	O
fully	O
enumerate	O
a	O
search	B
tree	I
as	O
in	O
the	O
game	O
maze	O
example	O
we	O
still	O
might	O
want	O
to	O
generate	O
the	O
search	B
tree	I
dynamically	O
as	O
we	O
will	O
do	O
in	O
this	O
chapter	O
for	O
calculating	O
a	O
search	B
tree	I
we	O
use	O
a	O
graph	O
we	O
will	O
represent	O
graphs	O
as	O
node	O
with	O
links	O
between	O
some	O
of	O
the	O
nodes	O
for	O
solving	O
puzzles	O
and	O
for	O
game	O
related	O
search	B
we	O
will	O
represent	O
positions	O
in	O
the	O
search	B
space	O
with	O
java	O
objects	O
called	O
nodes	O
nodes	O
contain	O
arrays	O
of	O
references	O
to	O
both	O
child	O
and	O
parent	O
nodes	O
a	O
search	B
space	O
using	O
this	O
node	O
representation	O
can	O
be	O
viewed	O
as	O
a	O
directed	O
graph	O
or	O
a	O
tree	O
the	O
node	O
that	O
has	O
no	O
parent	O
nodes	O
is	O
the	O
root	O
node	O
and	O
all	O
nodes	O
that	O
have	O
no	O
child	O
nodes	O
a	O
called	O
leaf	O
nodes	O
search	B
operators	O
are	O
used	O
to	O
move	O
from	O
one	O
point	O
in	O
the	O
search	B
space	O
to	O
another	O
we	O
deal	O
with	O
quantized	O
search	B
spaces	O
in	O
this	O
chapter	O
but	O
search	B
spaces	O
can	O
also	O
be	O
continuous	O
in	O
some	O
applications	O
often	O
search	B
spaces	O
are	O
either	O
very	O
large	O
or	O
are	O
infinite	O
in	O
these	O
cases	O
we	O
implicitly	O
define	O
a	O
search	B
space	O
using	O
some	O
algorithm	O
for	O
extending	O
the	O
space	O
from	O
our	O
reference	O
position	O
in	O
the	O
space	O
figure	O
shows	O
representations	O
of	O
search	B
space	O
as	O
both	O
connected	O
nodes	O
in	O
a	O
graph	O
and	O
as	O
a	O
twodimensional	O
grid	O
with	O
arrows	O
indicating	O
possible	O
movement	O
from	O
a	O
reference	O
point	O
denoted	O
by	O
r	O
when	O
we	O
specify	O
a	O
search	B
space	O
as	O
a	O
two-dimensional	O
array	O
search	B
operators	O
will	O
move	O
the	O
point	O
of	O
reference	O
in	O
the	O
search	B
space	O
from	O
a	O
specific	O
grid	O
location	O
to	O
an	O
adjoining	O
grid	O
location	O
for	O
some	O
applications	O
search	B
operators	O
are	O
limited	O
to	O
moving	O
updownleftright	O
and	O
in	O
other	O
applications	O
operators	O
can	O
additionally	O
move	O
the	O
reference	O
location	O
diagonally	O
when	O
we	O
specify	O
a	O
search	B
space	O
using	O
node	O
representation	O
search	B
operators	O
can	O
move	O
the	O
reference	O
point	O
down	O
to	O
any	O
child	O
node	O
or	O
up	O
to	O
the	O
parent	O
node	O
for	O
search	B
spaces	O
that	O
are	O
represented	O
implicitly	O
search	B
operators	O
are	O
also	O
responsible	O
for	O
determining	O
legal	O
child	O
nodes	O
if	O
any	O
from	O
the	O
reference	O
point	O
note	O
that	O
i	O
use	O
different	O
libraries	O
for	O
the	O
maze	O
and	O
graph	O
search	B
examples	O
finding	O
paths	O
in	O
mazes	O
the	O
example	O
program	O
used	O
in	O
this	O
section	O
is	O
mazesearch	O
java	O
in	O
the	O
directory	O
srcsearchmaze	O
and	O
i	O
assume	O
that	O
the	O
reader	O
has	O
downloaded	O
the	O
entire	O
example	O
zip	O
file	O
for	O
this	O
book	O
and	O
placed	O
the	O
source	O
files	O
for	O
the	O
examples	O
in	O
a	O
convenient	O
place	O
finding	O
paths	O
in	O
mazes	O
figure	O
a	O
directed	O
graph	O
representation	O
is	O
shown	O
on	O
the	O
left	O
and	O
a	O
twodimensional	O
grid	O
maze	O
representation	O
is	O
shown	O
on	O
the	O
right	O
in	O
both	O
representations	O
the	O
letter	O
r	O
is	O
used	O
to	O
represent	O
the	O
current	O
position	O
reference	O
point	O
and	O
the	O
arrowheads	O
indicate	O
legal	O
moves	O
generated	O
by	O
a	O
search	B
operator	O
in	O
the	O
maze	O
representation	O
the	O
two	O
grid	O
cells	O
marked	O
with	O
an	O
x	O
indicate	O
that	O
a	O
search	B
operator	O
cannot	O
generate	O
this	O
grid	O
location	O
figure	O
shows	O
the	O
uml	O
class	O
diagram	O
for	O
the	O
maze	O
search	B
classes	O
depth	O
first	O
and	O
breadth	O
first	O
search	B
the	O
abstract	O
base	O
class	O
abstractsearchengine	O
contains	O
common	O
code	O
and	O
data	O
that	O
is	O
required	O
by	O
both	O
the	O
classes	O
depthf	O
irstsearch	O
and	O
breadthf	O
irstsearch	O
the	O
class	O
m	O
aze	O
is	O
used	O
to	O
record	O
the	O
data	O
for	O
a	O
twodimensional	O
maze	O
including	O
which	O
grid	O
locations	O
contain	O
walls	O
or	O
obstacles	O
the	O
class	O
m	O
aze	O
defines	O
three	O
static	O
short	O
integer	O
values	O
used	O
to	O
indicate	O
obstacles	O
the	O
starting	O
location	O
and	O
the	O
ending	O
location	O
the	O
java	O
class	O
m	O
aze	O
defines	O
the	O
search	B
space	O
this	O
class	O
allocates	O
a	O
two-dimensional	O
array	O
of	O
short	O
integers	O
to	O
represent	O
the	O
state	O
of	O
any	O
grid	O
location	O
in	O
the	O
maze	O
whenever	O
we	O
need	O
to	O
store	O
a	O
pair	O
of	O
integers	O
we	O
will	O
use	O
an	O
instance	O
of	O
the	O
standard	O
java	O
class	O
java	O
awt	O
dimension	O
which	O
has	O
two	O
integer	O
data	O
components	O
width	O
and	O
height	O
whenever	O
we	O
need	O
to	O
store	O
an	O
x-y	O
grid	O
location	O
we	O
create	O
a	O
new	O
dimension	O
object	O
required	O
and	O
store	O
the	O
x	O
coordinate	O
in	O
dimension	O
width	O
and	O
the	O
y	O
coordinate	O
in	O
dimension	O
height	O
as	O
in	O
the	O
right-hand	O
side	O
of	O
figure	O
the	O
operator	O
for	O
moving	O
through	O
the	O
search	B
space	O
from	O
given	O
x-y	O
coordinates	O
allows	O
a	O
transition	O
to	O
any	O
adjacent	O
grid	O
location	O
that	O
is	O
empty	O
the	O
maze	O
class	O
also	O
contains	O
the	O
x-y	O
location	O
for	O
the	O
starting	O
location	O
and	O
goal	O
location	O
note	O
that	O
for	O
these	O
examples	O
the	O
class	O
maze	O
sets	O
the	O
starting	O
location	O
to	O
grid	O
coordinates	O
left	O
corner	O
of	O
the	O
maze	O
in	O
the	O
figures	O
to	O
follow	O
and	O
the	O
goal	O
node	O
in	O
right	O
corner	O
in	O
the	O
following	O
figures	O
rr	O
search	B
figure	O
uml	O
class	O
diagram	O
for	O
the	O
maze	O
search	B
java	O
classes	O
the	O
abstract	O
class	O
abstractsearchengine	O
is	O
the	O
base	O
class	O
for	O
both	O
the	O
depth	O
first	O
a	O
stack	O
to	O
store	O
moves	O
search	B
class	O
depthf	O
irstsearchengine	O
and	O
the	O
breadth	O
first	O
a	O
queue	O
to	O
store	O
moves	O
search	B
class	O
breadthf	O
irstsearchengine	O
we	O
will	O
start	O
by	O
looking	O
at	O
the	O
common	O
data	O
and	O
behavior	O
defined	O
in	O
abstractsearchengine	O
the	O
class	O
constructor	O
has	O
two	O
required	O
arguments	O
the	O
width	O
and	O
height	O
of	O
the	O
maze	O
measured	O
in	O
grid	O
cells	O
the	O
constructor	O
defines	O
an	O
instance	O
of	O
the	O
m	O
aze	O
class	O
of	O
the	O
desired	O
size	O
and	O
then	O
calls	O
the	O
utility	O
method	O
initsearch	O
to	O
allocate	O
an	O
array	O
searchp	O
ath	O
of	O
dimension	O
objects	O
which	O
will	O
be	O
used	O
to	O
record	O
the	O
path	O
traversed	O
through	O
the	O
maze	O
the	O
abstract	O
base	O
class	O
also	O
defines	O
other	O
utility	O
methods	O
checks	O
to	O
see	O
if	O
two	O
arguments	O
of	O
type	O
dimension	O
are	O
the	O
same	O
getp	O
ossiblem	O
ovesdimensionlocation	O
returns	O
an	O
array	O
of	O
dimension	O
objects	O
that	O
can	O
be	O
moved	O
to	O
from	O
the	O
specified	O
location	O
this	O
implements	O
the	O
movement	O
operator	O
now	O
we	O
will	O
look	O
at	O
the	O
depth	O
first	O
search	B
procedure	O
the	O
constructor	O
for	O
the	O
derived	O
class	O
depthf	O
irstsearchengine	O
calls	O
the	O
base	O
class	O
constructor	O
and	O
then	O
solves	O
the	O
search	B
problem	O
by	O
calling	O
the	O
method	O
iteratesearch	O
we	O
will	O
look	O
at	O
this	O
method	O
in	O
some	O
detail	O
the	O
arguments	O
to	O
iteratesearch	O
specify	O
the	O
current	O
location	O
and	O
the	O
current	O
search	B
depth	O
mazegetvalue	O
shortsetvalue	O
voidmazeabstractsearchenginegetpath	O
dimension	O
main	O
test	O
programs	O
using	O
finding	O
paths	O
in	O
mazes	O
private	O
void	O
iteratesearchdimension	O
loc	O
int	O
depth	O
the	O
class	O
variable	O
issearching	O
is	O
used	O
to	O
halt	O
search	B
avoiding	O
more	O
solutions	O
once	O
one	O
path	O
to	O
the	O
goal	O
is	O
found	O
if	O
false	O
return	O
we	O
set	O
the	O
maze	O
value	O
to	O
the	O
depth	O
for	O
display	O
purposes	O
only	O
maze	O
setvalueloc	O
width	O
loc	O
height	O
here	O
we	O
use	O
the	O
super	O
class	O
getp	O
ossiblem	O
oves	O
method	O
to	O
get	O
an	O
array	O
of	O
possible	O
neighboring	O
squares	O
that	O
we	O
could	O
move	O
to	O
we	O
then	O
loop	O
over	O
the	O
four	O
possible	O
moves	O
null	O
value	O
in	O
the	O
array	O
indicates	O
an	O
illegal	O
move	O
dimension	O
moves	O
getpossiblemovesloc	O
for	O
i	O
if	O
null	O
break	O
out	O
of	O
possible	O
moves	O
from	O
this	O
location	O
record	O
the	O
next	O
move	O
in	O
the	O
search	B
path	O
array	O
and	O
check	O
to	O
see	O
if	O
we	O
are	O
done	O
searchpathdepth	O
movesi	O
if	O
goalloc	O
system	O
out	O
printlnfound	O
the	O
goal	O
at	O
movesi	O
width	O
movesi	O
height	O
issearching	O
false	O
maxdepth	O
depth	O
return	O
else	O
if	O
the	O
next	O
possible	O
move	O
is	O
not	O
the	O
goal	O
move	O
we	O
recursively	O
call	O
the	O
iteratesearch	O
method	O
again	O
but	O
starting	O
from	O
this	O
new	O
location	O
and	O
increasing	O
the	O
depth	O
counter	O
by	O
one	O
iteratesearchmovesi	O
depth	O
if	O
false	O
return	O
search	B
figure	O
using	O
depth	O
first	O
search	B
to	O
find	O
a	O
path	O
in	O
a	O
maze	O
finds	O
a	O
non-optimal	O
solution	O
figure	O
shows	O
how	O
poor	O
a	O
path	O
a	O
depth	O
first	O
search	B
can	O
find	O
between	O
the	O
start	O
and	O
goal	O
locations	O
in	O
the	O
maze	O
the	O
maze	O
is	O
a	O
grid	O
the	O
letter	O
s	O
marks	O
the	O
starting	O
location	O
in	O
the	O
upper	O
left	O
corner	O
and	O
the	O
goal	O
position	O
is	O
marked	O
with	O
a	O
g	O
in	O
the	O
lower	O
right	O
corner	O
of	O
the	O
grid	O
blocked	O
grid	O
cells	O
are	O
painted	O
light	O
gray	O
the	O
basic	O
problem	O
with	O
the	O
depth	O
first	O
search	B
is	O
that	O
the	O
search	B
engine	O
will	O
often	O
start	O
searching	O
in	O
a	O
bad	O
direction	O
but	O
still	O
find	O
a	O
path	O
eventually	O
even	O
given	O
a	O
poor	O
start	O
the	O
advantage	O
of	O
a	O
depth	O
first	O
search	B
over	O
a	O
breadth	O
first	O
search	B
is	O
that	O
the	O
depth	O
first	O
search	B
requires	O
much	O
less	O
memory	O
we	O
will	O
see	O
that	O
possible	O
moves	O
for	O
depth	O
first	O
search	B
are	O
stored	O
on	O
a	O
stack	O
in	O
first	O
out	O
data	O
structure	O
and	O
possible	O
moves	O
for	O
a	O
breadth	O
first	O
search	B
are	O
stored	O
in	O
a	O
queue	O
in	O
first	O
out	O
data	O
structure	O
the	O
derived	O
class	O
breadthf	O
irstsearch	O
is	O
similar	O
to	O
the	O
depthf	O
irstsearch	O
procedure	O
with	O
one	O
major	O
difference	O
from	O
a	O
specified	O
search	B
location	O
we	O
calculate	O
all	O
possible	O
moves	O
and	O
make	O
one	O
possible	O
trial	O
move	O
at	O
a	O
time	O
we	O
use	O
a	O
queue	O
data	O
structure	O
for	O
storing	O
possible	O
moves	O
placing	O
possible	O
moves	O
on	O
the	O
back	O
of	O
the	O
queue	O
as	O
they	O
are	O
calculated	O
and	O
pulling	O
test	O
moves	O
from	O
the	O
front	O
of	O
the	O
queue	O
the	O
finding	O
paths	O
in	O
mazes	O
effect	O
of	O
a	O
breadth	O
first	O
search	B
is	O
that	O
it	O
fans	O
out	O
uniformly	O
from	O
the	O
starting	O
node	O
until	O
the	O
goal	O
node	O
is	O
found	O
the	O
class	O
constructor	O
for	O
breadthf	O
irstsearch	O
calls	O
the	O
super	O
class	O
constructor	O
to	O
initialize	O
the	O
maze	O
and	O
then	O
uses	O
the	O
auxiliary	O
method	O
for	O
performing	O
a	O
breadth	O
first	O
search	B
for	O
the	O
goal	O
we	O
will	O
look	O
at	O
the	O
class	O
breadthf	O
irstsearch	O
in	O
some	O
detail	O
breadth	O
first	O
search	B
uses	O
a	O
queue	O
instead	O
of	O
a	O
stack	O
first	O
search	B
to	O
store	O
possible	O
moves	O
the	O
utility	O
class	O
dimensionqueue	O
implements	O
a	O
standard	O
queue	O
data	O
structure	O
that	O
handles	O
instances	O
of	O
the	O
class	O
dimension	O
the	O
method	O
is	O
not	O
recursive	O
it	O
uses	O
a	O
loop	O
to	O
add	O
new	O
search	B
positions	O
to	O
the	O
end	O
of	O
an	O
instance	O
of	O
class	O
dimensionqueue	O
and	O
to	O
remove	O
and	O
test	O
new	O
locations	O
from	O
the	O
front	O
of	O
the	O
queue	O
the	O
two-dimensional	O
array	O
allreadyv	O
isited	O
keeps	O
us	O
from	O
searching	O
the	O
same	O
location	O
twice	O
to	O
calculate	O
the	O
shortest	O
path	O
after	O
the	O
goal	O
is	O
found	O
we	O
use	O
the	O
predecessor	O
array	O
private	O
void	O
int	O
width	O
maze	O
getwidth	O
int	O
height	O
maze	O
getheight	O
boolean	O
alreadyvisitedflag	O
new	O
booleanwidthheight	O
dimension	O
predecessor	O
new	O
dimensionwidthheight	O
dimensionqueue	O
queue	O
new	O
dimensionqueue	O
for	O
iwidth	O
i	O
for	O
jheight	O
j	O
alreadyvisitedflagij	O
false	O
predecessorij	O
null	O
we	O
start	O
the	O
search	B
by	O
setting	O
the	O
already	O
visited	O
flag	O
for	O
the	O
starting	O
location	O
to	O
true	O
value	O
and	O
adding	O
the	O
starting	O
location	O
to	O
the	O
back	O
of	O
the	O
queue	O
alreadyvisitedflagstartloc	O
widthstartloc	O
height	O
true	O
queue	O
addtobackofqueuestartloc	O
boolean	O
success	O
false	O
this	O
outer	O
loop	O
runs	O
until	O
either	O
the	O
queue	O
is	O
empty	O
or	O
the	O
goal	O
is	O
found	O
outer	O
while	O
false	O
search	B
we	O
peek	O
at	O
the	O
dimension	O
object	O
at	O
the	O
front	O
of	O
the	O
queue	O
do	O
not	O
remove	O
it	O
and	O
get	O
the	O
adjacent	O
locations	O
to	O
the	O
current	O
position	O
in	O
the	O
maze	O
dimension	O
head	O
queue	O
peekatfrontofqueue	O
dimension	O
connected	O
getpossiblemoveshead	O
we	O
loop	O
over	O
each	O
possible	O
move	O
if	O
the	O
possible	O
move	O
is	O
valid	O
not	O
null	O
and	O
if	O
we	O
have	O
not	O
already	O
visited	O
the	O
possible	O
move	O
location	O
then	O
we	O
add	O
the	O
possible	O
move	O
to	O
the	O
back	O
of	O
the	O
queue	O
and	O
set	O
the	O
predecessor	O
array	O
for	O
the	O
new	O
location	O
to	O
the	O
last	O
square	O
visited	O
is	O
the	O
value	O
from	O
the	O
front	O
of	O
the	O
queue	O
if	O
we	O
find	O
the	O
goal	O
break	O
out	O
of	O
the	O
loop	O
for	O
i	O
if	O
null	O
break	O
int	O
w	O
connectedi	O
width	O
int	O
h	O
connectedi	O
height	O
if	O
false	O
alreadyvisitedflagwh	O
true	O
predecessorwh	O
head	O
queue	O
addtobackofqueueconnectedi	O
if	O
goalloc	O
success	O
true	O
break	O
outer	O
we	O
are	O
done	O
we	O
have	O
processed	O
the	O
location	O
at	O
the	O
front	O
of	O
the	O
queue	O
the	O
variable	O
head	O
so	O
remove	O
it	O
queue	O
removefromfrontofqueue	O
now	O
that	O
we	O
are	O
out	O
of	O
the	O
main	O
loop	O
we	O
need	O
to	O
use	O
the	O
predecessor	O
array	O
to	O
get	O
the	O
shortest	O
path	O
note	O
that	O
we	O
fill	O
in	O
the	O
searchp	O
ath	O
array	O
in	O
reverse	O
order	O
starting	O
with	O
the	O
goal	O
location	O
maxdepth	O
if	O
searchpathmaxdepth	O
goalloc	O
finding	O
paths	O
in	O
graphs	O
for	O
i	O
searchpathmaxdepth	O
predecessorsearchpathmaxdepth	O
widthsearchpathmaxdepth	O
height	O
maxdepth	O
if	O
startloc	O
break	O
back	O
to	O
starting	O
node	O
figure	O
shows	O
a	O
good	O
path	O
solution	O
between	O
starting	O
and	O
goal	O
nodes	O
starting	O
from	O
the	O
initial	O
position	O
the	O
breadth	O
first	O
search	B
engine	O
adds	O
all	O
possible	O
moves	O
to	O
the	O
back	O
of	O
a	O
queue	O
data	O
structure	O
for	O
each	O
possible	O
move	O
added	O
to	O
this	O
queue	O
in	O
one	O
search	B
cycle	O
all	O
possible	O
moves	O
are	O
added	O
to	O
the	O
queue	O
for	O
each	O
new	O
move	O
recorded	O
visually	O
think	O
of	O
possible	O
moves	O
added	O
to	O
the	O
queue	O
as	O
fanning	O
out	O
like	O
a	O
wave	O
from	O
the	O
starting	O
location	O
the	O
breadth	O
first	O
search	B
engine	O
stops	O
when	O
this	O
wave	O
reaches	O
the	O
goal	O
location	O
in	O
general	O
i	O
prefer	O
breadth	O
first	O
search	B
techniques	O
to	O
depth	O
first	O
search	B
techniques	O
when	O
memory	O
storage	O
for	O
the	O
queue	O
used	O
in	O
the	O
search	B
process	O
is	O
not	O
an	O
issue	O
in	O
general	O
the	O
memory	O
requirements	O
for	O
performing	O
depth	O
first	O
search	B
is	O
much	O
less	O
than	O
breadth	O
first	O
search	B
to	O
run	O
the	O
two	O
example	O
programs	O
from	O
this	O
section	O
change	O
directory	O
to	O
srcsearchmaze	O
and	O
type	O
javac	O
java	O
mazedepthfirstsearch	O
java	O
mazebreadthfirstsearch	O
note	O
that	O
the	O
classes	O
m	O
azedepthf	O
irstsearch	O
and	O
m	O
azebreadthf	O
irstsearch	O
are	O
simple	O
java	O
jfc	O
applications	O
that	O
produced	O
figures	O
and	O
the	O
interested	O
reader	O
can	O
read	O
through	O
the	O
source	O
code	O
for	O
the	O
gui	O
test	O
programs	O
but	O
we	O
will	O
only	O
cover	O
the	O
core	O
ai	O
code	O
in	O
this	O
book	O
if	O
you	O
are	O
interested	O
in	O
the	O
gui	O
test	O
programs	O
and	O
you	O
are	O
not	O
familiar	O
with	O
the	O
java	O
jfc	O
swing	O
classes	O
there	O
are	O
several	O
good	O
tutorials	O
on	O
jfc	O
programming	O
at	O
java	O
sun	O
com	O
finding	O
paths	O
in	O
graphs	O
in	O
the	O
last	O
section	O
we	O
used	O
both	O
depth	O
first	O
and	O
breadth	O
first	O
search	B
techniques	O
to	O
find	O
a	O
path	O
between	O
a	O
starting	O
location	O
and	O
a	O
goal	O
location	O
in	O
a	O
maze	O
another	O
common	O
search	B
figure	O
using	O
breadth	O
first	O
search	B
in	O
a	O
maze	O
to	O
find	O
an	O
optimal	O
solution	O
type	O
of	O
search	B
space	O
is	O
represented	O
by	O
a	O
graph	O
a	O
graph	O
is	O
a	O
set	O
of	O
nodes	O
and	O
links	O
we	O
characterize	O
nodes	O
as	O
containing	O
the	O
following	O
data	O
a	O
name	O
andor	O
other	O
data	O
zero	O
or	O
more	O
links	O
to	O
other	O
nodes	O
a	O
position	O
in	O
space	O
is	O
optional	O
usually	O
for	O
display	O
or	O
visualization	O
pur	O
poses	O
links	O
between	O
nodes	O
are	O
often	O
called	O
edges	O
the	O
algorithms	O
used	O
for	O
finding	O
paths	O
in	O
graphs	O
are	O
very	O
similar	O
to	O
finding	O
paths	O
in	O
a	O
two-dimensional	O
maze	O
the	O
primary	O
difference	O
is	O
the	O
operators	O
that	O
allow	O
us	O
to	O
move	O
from	O
one	O
node	O
to	O
another	O
in	O
the	O
last	O
section	O
we	O
saw	O
that	O
in	O
a	O
maze	O
an	O
agent	O
can	O
move	O
from	O
one	O
grid	O
space	O
to	O
another	O
if	O
the	O
target	O
space	O
is	O
empty	O
for	O
graph	O
search	B
a	O
movement	O
operator	O
allows	O
movement	O
to	O
another	O
node	O
if	O
there	O
is	O
a	O
link	O
to	O
the	O
target	O
node	O
figure	O
shows	O
the	O
uml	O
class	O
diagram	O
for	O
the	O
graph	O
search	B
java	O
classes	O
that	O
we	O
will	O
use	O
in	O
this	O
section	O
the	O
abstract	O
class	O
abstractgraphsearch	O
class	O
is	O
the	O
base	O
class	O
for	O
both	O
depthf	O
irstsearch	O
and	O
breadthf	O
irstsearch	O
the	O
classes	O
graphdepthf	O
irstsearch	O
and	O
graphbreadthf	O
irstsearch	O
and	O
test	O
programs	O
also	O
provide	O
a	O
java	O
foundation	O
class	O
or	O
swing	O
based	O
user	O
interface	O
these	O
two	O
test	O
programs	O
produced	O
figures	O
and	O
finding	O
paths	O
in	O
graphs	O
figure	O
uml	O
class	O
diagram	O
for	O
the	O
graph	O
search	B
classes	O
name	O
intgetnodenameint	O
index	O
stringaddnodestring	O
name	O
int	O
x	O
int	O
y	O
voidgetnodenameint	O
index	O
stringgetnodexint	O
index	O
intgetnodeyint	O
index	O
index	O
index	O
intaddlinkint	O
int	O
voidfindpath	O
intabstractgraphsearchfindpathint	O
start	O
node	O
int	O
goal	O
node	O
intdepthfirstsearchfindpathint	O
start	O
node	O
int	O
goal	O
node	O
intbreadthfirstsearchmainstring	O
args	O
voidpaintnodegraphics	O
g	O
string	O
name	O
int	O
x	O
int	O
y	O
voidpaintgraphics	O
g	O
voidgraphdepthfirstsearchmainstring	O
args	O
voidpaintnodegraphics	O
g	O
string	O
name	O
int	O
x	O
int	O
y	O
voidpaintgraphics	O
g	O
voidgraphdepthfirstsearchjava	O
main	O
test	O
programs	O
using	O
search	B
as	O
seen	O
in	O
figure	O
most	O
of	O
the	O
data	O
for	O
the	O
search	B
operations	O
nodes	O
links	O
etc	O
is	O
defined	O
in	O
the	O
abstract	O
class	O
abstractgraphsearch	O
this	O
abstract	O
class	O
is	O
customized	O
through	O
inheritance	O
to	O
use	O
a	O
stack	O
for	O
storing	O
possible	O
moves	O
the	O
array	O
path	O
for	O
depth	O
first	O
search	B
and	O
a	O
queue	O
for	O
breadth	O
first	O
search	B
the	O
abstract	O
class	O
abstractgraphsearch	O
allocates	O
data	O
required	O
by	O
both	O
derived	O
classes	O
final	O
public	O
static	O
int	O
max	O
protected	O
int	O
path	O
new	O
intabstractgraphsearch	O
max	O
protected	O
int	O
num	O
path	O
for	O
nodes	O
protected	O
string	O
nodenames	O
new	O
stringmax	O
protected	O
int	O
node	O
x	O
new	O
intmax	O
protected	O
int	O
node	O
y	O
new	O
intmax	O
for	O
links	O
between	O
nodes	O
protected	O
int	O
new	O
intmax	O
protected	O
int	O
new	O
intmax	O
protected	O
int	O
lengths	O
new	O
intmax	O
protected	O
int	O
numnodes	O
protected	O
int	O
numlinks	O
protected	O
int	O
goalnodeindex	O
startnodeindex	O
the	O
abstract	O
base	O
class	O
also	O
provides	O
several	O
common	O
utility	O
methods	O
addnodestring	O
name	O
int	O
x	O
int	O
y	O
adds	O
a	O
new	O
node	O
addlinkint	O
int	O
adds	O
a	O
bidirectional	O
link	O
between	O
nodes	O
indexed	O
by	O
and	O
node	O
indexes	O
start	O
at	O
zero	O
and	O
are	O
in	O
the	O
order	O
of	O
calling	O
addnode	O
addlinkstring	O
string	O
adds	O
a	O
bidirectional	O
link	O
between	O
nodes	O
spec	O
ified	O
by	O
their	O
names	O
getnumnodes	O
returns	O
the	O
number	O
of	O
nodes	O
getnumlinks	O
returns	O
the	O
number	O
of	O
links	O
getnodenameint	O
index	O
returns	O
a	O
node	O
s	O
name	O
getnodex	O
getnodey	O
return	O
the	O
coordinates	O
of	O
a	O
node	O
getnodeindexstring	O
name	O
gets	O
the	O
index	O
of	O
a	O
node	O
given	O
its	O
name	O
finding	O
paths	O
in	O
graphs	O
the	O
abstract	O
base	O
class	O
defines	O
an	O
abstract	O
method	O
f	O
indp	O
ath	O
that	O
must	O
be	O
overridden	O
we	O
will	O
start	O
with	O
the	O
derived	O
class	O
depthf	O
irstsearch	O
looking	O
at	O
its	O
implementation	O
of	O
findpath	O
the	O
f	O
indp	O
ath	O
method	O
returns	O
an	O
array	O
of	O
node	O
indices	O
indicating	O
the	O
calculated	O
path	O
public	O
int	O
findpathint	O
start	O
node	O
int	O
goal	O
node	O
the	O
class	O
variable	O
path	O
is	O
an	O
array	O
that	O
is	O
used	O
for	O
temporary	O
storage	O
we	O
set	O
the	O
first	O
element	O
to	O
the	O
starting	O
node	O
index	O
and	O
call	O
the	O
utility	O
method	O
f	O
indp	O
athhelper	O
start	O
node	O
the	O
starting	O
node	O
return	O
findpathhelperpath	O
goal	O
node	O
the	O
method	O
findpathhelper	O
is	O
the	O
interesting	O
method	O
in	O
this	O
class	O
that	O
actually	O
performs	O
the	O
depth	O
first	O
search	B
we	O
will	O
look	O
at	O
it	O
in	O
some	O
detail	O
the	O
path	O
array	O
is	O
used	O
as	O
a	O
stack	O
to	O
keep	O
track	O
of	O
which	O
nodes	O
are	O
being	O
visited	O
during	O
the	O
search	B
the	O
argument	O
num	O
path	O
is	O
the	O
number	O
of	O
locations	O
in	O
the	O
path	O
which	O
is	O
also	O
the	O
search	B
depth	O
public	O
int	O
findpathhelperint	O
path	O
int	O
num	O
path	O
int	O
goal	O
node	O
first	O
re-check	O
to	O
see	O
if	O
we	O
have	O
reached	O
the	O
goal	O
node	O
if	O
we	O
have	O
make	O
a	O
new	O
array	O
of	O
the	O
current	O
size	O
and	O
copy	O
the	O
path	O
into	O
it	O
this	O
new	O
array	O
is	O
returned	O
as	O
the	O
value	O
of	O
the	O
method	O
if	O
pathnum	O
path	O
int	O
ret	O
new	O
intnum	O
path	O
for	O
inum	O
path	O
i	O
reti	O
pathi	O
return	O
ret	O
we	O
are	O
done	O
we	O
have	O
not	O
found	O
the	O
goal	O
node	O
so	O
call	O
the	O
method	O
connected	O
nodes	O
to	O
find	O
all	O
nodes	O
connected	O
to	O
the	O
current	O
node	O
that	O
are	O
not	O
already	O
on	O
the	O
search	B
path	O
the	O
source	O
code	O
for	O
the	O
implementation	O
of	O
connected	O
nodes	O
search	B
int	O
new	O
nodes	O
connected	O
nodespath	O
num	O
path	O
if	O
there	O
are	O
still	O
connected	O
nodes	O
to	O
search	B
add	O
the	O
next	O
possible	O
node	O
to	O
visit	O
to	O
the	O
top	O
of	O
the	O
stack	O
path	O
in	O
the	O
program	O
and	O
recursively	O
call	O
the	O
method	O
f	O
indp	O
athhelper	O
again	O
if	O
null	O
for	O
jnew	O
nodes	O
length	O
j	O
pathnum	O
path	O
new	O
nodesj	O
int	O
test	O
findpathhelpernew	O
path	O
num	O
path	O
goal	O
node	O
if	O
null	O
if	O
goal	O
node	O
return	O
test	O
if	O
we	O
have	O
not	O
found	O
the	O
goal	O
node	O
return	O
null	O
instead	O
of	O
an	O
array	O
of	O
node	O
indices	O
return	O
null	O
derived	O
class	O
breadthf	O
irstsearch	O
also	O
must	O
define	O
abstract	O
method	O
f	O
indp	O
ath	O
this	O
method	O
is	O
very	O
similar	O
to	O
the	O
breadth	O
first	O
search	B
method	O
used	O
for	O
finding	O
a	O
path	O
in	O
a	O
maze	O
a	O
queue	O
is	O
used	O
to	O
store	O
possible	O
moves	O
for	O
a	O
maze	O
we	O
used	O
a	O
queue	O
class	O
that	O
stored	O
instances	O
of	O
the	O
class	O
dimension	O
so	O
for	O
this	O
problem	O
the	O
queue	O
only	O
needs	O
to	O
store	O
integer	O
node	O
indices	O
the	O
return	O
value	O
of	O
f	O
indp	O
ath	O
is	O
an	O
array	O
of	O
node	O
indices	O
that	O
make	O
up	O
the	O
path	O
from	O
the	O
starting	O
node	O
to	O
the	O
goal	O
public	O
int	O
findpathint	O
start	O
node	O
int	O
goal	O
node	O
we	O
start	O
by	O
setting	O
up	O
a	O
flag	O
array	O
alreadyv	O
isited	O
to	O
prevent	O
visiting	O
the	O
same	O
node	O
twice	O
and	O
allocating	O
a	O
predecessors	O
array	O
that	O
we	O
will	O
use	O
to	O
find	O
the	O
shortest	O
path	O
once	O
the	O
goal	O
is	O
reached	O
data	O
structures	O
for	O
depth	O
first	O
search	B
finding	O
paths	O
in	O
graphs	O
boolean	O
alreadyvisitedflag	O
int	O
predecessor	O
new	O
intnumnodes	O
new	O
booleannumnodes	O
the	O
class	O
intqueue	O
is	O
a	O
private	O
class	O
defined	O
in	O
the	O
file	O
breadthfirstsearch	O
java	O
it	O
implements	O
a	O
standard	O
queue	O
intqueue	O
queue	O
new	O
intqueuenumnodes	O
before	O
the	O
main	O
loop	O
we	O
need	O
to	O
initialize	O
the	O
already	O
visited	O
and	O
predecessor	O
arrays	O
set	O
the	O
visited	O
flag	O
for	O
the	O
starting	O
node	O
to	O
true	O
and	O
add	O
the	O
starting	O
node	O
index	O
to	O
the	O
back	O
of	O
the	O
queue	O
for	O
inumnodes	O
i	O
alreadyvisitedflagi	O
false	O
predecessori	O
alreadyvisitedflagstart	O
node	O
true	O
queue	O
addtobackofqueuestart	O
node	O
the	O
main	O
loop	O
runs	O
until	O
we	O
find	O
the	O
goal	O
node	O
or	O
the	O
search	B
queue	O
is	O
empty	O
outer	O
while	O
false	O
we	O
will	O
read	O
removing	O
the	O
node	O
index	O
at	O
the	O
front	O
of	O
the	O
queue	O
and	O
calculate	O
the	O
nodes	O
that	O
are	O
connected	O
to	O
the	O
current	O
node	O
not	O
already	O
on	O
the	O
visited	O
list	O
using	O
the	O
connected	O
nodes	O
method	O
interested	O
reader	O
can	O
see	O
the	O
implementation	O
in	O
the	O
source	O
code	O
for	O
this	O
class	O
int	O
head	O
queue	O
peekatfrontofqueue	O
int	O
connected	O
connected	O
nodeshead	O
if	O
null	O
if	O
each	O
node	O
connected	O
by	O
a	O
link	O
to	O
the	O
current	O
node	O
has	O
not	O
already	O
been	O
visited	O
set	O
the	O
predecessor	O
array	O
and	O
add	O
the	O
new	O
node	O
index	O
to	O
the	O
back	O
of	O
the	O
search	B
queue	O
we	O
stop	O
if	O
the	O
goal	O
is	O
found	O
for	O
iconnected	O
length	O
i	O
if	O
false	O
predecessorconnectedi	O
head	O
search	B
queue	O
addtobackofqueueconnectedi	O
if	O
goal	O
node	O
break	O
outer	O
alreadyvisitedflaghead	O
true	O
queue	O
removefromqueue	O
ignore	O
return	O
value	O
now	O
that	O
the	O
goal	O
node	O
has	O
been	O
found	O
we	O
can	O
build	O
a	O
new	O
array	O
of	O
returned	O
node	O
indices	O
for	O
the	O
calculated	O
path	O
using	O
the	O
predecessor	O
array	O
int	O
ret	O
new	O
intnumnodes	O
int	O
count	O
retcount	O
goal	O
node	O
for	O
inumnodes	O
i	O
retcount	O
predecessorretcount	O
count	O
if	O
start	O
node	O
break	O
int	O
new	O
intcount	O
for	O
icount	O
i	O
retcount	O
i	O
return	O
in	O
order	O
to	O
run	O
both	O
the	O
depth	O
first	O
and	O
breadth	O
first	O
graph	O
search	B
examples	O
change	O
directory	O
to	O
src-search-maze	O
and	O
type	O
the	O
following	O
commands	O
javac	O
java	O
graphdepthfirstsearch	O
java	O
graphbeadthfirstsearch	O
figure	O
shows	O
the	O
results	O
of	O
finding	O
a	O
route	O
from	O
node	O
to	O
node	O
in	O
the	O
small	O
test	O
graph	O
like	O
the	O
depth	O
first	O
results	O
seen	O
in	O
the	O
maze	O
search	B
this	O
path	O
is	O
not	O
optimal	O
figure	O
shows	O
an	O
optimal	O
path	O
found	O
using	O
a	O
breadth	O
first	O
search	B
as	O
we	O
saw	O
in	O
the	O
maze	O
search	B
example	O
we	O
find	O
optimal	O
solutions	O
using	O
breadth	O
first	O
search	B
at	O
the	O
cost	O
of	O
extra	O
memory	O
required	O
for	O
the	O
breadth	O
first	O
search	B
finding	O
paths	O
in	O
graphs	O
figure	O
using	O
depth	O
first	O
search	B
in	O
a	O
sample	O
graph	O
figure	O
using	O
breadth	O
first	O
search	B
in	O
a	O
sample	O
graph	O
search	B
adding	O
heuristics	O
to	O
breadth	O
first	O
search	B
we	O
can	O
usually	O
make	O
breadth	O
first	O
search	B
more	O
efficient	O
by	O
ordering	O
the	O
search	B
order	O
for	O
all	O
branches	O
from	O
a	O
given	O
position	O
in	O
the	O
search	B
space	O
for	O
example	O
when	O
adding	O
new	O
nodes	O
from	O
a	O
specified	O
reference	O
point	O
in	O
the	O
search	B
space	O
we	O
might	O
want	O
to	O
add	O
nodes	O
to	O
the	O
search	B
queue	O
first	O
that	O
are	O
in	O
the	O
direction	O
of	O
the	O
goal	O
location	O
in	O
a	O
two-dimensional	O
search	B
like	O
our	O
maze	O
search	B
we	O
might	O
want	O
to	O
search	B
connected	O
grid	O
cells	O
first	O
that	O
were	O
closest	O
to	O
the	O
goal	O
grid	O
space	O
in	O
this	O
case	O
pre-sorting	O
nodes	O
order	O
of	O
closest	O
distance	O
to	O
the	O
goal	O
added	O
to	O
the	O
breadth	O
first	O
search	B
queue	O
could	O
have	O
a	O
dramatic	O
effect	O
on	O
search	B
efficiency	O
in	O
the	O
next	O
chapter	O
we	O
will	O
build	O
a	O
simple	O
real-time	O
planning	O
system	O
around	O
our	O
breadth	O
first	O
maze	O
search	B
program	O
this	O
new	O
program	O
will	O
use	O
heuristics	O
the	O
alpha-beta	O
additions	O
to	O
breadth	O
first	O
search	B
are	O
seen	O
in	O
in	O
the	O
next	O
section	O
search	B
and	O
game	B
playing	I
now	O
that	O
a	O
computer	O
program	O
has	O
won	O
a	O
match	O
against	O
the	O
human	O
world	O
champion	O
perhaps	O
people	O
s	O
expectations	O
of	O
ai	O
systems	O
will	O
be	O
prematurely	O
optimistic	O
game	O
search	B
techniques	O
are	O
not	O
real	O
ai	O
but	O
rather	O
standard	O
programming	O
techniques	O
a	O
better	O
platform	O
for	O
doing	O
ai	O
research	O
is	O
the	O
game	O
of	O
go	O
there	O
are	O
so	O
many	O
possible	O
moves	O
in	O
the	O
game	O
of	O
go	O
that	O
brute	O
force	O
look	O
ahead	O
is	O
used	O
in	O
chess	B
playing	O
programs	O
simply	O
does	O
not	O
work	O
that	O
said	O
min-max	O
type	O
search	B
algorithms	O
with	O
alpha-beta	O
cutoff	O
optimizations	O
are	O
an	O
important	O
programming	O
technique	O
and	O
will	O
be	O
covered	O
in	O
some	O
detail	O
in	O
the	O
remainder	O
of	O
this	O
chapter	O
we	O
will	O
design	O
an	O
abstract	O
java	O
class	O
library	O
for	O
implementing	O
alpha-beta	O
enhanced	O
min-max	O
search	B
and	O
then	O
use	O
this	O
framework	O
to	O
write	O
programs	O
to	O
play	O
tic-tac-toe	B
and	O
chess	B
alpha-beta	B
search	B
the	O
first	O
game	O
that	O
we	O
will	O
implement	O
will	O
be	O
tic-tac-toe	B
so	O
we	O
will	O
use	O
this	O
simple	O
game	O
to	O
explain	O
how	O
the	O
min-max	O
search	B
alpha-beta	O
cutoffs	O
works	O
figure	O
shows	O
the	O
possible	O
moves	O
generated	O
from	O
a	O
tic-tac-toe	B
position	O
where	O
x	O
has	O
made	O
three	O
moves	O
and	O
o	O
has	O
made	O
two	O
moves	O
it	O
is	O
o	O
s	O
turn	O
to	O
move	O
this	O
is	O
level	O
in	O
figure	O
at	O
level	O
o	O
has	O
four	O
possible	O
moves	O
how	O
do	O
we	O
assign	O
a	O
fitness	B
value	O
to	O
each	O
of	O
o	O
s	O
possible	O
moves	O
at	O
level	O
the	O
basic	O
min-max	O
search	B
algorithm	O
provides	O
a	O
simple	O
solution	O
to	O
this	O
problem	O
for	O
each	O
possible	O
move	O
by	O
o	O
in	O
level	O
make	O
the	O
move	O
and	O
store	O
the	O
resulting	O
board	O
positions	O
now	O
at	O
level	O
it	O
is	O
x	O
s	O
turn	O
to	O
move	O
how	O
do	O
we	O
assign	O
values	O
to	O
each	O
of	O
x	O
s	O
possible	O
three	O
moves	O
search	B
and	O
game	B
playing	I
figure	O
alpha-beta	O
algorithm	O
applied	O
to	O
part	O
of	O
a	O
game	O
of	O
tic-tac-toe	B
in	O
figure	O
simple	O
we	O
continue	O
to	O
search	B
by	O
making	O
each	O
of	O
x	O
s	O
possible	O
moves	O
and	O
storing	O
each	O
possible	O
board	O
position	O
for	O
level	O
we	O
keep	O
recursively	O
applying	O
this	O
algorithm	O
until	O
we	O
either	O
reach	O
a	O
maximum	O
search	B
depth	O
or	O
there	O
is	O
a	O
win	O
loss	O
or	O
draw	O
detected	O
in	O
a	O
generated	O
move	O
we	O
assume	O
that	O
there	O
is	O
a	O
fitness	B
function	O
available	O
that	O
rates	O
a	O
given	O
board	O
position	O
relative	O
to	O
either	O
side	O
note	O
that	O
the	O
value	O
of	O
any	O
board	O
position	O
for	O
x	O
is	O
the	O
negative	O
of	O
the	O
value	O
for	O
o	O
to	O
make	O
the	O
search	B
more	O
efficient	O
we	O
maintain	O
values	O
for	O
alpha	O
and	O
beta	O
for	O
each	O
search	B
level	O
alpha	O
and	O
beta	O
determine	O
the	O
best	O
possibleworst	O
possible	O
move	O
available	O
at	O
a	O
given	O
level	O
if	O
we	O
reach	O
a	O
situation	O
like	O
the	O
second	O
position	O
in	O
level	O
where	O
x	O
has	O
won	O
then	O
we	O
can	O
immediately	O
determine	O
that	O
o	O
s	O
last	O
move	O
in	O
level	O
that	O
produced	O
this	O
position	O
allowing	O
x	O
an	O
instant	O
win	O
is	O
a	O
low	O
valued	O
move	O
for	O
o	O
a	O
high	O
valued	O
move	O
for	O
x	O
this	O
allows	O
us	O
to	O
immediately	O
prune	O
the	O
search	B
tree	I
by	O
ignoring	O
all	O
other	O
possible	O
positions	O
arising	O
from	O
the	O
first	O
o	O
move	O
in	O
level	O
this	O
alpha-beta	O
cutoff	O
tree	O
pruning	O
procedure	O
can	O
save	O
a	O
large	O
percentage	O
of	O
search	B
time	O
especially	O
if	O
we	O
can	O
set	O
the	O
search	B
order	O
at	O
each	O
level	O
with	O
probably	O
best	O
moves	O
considered	O
first	O
while	O
tree	O
diagrams	O
as	O
seen	O
in	O
figure	O
quickly	O
get	O
complicated	O
it	O
is	O
easy	O
for	O
a	O
computer	O
program	O
to	O
generate	O
possible	O
moves	O
calculate	O
new	O
possible	O
board	O
positions	O
and	O
temporarily	O
store	O
them	O
and	O
recursively	O
apply	O
the	O
same	O
procedure	O
to	O
the	O
next	O
search	B
level	O
switching	O
min-max	O
sides	O
in	O
the	O
board	O
evaluation	O
we	O
will	O
see	O
in	O
the	O
next	O
section	O
that	O
it	O
only	O
requires	O
about	O
lines	O
of	O
java	O
code	O
to	O
implement	O
an	O
abstract	O
class	O
framework	O
for	O
handling	O
the	O
details	O
of	O
performing	O
an	O
alpha-beta	O
enhanced	O
search	B
the	O
additional	O
game	O
specific	O
classes	O
for	O
tic-tac-toe	B
require	O
about	O
an	O
additional	O
lines	O
of	O
code	O
to	O
implement	O
chess	B
requires	O
an	O
additional	O
lines	O
of	O
code	O
xxxxxxxxxxxxxxxxxxxxxxxxxxooooooooooooooooooooooolevel	O
to	O
movelevel	O
to	O
movelevel	O
to	O
move	O
search	B
a	O
java	O
framework	O
for	O
search	B
and	O
game	B
playing	I
the	O
general	O
interface	O
for	O
the	O
java	O
classes	O
that	O
we	O
will	O
develop	O
in	O
this	O
section	O
was	O
inspired	O
by	O
the	O
common	O
lisp	O
game-playing	O
framework	O
written	O
by	O
kevin	O
knight	O
and	O
described	O
in	O
knight	O
the	O
abstract	O
class	O
gamesearch	O
contains	O
the	O
code	O
for	O
running	O
a	O
two-player	O
game	O
and	O
performing	O
an	O
alpha-beta	B
search	B
this	O
class	O
needs	O
to	O
be	O
sub-classed	O
to	O
provide	O
the	O
eight	O
methods	O
public	O
abstract	O
boolean	O
drawnpositionposition	O
p	O
public	O
abstract	O
boolean	O
wonpositionposition	O
p	O
positionevaluationposition	O
p	O
boolean	O
player	O
boolean	O
player	O
public	O
abstract	O
void	O
printpositionposition	O
p	O
public	O
abstract	O
position	O
possiblemovesposition	O
p	O
boolean	O
player	O
public	O
abstract	O
position	O
makemoveposition	O
p	O
boolean	O
player	O
move	O
move	O
public	O
abstract	O
boolean	O
reachedmaxdepthposition	O
p	O
int	O
depth	O
public	O
abstract	O
move	O
getmove	O
the	O
method	O
drawnp	O
osition	O
should	O
return	O
a	O
boolean	O
true	O
value	O
if	O
the	O
given	O
position	O
evaluates	O
to	O
a	O
draw	O
situation	O
the	O
method	O
wonp	O
osition	O
should	O
return	O
a	O
true	O
value	O
if	O
the	O
input	O
position	O
is	O
won	O
for	O
the	O
indicated	O
player	O
by	O
convention	O
i	O
use	O
a	O
boolean	O
true	O
value	O
to	O
represent	O
the	O
computer	O
and	O
a	O
boolean	O
false	O
value	O
to	O
represent	O
the	O
human	O
opponent	O
the	O
method	O
positionevaluation	O
returns	O
a	O
position	O
evaluation	O
for	O
a	O
specified	O
board	O
position	O
and	O
player	O
note	O
that	O
if	O
we	O
call	O
positionevaluation	O
switching	O
the	O
player	O
for	O
the	O
same	O
board	O
position	O
then	O
the	O
value	O
returned	O
is	O
the	O
negative	O
of	O
the	O
value	O
calculated	O
for	O
the	O
opposing	O
player	O
the	O
method	O
possiblem	O
oves	O
returns	O
an	O
array	O
of	O
objects	O
belonging	O
to	O
the	O
class	O
position	O
in	O
an	O
actual	O
game	O
like	O
chess	B
the	O
position	O
objects	O
will	O
actually	O
belong	O
to	O
a	O
chess-specific	O
refinement	O
of	O
the	O
position	O
class	O
for	O
the	O
chess	B
program	O
developed	O
later	O
in	O
this	O
chapter	O
the	O
method	O
possiblem	O
oves	O
will	O
return	O
an	O
array	O
of	O
chessp	O
osition	O
objects	O
the	O
method	O
makem	O
ove	O
will	O
return	O
a	O
new	O
position	O
object	O
for	O
a	O
specified	O
board	O
position	O
side	O
to	O
move	O
and	O
move	O
the	O
method	O
reachedm	O
axdepth	O
returns	O
a	O
boolean	O
true	O
value	O
if	O
the	O
search	B
process	O
has	O
reached	O
a	O
satisfactory	O
depth	O
for	O
the	O
tic-tac-toe	B
program	O
the	O
method	O
reachedm	O
axdepth	O
does	O
not	O
return	O
true	O
unless	O
either	O
side	O
has	O
won	O
the	O
game	O
or	O
the	O
board	O
is	O
full	O
for	O
the	O
chess	B
program	O
the	O
method	O
reachedm	O
axdepth	O
returns	O
true	O
if	O
the	O
search	B
has	O
reached	O
a	O
depth	O
of	O
half	O
moves	O
deep	O
is	O
not	O
the	O
best	O
strategy	O
but	O
it	O
has	O
the	O
advantage	O
of	O
making	O
the	O
example	O
search	B
and	O
game	B
playing	I
program	O
short	O
and	O
easy	O
to	O
understand	O
the	O
method	O
getm	O
ove	O
returns	O
an	O
object	O
of	O
a	O
class	O
derived	O
from	O
the	O
class	O
m	O
ove	O
t	O
ict	O
act	O
oem	O
ove	O
or	O
chessm	O
ove	O
the	O
gamesearch	O
class	O
implements	O
the	O
following	O
methods	O
to	O
perform	O
game	O
search	B
protected	O
vector	O
alphabetaint	O
depth	O
position	O
p	O
protected	O
vector	O
alphabetahelperint	O
depth	O
boolean	O
player	O
position	O
p	O
boolean	O
player	O
float	O
alpha	O
float	O
beta	O
public	O
void	O
playgameposition	O
startingposition	O
boolean	O
humanplayfirst	O
the	O
method	O
alphabeta	O
is	O
simple	O
it	O
calls	O
the	O
helper	O
method	O
alphabetahelper	O
with	O
initial	O
search	B
conditions	O
the	O
method	O
alphabetahelper	O
then	O
calls	O
itself	O
recursively	O
the	O
code	O
for	O
alphabeta	O
is	O
protected	O
vector	O
alphabetaint	O
depth	O
vector	O
v	O
alphabetahelperdepth	O
p	O
player	O
position	O
p	O
boolean	O
player	O
return	O
v	O
it	O
is	O
important	O
to	O
understand	O
what	O
is	O
in	O
the	O
vector	O
returned	O
by	O
the	O
methods	O
alphabeta	O
and	O
alphabetahelper	O
the	O
first	O
element	O
is	O
a	O
floating	O
point	O
position	O
evaluation	O
for	O
the	O
point	O
of	O
view	O
of	O
the	O
player	O
whose	O
turn	O
it	O
is	O
to	O
move	O
the	O
remaining	O
values	O
are	O
the	O
best	O
move	O
for	O
each	O
side	O
to	O
the	O
last	O
search	B
depth	O
as	O
an	O
example	O
if	O
i	O
let	O
the	O
tic-tactoe	O
program	O
play	O
first	O
it	O
places	O
a	O
marker	O
at	O
square	O
index	O
then	O
i	O
place	O
my	O
marker	O
in	O
the	O
center	O
of	O
the	O
board	O
an	O
index	O
at	O
this	O
point	O
to	O
calculate	O
the	O
next	O
computer	O
move	O
alphabeta	O
is	O
called	O
and	O
returns	O
the	O
following	O
elements	O
in	O
a	O
vector	O
next	O
element	O
next	O
element	O
next	O
element	O
next	O
element	O
next	O
element	O
next	O
element	O
next	O
element	O
search	B
next	O
element	O
next	O
element	O
here	O
the	O
alpha-beta	O
enhanced	O
min-max	O
search	B
looked	O
all	O
the	O
way	O
to	O
the	O
end	O
of	O
the	O
game	O
and	O
these	O
board	O
positions	O
represent	O
what	O
the	O
search	B
procedure	O
calculated	O
as	O
the	O
best	O
moves	O
for	O
each	O
side	O
note	O
that	O
the	O
class	O
t	O
ict	O
act	O
oep	O
osition	O
from	O
the	O
abstract	O
class	O
p	O
osition	O
has	O
a	O
tostring	O
method	O
to	O
print	O
the	O
board	O
values	O
to	O
a	O
string	O
the	O
same	O
printout	O
of	O
the	O
returned	O
vector	O
from	O
alphabeta	O
for	O
the	O
chess	B
program	O
is	O
next	O
element	O
next	O
element	O
next	O
element	O
next	O
element	O
next	O
element	O
next	O
element	O
search	B
and	O
game	B
playing	I
here	O
the	O
search	B
procedure	O
assigned	O
the	O
side	O
to	O
move	O
computer	O
a	O
position	O
evaluation	O
score	O
of	O
this	O
is	O
an	O
artifact	O
of	O
searching	O
to	O
a	O
fixed	O
depth	O
notice	O
that	O
the	O
board	O
representation	O
is	O
different	O
for	O
chess	B
but	O
because	O
the	O
gamesearch	O
class	O
manipulates	O
objects	O
derived	O
from	O
the	O
classes	O
p	O
osition	O
and	O
m	O
ove	O
the	O
gamesearch	O
class	O
does	O
not	O
need	O
to	O
have	O
any	O
knowledge	O
of	O
the	O
rules	O
for	O
a	O
specific	O
game	O
we	O
will	O
discuss	O
the	O
format	O
of	O
the	O
chess	B
position	O
class	O
chessp	O
osition	O
in	O
more	O
detail	O
when	O
we	O
develop	O
the	O
chess	B
program	O
the	O
classes	O
move	O
and	O
position	O
contain	O
no	O
data	O
and	O
methods	O
at	O
all	O
the	O
classes	O
move	O
and	O
position	O
are	O
used	O
as	O
placeholders	O
for	O
derived	O
classes	O
for	O
specific	O
games	O
the	O
search	B
methods	O
in	O
the	O
abstract	O
gamesearch	O
class	O
manipulate	O
objects	O
derived	O
from	O
the	O
classes	O
move	O
and	O
position	O
now	O
that	O
we	O
have	O
seen	O
the	O
debug	O
printout	O
of	O
the	O
contents	O
of	O
the	O
vector	O
returned	O
from	O
the	O
methods	O
alphabeta	O
and	O
alphabetahelper	O
it	O
will	O
be	O
easier	O
to	O
understand	O
how	O
the	O
method	O
alphabetahelper	O
works	O
the	O
following	O
text	O
shows	O
code	O
fragments	O
from	O
the	O
alphabetahelper	O
method	O
interspersed	O
with	O
book	O
text	O
protected	O
vector	O
alphabetahelperint	O
depth	O
position	O
p	O
boolean	O
player	O
float	O
alpha	O
float	O
beta	O
here	O
we	O
notice	O
that	O
the	O
method	O
signature	O
is	O
the	O
same	O
as	O
for	O
alphabeta	O
except	O
that	O
we	O
pass	O
floating	O
point	O
alpha	O
and	O
beta	O
values	O
the	O
important	O
point	O
in	O
understanding	O
min-max	O
search	B
is	O
that	O
most	O
of	O
the	O
evaluation	O
work	O
is	O
done	O
while	O
backing	O
up	O
the	O
search	B
tree	I
that	O
is	O
the	O
search	B
proceeds	O
to	O
a	O
leaf	O
node	O
node	O
is	O
a	O
leaf	O
if	O
the	O
method	O
reachedm	O
axdepth	O
return	O
a	O
boolean	O
true	O
value	O
and	O
then	O
a	O
return	O
vector	O
for	O
the	O
leaf	O
node	O
is	O
created	O
by	O
making	O
a	O
new	O
vector	O
and	O
setting	O
its	O
first	O
element	O
to	O
the	O
position	O
evaluation	O
of	O
the	O
position	O
at	O
the	O
leaf	O
node	O
and	O
setting	O
the	O
second	O
element	O
of	O
the	O
return	O
vector	O
to	O
the	O
board	O
position	O
at	O
the	O
leaf	O
node	O
if	O
depth	O
vector	O
v	O
new	O
float	O
value	O
positionevaluationp	O
player	O
v	O
addelementnew	O
floatvalue	O
v	O
addelementp	O
return	O
v	O
if	O
we	O
have	O
not	O
reached	O
the	O
maximum	O
search	B
depth	O
we	O
are	O
not	O
yet	O
at	O
a	O
leaf	O
node	O
in	O
the	O
search	B
tree	I
then	O
we	O
enumerate	O
all	O
possible	O
moves	O
from	O
the	O
current	O
position	O
using	O
the	O
method	O
possiblem	O
oves	O
and	O
recursively	O
call	O
alphabetahelper	O
for	O
each	O
search	B
new	O
generated	O
board	O
position	O
in	O
terms	O
of	O
figure	O
at	O
this	O
point	O
we	O
are	O
moving	O
down	O
to	O
another	O
search	B
level	O
from	O
level	O
to	O
level	O
the	O
level	O
in	O
figure	O
corresponds	O
to	O
depth	O
argument	O
in	O
alphabetahelper	O
vector	O
best	O
new	O
vector	O
position	O
moves	O
possiblemovesp	O
player	O
for	O
imoves	O
length	O
i	O
vector	O
alphabetahelperdepth	O
movesi	O
float	O
value	O
if	O
beta	O
ifgamesearch	O
debug	O
system	O
out	O
println	O
value	O
value	O
beta	O
value	O
best	O
new	O
vector	O
best	O
addelementmovesi	O
enumeration	O
enum	O
enum	O
nextelement	O
skip	O
previous	O
value	O
while	O
object	O
o	O
enum	O
nextelement	O
if	O
null	O
best	O
addelemento	O
use	O
the	O
alpha-beta	O
cutoff	O
test	O
to	O
abort	O
search	B
if	O
we	O
found	O
a	O
move	O
that	O
proves	O
that	O
the	O
previous	O
move	O
in	O
the	O
move	O
chain	O
was	O
dubious	O
if	O
alpha	O
break	O
notice	O
that	O
when	O
we	O
recursively	O
call	O
alphabetahelper	O
we	O
are	O
flipping	O
the	O
player	O
argument	O
to	O
the	O
opposite	O
boolean	O
value	O
after	O
calculating	O
the	O
best	O
move	O
at	O
this	O
depth	O
level	O
we	O
add	O
it	O
to	O
the	O
end	O
of	O
the	O
return	O
vector	O
vector	O
new	O
vector	O
floatbeta	O
enumeration	O
enum	O
best	O
elements	O
search	B
and	O
game	B
playing	I
while	O
return	O
when	O
the	O
recursive	O
calls	O
back	O
up	O
and	O
the	O
first	O
call	O
to	O
alphabetahelper	O
returns	O
a	O
vector	O
to	O
the	O
method	O
alphabeta	O
all	O
of	O
the	O
best	O
moves	O
for	O
each	O
side	O
are	O
stored	O
in	O
the	O
return	O
vector	O
along	O
with	O
the	O
evaluation	O
of	O
the	O
board	O
position	O
for	O
the	O
side	O
to	O
move	O
the	O
class	O
gamesearch	O
method	O
playgame	O
is	O
fairly	O
simple	O
the	O
following	O
code	O
fragment	O
is	O
a	O
partial	O
listing	O
of	O
playgame	O
showing	O
how	O
to	O
call	O
alphabeta	O
getm	O
ove	O
and	O
makem	O
ove	O
public	O
void	O
playgameposition	O
startingposition	O
boolean	O
humanplayfirst	O
system	O
out	O
printlnyour	O
move	O
move	O
move	O
getmove	O
startingposition	O
makemovestartingposition	O
human	O
move	O
printpositionstartingposition	O
vector	O
v	O
startingposition	O
program	O
startingposition	O
the	O
debug	O
printout	O
of	O
the	O
vector	O
returned	O
from	O
the	O
method	O
alphabeta	O
seen	O
earlier	O
in	O
this	O
section	O
was	O
printed	O
using	O
the	O
following	O
code	O
immediately	O
after	O
the	O
call	O
to	O
the	O
method	O
alphabeta	O
enumeration	O
enum	O
v	O
elements	O
while	O
system	O
out	O
println	O
next	O
element	O
enum	O
nextelement	O
in	O
the	O
next	O
few	O
sections	O
we	O
will	O
implement	O
a	O
tic-tac-toe	B
program	O
and	O
a	O
chessplaying	O
program	O
using	O
this	O
java	O
class	O
framework	O
tic-tac-toe	B
using	O
the	O
alpha-beta	B
search	B
algorithm	O
using	O
the	O
java	O
class	O
framework	O
of	O
gamesearch	O
p	O
osition	O
and	O
m	O
ove	O
it	O
is	O
simple	O
to	O
write	O
a	O
basic	O
tic-tac-toe	B
program	O
by	O
writing	O
three	O
new	O
derived	O
classes	O
figure	O
search	B
figure	O
uml	O
class	O
diagrams	O
for	O
game	O
search	B
engine	O
and	O
tic-tac-toe	B
t	O
ict	O
act	O
oe	O
from	O
gamesearch	O
t	O
ict	O
act	O
oem	O
ove	O
from	O
m	O
ove	O
and	O
t	O
ict	O
act	O
oep	O
osition	O
from	O
p	O
osition	O
i	O
assume	O
that	O
the	O
reader	O
has	O
the	O
book	O
example	O
code	O
installed	O
and	O
available	O
for	O
viewing	O
in	O
this	O
section	O
i	O
will	O
only	O
discuss	O
the	O
most	O
interesting	O
details	O
of	O
the	O
tic-tactoe	O
class	O
refinements	O
i	O
assume	O
that	O
the	O
reader	O
can	O
look	O
at	O
the	O
source	O
code	O
we	O
will	O
start	O
by	O
looking	O
at	O
the	O
refinements	O
for	O
the	O
position	O
and	O
move	O
classes	O
the	O
t	O
ict	O
act	O
oem	O
ove	O
class	O
is	O
trivial	O
adding	O
a	O
single	O
integer	O
value	O
to	O
record	O
the	O
square	O
index	O
for	O
the	O
new	O
move	O
public	O
class	O
tictactoemove	O
extends	O
move	O
public	O
int	O
moveindex	O
the	O
board	O
position	O
indices	O
are	O
in	O
the	O
range	O
of	O
and	O
can	O
be	O
considered	O
to	O
be	O
in	O
the	O
following	O
order	O
the	O
class	O
t	O
ict	O
act	O
oep	O
osition	O
is	O
also	O
simple	O
movepositionmoveindex	O
inttictactoemovetostring	O
stringblank	O
inthuman	O
intprogram	O
intboard	O
inttictactoepositionalphabeta	O
arraylistalphabetahelper	O
arraylistplaygame	O
voiddebug	O
booleanprogram	O
booleanhuman	O
booleangamesearchdrawnposition	O
booleanwonposition	O
boolean-wincheck	O
booleanpositionevaluation	O
floatprintposition	O
voidpossiblemoves	O
positionmakemove	O
positionreachedmaxdepth	O
booleanmain	O
voidmove	O
movetictactoe	O
search	B
and	O
game	B
playing	I
public	O
class	O
tictactoeposition	O
extends	O
position	O
final	O
static	O
public	O
int	O
blank	O
final	O
static	O
public	O
int	O
human	O
final	O
static	O
public	O
int	O
program	O
int	O
board	O
new	O
public	O
string	O
tostring	O
stringbuffer	O
sb	O
new	O
stringbuffer	O
for	O
i	O
sb	O
appendboardi	O
sb	O
append	O
return	O
sb	O
tostring	O
this	O
class	O
allocates	O
an	O
array	O
of	O
nine	O
integers	O
to	O
represent	O
the	O
board	O
defines	O
constant	O
values	O
for	O
blank	O
human	O
and	O
computer	O
squares	O
and	O
defines	O
a	O
tostring	O
method	O
to	O
print	O
out	O
the	O
board	O
representation	O
to	O
a	O
string	O
the	O
t	O
ict	O
act	O
oe	O
class	O
must	O
define	O
the	O
following	O
abstract	O
methods	O
from	O
the	O
base	O
class	O
gamesearch	O
public	O
abstract	O
boolean	O
drawnpositionposition	O
p	O
public	O
abstract	O
boolean	O
wonpositionposition	O
p	O
public	O
abstract	O
float	O
positionevaluationposition	O
p	O
boolean	O
player	O
public	O
abstract	O
void	O
printpositionposition	O
p	O
public	O
abstract	O
position	O
possiblemovesposition	O
p	O
boolean	O
player	O
boolean	O
player	O
public	O
abstract	O
position	O
makemoveposition	O
p	O
public	O
abstract	O
boolean	O
reachedmaxdepthposition	O
p	O
int	O
depth	O
public	O
abstract	O
move	O
getmove	O
boolean	O
player	O
move	O
move	O
the	O
implementation	O
of	O
these	O
methods	O
uses	O
the	O
refined	O
classes	O
t	O
ict	O
act	O
oem	O
ove	O
and	O
t	O
ict	O
act	O
oep	O
osition	O
for	O
example	O
consider	O
the	O
method	O
drawnp	O
osition	O
that	O
is	O
responsible	O
for	O
selecting	O
a	O
drawn	O
tied	O
position	O
public	O
boolean	O
drawnpositionposition	O
p	O
boolean	O
ret	O
true	O
tictactoeposition	O
pos	O
search	B
for	O
i	O
if	O
tictactoeposition	O
blank	O
ret	O
false	O
break	O
return	O
ret	O
the	O
overridden	O
methods	O
from	O
the	O
gamesearch	O
base	O
class	O
must	O
always	O
cast	O
arguments	O
of	O
type	O
p	O
osition	O
and	O
m	O
ove	O
to	O
t	O
ict	O
act	O
oep	O
osition	O
and	O
t	O
ict	O
act	O
oem	O
ove	O
note	O
that	O
in	O
the	O
method	O
drawnp	O
osition	O
the	O
argument	O
of	O
class	O
p	O
osition	O
is	O
cast	O
to	O
the	O
class	O
t	O
ict	O
act	O
oep	O
osition	O
a	O
position	O
is	O
considered	O
to	O
be	O
a	O
draw	O
if	O
all	O
of	O
the	O
squares	O
are	O
full	O
we	O
will	O
see	O
that	O
checks	O
for	O
a	O
won	O
position	O
are	O
always	O
made	O
before	O
checks	O
for	O
a	O
drawn	O
position	O
so	O
that	O
the	O
method	O
drawnp	O
osition	O
does	O
not	O
need	O
to	O
make	O
a	O
redundant	O
check	O
for	O
a	O
won	O
position	O
the	O
method	O
wonp	O
osition	O
is	O
also	O
simple	O
it	O
uses	O
a	O
private	O
helper	O
method	O
wincheck	O
to	O
test	O
for	O
all	O
possible	O
winning	O
patterns	O
in	O
tic-tac-toe	B
the	O
method	O
positionevaluation	O
uses	O
the	O
following	O
board	O
features	O
to	O
assign	O
a	O
fitness	B
value	O
from	O
the	O
point	O
of	O
view	O
of	O
either	O
player	O
the	O
number	O
of	O
blank	O
squares	O
on	O
the	O
board	O
if	O
the	O
position	O
is	O
won	O
by	O
either	O
side	O
if	O
the	O
center	O
square	O
is	O
taken	O
the	O
method	O
positionevaluation	O
is	O
simple	O
and	O
is	O
a	O
good	O
place	O
for	O
the	O
interested	O
reader	O
to	O
start	O
modifying	O
both	O
the	O
tic-tac-toe	B
and	O
chess	B
programs	O
public	O
float	O
positionevaluationposition	O
p	O
boolean	O
player	O
int	O
count	O
tictactoeposition	O
pos	O
for	O
i	O
if	O
count	O
count	O
count	O
prefer	O
the	O
center	O
square	O
float	O
base	O
if	O
tictactoeposition	O
human	O
player	O
base	O
if	O
tictactoeposition	O
program	O
search	B
and	O
game	B
playing	I
base	O
float	O
ret	O
if	O
player	O
return	O
base	O
count	O
if	O
return	O
count	O
return	O
ret	O
the	O
only	O
other	O
method	O
that	O
we	O
will	O
look	O
at	O
here	O
is	O
possiblem	O
oves	O
the	O
interested	O
reader	O
can	O
look	O
at	O
the	O
implementation	O
of	O
the	O
other	O
simple	O
methods	O
in	O
the	O
source	O
code	O
the	O
method	O
possiblem	O
oves	O
is	O
called	O
with	O
a	O
current	O
position	O
and	O
the	O
side	O
to	O
move	O
program	O
or	O
human	O
public	O
position	O
possiblemovesposition	O
p	O
tictactoeposition	O
pos	O
int	O
count	O
for	O
i	O
boolean	O
player	O
if	O
count	O
if	O
return	O
null	O
position	O
ret	O
new	O
positioncount	O
count	O
for	O
i	O
if	O
tictactoeposition	O
new	O
tictactoeposition	O
for	O
j	O
pos	O
boardj	O
if	O
else	O
retcount	O
return	O
ret	O
it	O
is	O
very	O
simple	O
to	O
generate	O
possible	O
moves	O
every	O
blank	O
square	O
is	O
a	O
legal	O
move	O
method	O
will	O
not	O
be	O
as	O
straightforward	O
in	O
the	O
example	O
chess	B
program	O
search	B
it	O
is	O
simple	O
to	O
compile	O
and	O
run	O
the	O
example	O
tic-tac-toe	B
program	O
change	O
directory	O
to	O
src-search-game	O
and	O
type	O
javac	O
java	O
tictactoe	O
when	O
asked	O
to	O
enter	O
moves	O
enter	O
an	O
integer	O
between	O
and	O
for	O
a	O
square	O
that	O
is	O
currently	O
blank	O
has	O
a	O
zero	O
value	O
the	O
following	O
shows	O
this	O
labeling	O
of	O
squares	O
on	O
the	O
tic-tac-toe	B
board	O
chess	B
using	O
the	O
alpha-beta	B
search	B
algorithm	O
using	O
the	O
java	O
class	O
framework	O
of	O
gamesearch	O
p	O
osition	O
and	O
m	O
ove	O
it	O
is	O
reasonably	O
easy	O
to	O
write	O
a	O
simple	O
chess	B
program	O
by	O
writing	O
three	O
new	O
derived	O
classes	O
figure	O
chess	B
from	O
gamesearch	O
chessm	O
ove	O
from	O
m	O
ove	O
and	O
chessp	O
osition	O
from	O
p	O
osition	O
the	O
chess	B
program	O
developed	O
in	O
this	O
section	O
is	O
intended	O
to	O
be	O
an	O
easy	O
to	O
understand	O
example	O
of	O
using	O
alphabeta	O
min-max	O
search	B
as	O
such	O
it	O
ignores	O
several	O
details	O
that	O
a	O
fully	O
implemented	O
chess	B
program	O
would	O
implement	O
allow	O
the	O
computer	O
to	O
play	O
either	O
side	O
always	O
plays	O
black	O
in	O
this	O
example	O
allow	O
en-passant	O
pawn	O
captures	O
allow	O
the	O
player	O
to	O
take	O
back	O
a	O
move	O
after	O
making	O
a	O
mistake	O
the	O
reader	O
is	O
assumed	O
to	O
have	O
read	O
the	O
last	O
section	O
on	O
implementing	O
the	O
tic-tactoe	O
game	O
details	O
of	O
refining	O
the	O
gamesearch	O
move	O
and	O
position	O
classes	O
are	O
not	O
repeated	O
in	O
this	O
section	O
figure	O
shows	O
the	O
uml	O
class	O
diagram	O
for	O
both	O
the	O
general	O
purpose	O
gamesearch	O
framework	O
and	O
the	O
classes	O
derived	O
to	O
implement	O
chess	B
specific	O
data	O
and	O
behavior	O
the	O
class	O
chessmove	O
contains	O
data	O
for	O
recording	O
from	O
and	O
to	O
square	O
indices	O
public	O
class	O
chessmove	O
extends	O
move	O
public	O
int	O
from	O
public	O
int	O
to	O
search	B
and	O
game	B
playing	I
figure	O
uml	O
class	O
diagrams	O
for	O
game	O
search	B
engine	O
and	O
chess	B
movepositionfrom	O
intto	O
intchessmovetostring	O
stringblank	O
inthuman	O
intprogram	O
intpawn	O
intknight	O
intbishop	O
introok	O
intqueen	O
intking	O
intboard	O
intchesspositionalphabeta	O
arraylistalphabetahelper	O
arraylistplaygame	O
voiddebug	O
booleanprogram	O
booleanhuman	O
booleangamesearchdrawnposition	O
booleanwonposition	O
boolean-wincheck	O
booleanpositionevaluation	O
floatprintposition	O
voidpossiblemoves	O
positionmakemove	O
positionreachedmaxdepth	O
booleanmain	O
void-setcontroldata	O
void-calcpossiblemoves	O
int-calcpiecemoves	O
intmove	O
move-computercontrol	O
float-humancontrol	O
float-possiblemovelist	O
move-piece	O
moves	O
int-initialboard	O
int-index	O
int-piecemovementtable	O
int-value	O
intchess	O
search	B
figure	O
the	O
example	O
chess	B
program	O
does	O
not	O
contain	O
an	O
opening	O
book	O
so	O
it	O
plays	O
to	O
maximize	O
the	O
mobility	O
of	O
its	O
pieces	O
and	O
maximize	O
material	O
advantage	O
using	O
a	O
two-move	O
lookahead	O
the	O
first	O
version	O
of	O
the	O
chess	B
program	O
contains	O
a	O
few	O
heuristics	O
like	O
wanting	O
to	O
control	O
the	O
center	O
four	O
squares	O
the	O
board	O
is	O
represented	O
as	O
an	O
integer	O
array	O
with	O
elements	O
a	O
chessboard	O
only	O
has	O
squares	O
the	O
remaining	O
board	O
values	O
are	O
set	O
to	O
a	O
special	O
value	O
of	O
which	O
indicates	O
an	O
off	O
board	O
square	O
the	O
initial	O
board	O
setup	O
is	O
defined	O
statically	O
in	O
the	O
chess	B
class	O
and	O
the	O
off-board	O
squares	O
have	O
a	O
value	O
of	O
private	O
static	O
int	O
initialboard	O
black	O
pawns	O
black	O
pieces	O
white	O
pieces	O
white	O
pawns	O
blank	O
squares	O
blank	O
squares	O
blank	O
squares	O
blank	O
squares	O
it	O
is	O
difficult	O
to	O
see	O
from	O
this	O
listing	O
of	O
the	O
board	O
square	O
values	O
but	O
in	O
effect	O
a	O
regular	O
chess	B
board	O
if	O
padded	O
on	O
all	O
sides	O
with	O
two	O
rows	O
and	O
columns	O
of	O
values	O
search	B
and	O
game	B
playing	I
figure	O
continuing	O
the	O
first	O
sample	O
game	O
the	O
computer	O
is	O
looking	O
ahead	O
two	O
moves	O
and	O
no	O
opening	O
book	O
is	O
used	O
we	O
see	O
the	O
start	O
of	O
a	O
sample	O
chess	B
game	O
in	O
figure	O
and	O
the	O
continuation	O
of	O
this	O
same	O
game	O
in	O
figure	O
lookahead	O
is	O
limited	O
to	O
moves	O
ply	O
the	O
class	O
chessp	O
osition	O
contains	O
data	O
for	O
this	O
representation	O
and	O
defines	O
constant	O
values	O
for	O
playing	O
sides	O
and	O
piece	O
types	O
public	O
class	O
chessposition	O
extends	O
position	O
final	O
static	O
public	O
int	O
blank	O
final	O
static	O
public	O
int	O
human	O
final	O
static	O
public	O
int	O
program	O
final	O
static	O
public	O
int	O
pawn	O
final	O
static	O
public	O
int	O
knight	O
final	O
static	O
public	O
int	O
bishop	O
final	O
static	O
public	O
int	O
rook	O
final	O
static	O
public	O
int	O
queen	O
final	O
static	O
public	O
int	O
king	O
int	O
board	O
new	O
public	O
string	O
tostring	O
stringbuffer	O
sb	O
new	O
stringbuffer	O
for	O
i	O
sb	O
appendboardi	O
sb	O
append	O
return	O
sb	O
tostring	O
search	B
the	O
class	O
chess	B
also	O
defines	O
other	O
static	O
data	O
the	O
following	O
array	O
is	O
used	O
to	O
encode	O
the	O
values	O
assigned	O
to	O
each	O
piece	O
type	O
pawns	O
are	O
worth	O
one	O
point	O
knights	O
and	O
bishops	O
are	O
worth	O
points	O
etc	O
private	O
static	O
int	O
value	O
the	O
following	O
array	O
is	O
used	O
to	O
codify	O
the	O
possible	O
incremental	O
moves	O
for	O
pieces	O
private	O
static	O
int	O
piecemovementtable	O
the	O
starting	O
index	O
into	O
the	O
piecemovementtable	O
array	O
is	O
calculated	O
by	O
indexing	B
the	O
following	O
array	O
with	O
the	O
piece	O
type	O
index	O
pawns	O
are	O
piece	O
type	O
knights	O
are	O
piece	O
type	O
bishops	O
are	O
piece	O
type	O
rooks	O
are	O
piece	O
type	O
etc	O
private	O
static	O
int	O
index	O
when	O
we	O
implement	O
the	O
method	O
possiblem	O
oves	O
for	O
the	O
class	O
chess	B
we	O
will	O
see	O
that	O
except	O
for	O
pawn	O
moves	O
all	O
other	O
possible	O
piece	O
type	O
moves	O
are	O
very	O
easy	O
to	O
calculate	O
using	O
this	O
static	O
data	O
the	O
method	O
possiblem	O
oves	O
is	O
simple	O
because	O
it	O
uses	O
a	O
private	O
helper	O
method	O
calcp	O
iecem	O
oves	O
to	O
do	O
the	O
real	O
work	O
the	O
method	O
possiblem	O
oves	O
calculates	O
all	O
possible	O
moves	O
for	O
a	O
given	O
board	O
position	O
and	O
side	O
to	O
move	O
by	O
calling	O
calcp	O
iecem	O
ove	O
for	O
each	O
square	O
index	O
that	O
references	O
a	O
piece	O
for	O
the	O
side	O
to	O
move	O
we	O
need	O
to	O
perform	O
similar	O
actions	O
for	O
calculating	O
possible	O
moves	O
and	O
squares	O
that	O
are	O
controlled	O
by	O
each	O
side	O
in	O
the	O
first	O
version	O
of	O
the	O
class	O
chess	B
that	O
i	O
wrote	O
i	O
used	O
a	O
single	O
method	O
for	O
calculating	O
both	O
possible	O
move	O
squares	O
and	O
controlled	O
squares	O
however	O
the	O
code	O
was	O
difficult	O
to	O
read	O
so	O
i	O
split	O
this	O
initial	O
move	O
generating	O
method	O
out	O
into	O
three	O
methods	O
possiblemoves	O
required	O
because	O
this	O
was	O
an	O
abstract	O
method	O
in	O
gamesearch	O
this	O
method	O
calls	O
calcpiecemoves	O
for	O
all	O
squares	O
containing	O
pieces	O
for	O
the	O
side	O
to	O
move	O
and	O
collects	O
all	O
possible	O
moves	O
search	B
and	O
game	B
playing	I
calcpiecemoves	O
responsible	O
to	O
calculating	O
pawn	O
moves	O
and	O
other	O
piece	O
type	O
moves	O
for	O
a	O
specified	O
square	O
index	O
setcontroldata	O
sets	O
the	O
global	O
array	O
computercontrol	O
and	O
humancontrol	O
this	O
method	O
is	O
similar	O
to	O
a	O
combination	O
of	O
possiblemoves	O
and	O
calcpiecemoves	O
but	O
takes	O
into	O
effect	O
moves	O
onto	O
squares	O
that	O
belong	O
to	O
the	O
same	O
side	O
for	O
calculating	O
the	O
effect	O
of	O
one	O
piece	O
guarding	O
another	O
this	O
control	O
data	O
is	O
used	O
in	O
the	O
board	O
position	O
evaluation	O
method	O
positionevaluation	O
we	O
will	O
discuss	O
calcp	O
iecem	O
oves	O
here	O
and	O
leave	O
it	O
as	O
an	O
exercise	O
to	O
carefully	O
read	O
the	O
similar	O
method	O
setcontroldata	O
in	O
the	O
source	O
code	O
this	O
method	O
places	O
the	O
calculated	O
piece	O
movement	O
data	O
in	O
static	O
storage	O
array	O
piece	O
moves	O
to	O
avoid	O
creating	O
a	O
new	O
java	O
object	O
whenever	O
this	O
method	O
is	O
called	O
method	O
calcp	O
iecem	O
oves	O
returns	O
an	O
integer	O
count	O
of	O
the	O
number	O
of	O
items	O
placed	O
in	O
the	O
static	O
array	O
piece	O
moves	O
the	O
method	O
calcp	O
iecem	O
oves	O
is	O
called	O
with	O
a	O
position	O
and	O
a	O
square	O
index	O
first	O
the	O
piece	O
type	O
and	O
side	O
are	O
determined	O
for	O
the	O
square	O
index	O
private	O
int	O
calcpiecemoveschessposition	O
pos	O
int	O
square	O
index	O
int	O
b	O
pos	O
board	O
int	O
piece	O
bsquare	O
index	O
int	O
piece	O
type	O
piece	O
if	O
piece	O
type	O
int	O
piece	O
index	O
indexpiece	O
type	O
int	O
move	O
index	O
piecemovementtablepiece	O
index	O
if	O
side	O
index	O
else	O
side	O
index	O
then	O
a	O
switch	O
statement	O
controls	O
move	O
generation	O
for	O
each	O
type	O
of	O
chess	B
piece	O
generation	O
code	O
is	O
not	O
shown	O
see	O
the	O
file	O
chess	B
java	O
switch	O
case	O
chessposition	O
pawn	O
break	O
case	O
chessposition	O
knight	O
case	O
chessposition	O
bishop	O
case	O
chessposition	O
rook	O
case	O
chessposition	O
king	O
case	O
chessposition	O
queen	O
break	O
the	O
logic	B
for	O
pawn	O
moves	O
is	O
a	O
little	O
complex	O
but	O
the	O
implementation	O
is	O
simple	O
we	O
start	O
by	O
checking	O
for	O
pawn	O
captures	O
of	O
pieces	O
of	O
the	O
opposite	O
color	O
then	O
check	O
for	O
search	B
initial	O
pawn	O
moves	O
of	O
two	O
squares	O
forward	O
and	O
finally	O
normal	O
pawn	O
moves	O
of	O
one	O
square	O
forward	O
generated	O
possible	O
moves	O
are	O
placed	O
in	O
the	O
static	O
array	O
piece	O
moves	O
and	O
a	O
possible	O
move	O
count	O
is	O
incremented	O
the	O
move	O
logic	B
for	O
knights	O
bishops	O
rooks	O
queens	O
and	O
kings	O
is	O
very	O
simple	O
since	O
it	O
is	O
all	O
table	O
driven	O
first	O
we	O
use	O
the	O
piece	O
type	O
as	O
an	O
index	O
into	O
the	O
static	O
array	O
index	O
this	O
value	O
is	O
then	O
used	O
as	O
an	O
index	O
into	O
the	O
static	O
array	O
piecem	O
ovementt	O
able	O
there	O
are	O
two	O
loops	O
an	O
outer	O
loop	O
fetches	O
the	O
next	O
piece	O
movement	O
delta	O
from	O
the	O
piecem	O
ovementt	O
able	O
array	O
and	O
the	O
inner	O
loop	O
applies	O
the	O
piece	O
movement	O
delta	O
set	O
in	O
the	O
outer	O
loop	O
until	O
the	O
new	O
square	O
index	O
is	O
off	O
the	O
board	O
or	O
runs	O
into	O
a	O
piece	O
on	O
the	O
same	O
side	O
note	O
that	O
for	O
kings	O
and	O
knights	O
the	O
inner	O
loop	O
is	O
only	O
executed	O
one	O
time	O
per	O
iteration	O
through	O
the	O
outer	O
loop	O
move	O
index	O
piece	O
if	O
move	O
index	O
move	O
index	O
indexmove	O
index	O
next	O
square	O
square	O
index	O
piecemovementtablemove	O
index	O
outer	O
while	O
inner	O
while	O
if	O
break	O
inner	O
if	O
break	O
inner	O
if	O
break	O
inner	O
check	O
for	O
piece	O
on	O
the	O
same	O
side	O
if	O
bnext	O
square	O
break	O
inner	O
if	O
bnext	O
square	O
break	O
inner	O
piece	O
movescount	O
next	O
square	O
if	O
break	O
inner	O
if	O
chessposition	O
knight	O
break	O
inner	O
if	O
chessposition	O
king	O
break	O
inner	O
next	O
square	O
piecemovementtablemove	O
index	O
move	O
index	O
if	O
break	O
outer	O
next	O
square	O
square	O
index	O
search	B
and	O
game	B
playing	I
figure	O
second	O
game	O
with	O
a	O
move	O
lookahead	O
piecemovementtablemove	O
index	O
figure	O
shows	O
the	O
start	O
of	O
a	O
second	O
example	O
game	O
the	O
computer	O
was	O
making	O
too	O
many	O
trivial	O
mistakes	O
in	O
the	O
first	O
game	O
so	O
here	O
i	O
increased	O
the	O
lookahead	O
to	O
moves	O
now	O
the	O
computer	O
takes	O
one	O
to	O
two	O
seconds	O
per	O
move	O
and	O
plays	O
a	O
better	O
game	O
increasing	O
the	O
lookahead	O
to	O
full	O
moves	O
yields	O
a	O
better	O
game	O
but	O
then	O
the	O
program	O
can	O
take	O
up	O
to	O
about	O
ten	O
seconds	O
per	O
move	O
the	O
method	O
setcontroldata	O
is	O
very	O
similar	O
to	O
this	O
method	O
i	O
leave	O
it	O
as	O
an	O
exercise	O
to	O
the	O
reader	O
to	O
read	O
through	O
the	O
source	O
code	O
method	O
setcontroldata	O
differs	O
in	O
also	O
considering	O
moves	O
that	O
protect	O
pieces	O
of	O
the	O
same	O
color	O
calculated	O
square	O
control	O
data	O
is	O
stored	O
in	O
the	O
static	O
arrays	O
computercontrol	O
and	O
humancontrol	O
this	O
square	O
control	O
data	O
is	O
used	O
in	O
the	O
method	O
positionevaluation	O
that	O
assigns	O
a	O
numerical	O
rating	O
to	O
a	O
specified	O
chessboard	O
position	O
on	O
either	O
the	O
computer	O
or	O
human	O
side	O
the	O
following	O
aspects	O
of	O
a	O
chessboard	O
position	O
are	O
used	O
for	O
the	O
evaluation	O
material	O
count	O
count	O
point	O
knights	O
and	O
bishops	O
points	O
etc	O
count	O
of	O
which	O
squares	O
are	O
controlled	O
by	O
each	O
side	O
extra	O
credit	O
for	O
control	O
of	O
the	O
center	O
of	O
the	O
board	O
credit	O
for	O
attacked	O
enemy	O
pieces	O
notice	O
that	O
the	O
evaluation	O
is	O
calculated	O
initially	O
assuming	O
the	O
computer	O
s	O
side	O
to	O
move	O
if	O
the	O
position	O
if	O
evaluated	O
from	O
the	O
human	O
player	O
s	O
perspective	O
the	O
evalua	O
search	B
figure	O
continuing	O
the	O
second	O
game	O
with	O
a	O
two	O
and	O
a	O
half	O
move	O
lookahead	O
we	O
will	O
add	O
more	O
heuristics	O
to	O
the	O
static	O
evaluation	O
method	O
to	O
reduce	O
the	O
value	O
of	O
moving	O
the	O
queen	O
early	O
in	O
the	O
game	O
tion	O
value	O
is	O
multiplied	O
by	O
minus	O
one	O
the	O
implementation	O
of	O
positionevaluation	O
is	O
public	O
float	O
positionevaluationposition	O
p	O
boolean	O
player	O
chessposition	O
pos	O
int	O
b	O
pos	O
board	O
float	O
ret	O
adjust	O
for	O
material	O
for	O
i	O
if	O
bi	O
ret	O
bi	O
adjust	O
for	O
positional	O
advantages	O
setcontroldatapos	O
int	O
control	O
for	O
i	O
control	O
humancontroli	O
control	O
computercontroli	O
count	O
center	O
squares	O
extra	O
control	O
control	O
control	O
control	O
search	B
and	O
game	B
playing	I
control	O
ret	O
control	O
credit	O
for	O
attacked	O
pieces	O
for	O
i	O
if	O
bi	O
continue	O
if	O
if	O
computercontroli	O
ret	O
value-bi	O
if	O
if	O
computercontroli	O
ret	O
valuebi	O
adjust	O
if	O
computer	O
side	O
to	O
move	O
if	O
ret	O
return	O
ret	O
it	O
is	O
simple	O
to	O
compile	O
and	O
run	O
the	O
example	O
chess	B
program	O
by	O
changing	O
directory	O
to	O
src-search-game	O
and	O
typing	O
javac	O
java	O
chess	B
when	O
asked	O
to	O
enter	O
moves	O
enter	O
string	O
like	O
to	O
enter	O
a	O
move	O
in	O
chess	B
algebraic	O
notation	O
here	O
is	O
sample	O
output	O
from	O
the	O
program	O
board	O
position	O
br	O
bn	O
bb	O
bk	O
bb	O
bn	O
br	O
bp	O
bp	O
bp	O
bp	O
bp	O
bp	O
bp	O
wp	O
bp	O
bq	O
wp	O
wp	O
wp	O
wp	O
wp	O
wp	O
wp	O
wr	O
wn	O
wb	O
wq	O
wk	O
wb	O
wr	O
wn	O
search	B
your	O
move	O
class	O
method	O
name	O
chess	B
main	O
gamesearch	O
playgame	O
gamesearch	O
alphabeta	O
gamesearch	O
alphabetahelper	O
chess	B
positionevaluate	O
chess	B
setcontroldata	O
chess	B
possiblemoves	O
chess	B
calcpossiblemoves	O
chess	B
calcpiecemoves	O
of	O
total	O
runtime	O
in	O
this	O
method	O
table	O
runtimes	O
by	O
method	O
for	O
chess	B
program	O
the	O
example	O
chess	B
program	O
plays	O
in	O
general	O
good	O
moves	O
but	O
its	O
play	O
could	O
be	O
greatly	O
enhanced	O
with	O
an	O
opening	O
book	O
of	O
common	O
chess	B
opening	O
move	O
sequences	O
if	O
you	O
run	O
the	O
example	O
chess	B
program	O
depending	O
on	O
the	O
speed	O
of	O
your	O
computer	O
and	O
your	O
java	O
runtime	O
system	O
the	O
program	O
takes	O
a	O
while	O
to	O
move	O
seconds	O
per	O
move	O
on	O
my	O
pc	O
where	O
is	O
the	O
time	O
spent	O
in	O
the	O
chess	B
program	O
table	O
shows	O
the	O
total	O
runtime	O
time	O
for	O
a	O
method	O
and	O
recursively	O
all	O
called	O
methods	O
and	O
method-only	O
time	O
for	O
the	O
most	O
time	O
consuming	O
methods	O
methods	O
that	O
show	O
zero	O
percent	O
method	O
only	O
time	O
used	O
less	O
than	O
percent	O
of	O
the	O
time	O
so	O
they	O
print	O
as	O
zero	O
values	O
the	O
interested	O
reader	O
is	O
encouraged	O
to	O
choose	O
a	O
simple	O
two-player	O
game	O
and	O
using	O
the	O
game	O
search	B
class	O
framework	O
implement	O
your	O
own	O
game-playing	O
program	O
reasoning	B
reasoning	B
is	O
a	O
broad	O
topic	O
in	O
this	O
chapter	O
we	O
will	O
concentrate	O
on	O
the	O
use	O
of	O
the	O
powerloom	B
descriptive	O
logic	B
reasoning	B
system	O
powerloom	B
is	O
available	O
with	O
a	O
java	O
runtime	O
and	O
java	O
api	O
this	O
is	O
what	O
i	O
will	O
use	O
for	O
the	O
examples	O
in	O
this	O
chapter	O
powerloom	B
can	O
also	O
be	O
used	O
with	O
jruby	O
powerloom	B
is	O
available	O
in	O
common	O
lisp	O
and	O
c	O
versions	O
additionally	O
we	O
will	O
look	O
briefly	O
at	O
different	O
kinds	O
of	O
reasoning	B
systems	O
in	O
chapter	O
on	O
the	O
semantic	B
web	I
while	O
the	O
material	O
in	O
this	O
chapter	O
will	O
get	O
you	O
started	O
with	O
development	O
using	O
a	O
powerful	O
reasoning	B
system	O
and	O
embedding	O
this	O
reasoning	B
system	O
in	O
java	O
applications	O
you	O
will	O
likely	O
want	O
to	O
dig	O
deeper	O
and	O
i	O
suggest	O
sources	O
for	O
further	O
study	O
at	O
the	O
end	O
of	O
this	O
chapter	O
powerloom	B
is	O
a	O
newer	O
version	O
of	O
the	O
classic	O
loom	B
descriptive	O
logic	B
reasoning	B
system	O
written	O
at	O
isi	O
the	O
required	O
jar	O
files	O
for	O
powerloom	B
are	O
included	O
in	O
the	O
zip	O
file	O
for	O
this	O
book	O
but	O
at	O
some	O
point	O
you	O
will	O
probably	O
want	O
to	O
download	O
the	O
entire	O
powerloom	B
distribution	O
to	O
get	O
more	O
examples	O
and	O
access	O
to	O
documentation	O
the	O
powerloom	B
web	O
site	O
can	O
be	O
found	O
at	O
httpwww	O
isi	O
eduisdloompowerloom	O
while	O
we	O
will	O
look	O
at	O
an	O
example	O
of	O
embedding	O
the	O
powerloom	B
runtime	O
and	O
a	O
powerloom	B
model	O
in	O
a	O
java	O
example	O
program	O
i	O
want	O
to	O
make	O
a	O
general	O
comment	O
on	O
powerloom	B
development	O
you	O
will	O
spend	O
most	O
of	O
your	O
time	O
interactively	O
running	O
powerloom	B
in	O
an	O
interactive	O
shell	O
that	O
lets	O
you	O
type	O
in	O
concepts	O
relations	O
rules	O
and	O
queries	O
and	O
immediately	O
see	O
the	O
results	O
if	O
you	O
have	O
ever	O
programmed	O
in	O
lisp	O
then	O
this	O
mode	O
of	O
interactive	O
programming	O
will	O
be	O
familiar	O
to	O
you	O
as	O
seen	O
in	O
figure	O
after	O
interactive	O
development	O
you	O
can	O
deploy	O
in	O
a	O
java	O
application	O
this	O
style	O
of	O
development	O
supports	O
entering	O
facts	O
and	O
trying	O
rules	O
and	O
relations	O
interactively	O
and	O
as	O
you	O
get	O
things	O
working	O
you	O
can	O
paste	O
what	O
works	O
into	O
a	O
powerloom	B
source	O
file	O
if	O
you	O
have	O
only	O
worked	O
with	O
compiled	O
langauges	O
like	O
java	O
and	O
c	O
this	O
development	O
style	O
may	O
take	O
a	O
while	O
to	O
get	O
used	O
to	O
and	O
appreciate	O
as	O
seen	O
in	O
figure	O
the	O
powerloom	B
runtime	O
system	O
with	O
relations	O
and	O
rules	O
can	O
be	O
embedded	O
in	O
java	O
applications	O
that	O
typically	O
clear	O
powerloom	B
data	O
memory	O
assert	O
facts	O
from	O
other	O
live	O
data	O
sources	O
and	O
then	O
use	O
powerloom	B
for	O
inferencing	O
reasoning	B
figure	O
overview	O
of	O
how	O
we	O
will	O
use	O
powerloom	B
for	O
development	O
and	O
deployment	O
logic	B
we	O
will	O
look	O
at	O
different	O
types	O
of	O
logic	B
and	O
reasoning	B
systems	O
in	O
this	O
section	O
and	O
then	O
get	O
into	O
powerloom	B
specific	O
examples	O
in	O
section	O
logic	B
is	O
the	O
basis	O
for	O
both	O
knowledge	B
representation	I
and	O
for	O
reasoning	B
about	O
knowledge	O
we	O
will	O
encode	O
knowledge	O
using	O
logic	B
and	O
see	O
that	O
we	O
can	O
then	O
infer	O
new	O
facts	O
that	O
are	O
not	O
explicitly	O
asserted	O
first	B
order	I
logic	B
was	O
invented	O
by	O
the	O
philosophers	O
frege	B
and	O
peirce	B
and	O
is	O
the	O
most	O
widely	O
studied	O
logic	B
system	O
unfortunately	O
full	O
first	B
order	I
logic	B
is	O
not	O
computationally	O
tractable	O
for	O
most	O
non-trivial	O
problems	O
so	O
we	O
use	O
more	O
restricted	O
logics	O
we	O
will	O
use	O
two	O
reasoning	B
systems	O
in	O
this	O
book	O
that	O
support	O
more	O
limited	O
logics	O
we	O
use	O
powerloom	B
is	O
this	O
chapter	O
powerloom	B
supports	O
a	O
combination	O
of	O
limited	O
first	B
order	I
predicate	I
logic	B
and	O
features	O
of	O
description	B
logic	B
powerloom	B
is	O
able	O
to	O
classify	O
objects	O
use	O
rules	O
to	O
infer	O
facts	O
from	O
existing	O
facts	O
and	O
to	O
perform	O
subsumption	O
class	O
membership	O
of	O
instances	O
we	O
will	O
use	O
rdf	B
schema	O
reasoning	B
in	O
chapter	O
rdfs	B
supports	O
more	O
limited	O
reasoning	B
than	O
descriptive	O
logic	B
reasoners	O
like	O
powerloom	B
and	O
owl	B
description	B
logic	B
reasoners	O
powerloomreasoning	O
system	O
runtimeconceptsrelationsrulesconcepts	O
are	O
likeclasses	O
they	O
canbe	O
organized	O
intohierarchiesdeveloperinteractivedevelopmentapplication	O
programspowerloomapiweb	O
services	O
logic	B
history	O
of	O
logic	B
the	O
greek	O
philosopher	O
aristotle	B
studied	O
forms	O
of	O
logic	B
as	O
part	O
of	O
his	O
desire	O
to	O
improve	O
the	O
representation	O
of	O
knowledge	O
he	O
started	O
a	O
study	O
of	O
logic	B
and	O
the	O
definition	O
of	O
both	O
terms	O
subjects	O
predicates	O
nouns	O
verbs	O
and	O
types	O
of	O
logical	O
deduction	O
much	O
later	O
the	O
philosopher	O
frege	B
defined	O
predicate	O
logic	B
example	O
all	O
birds	O
have	O
feathers	O
brady	O
is	O
a	O
bird	O
therefore	O
brady	O
has	O
feathers	O
that	O
forms	O
the	O
basis	O
for	O
the	O
modern	O
prolog	B
programming	O
language	O
examples	O
of	O
different	O
logic	B
types	O
propositional	O
logic	B
is	O
limited	O
to	O
atomic	O
statements	O
that	O
can	O
be	O
either	O
true	O
or	O
false	O
brady-is-a-bird	O
brady-has-feathers	O
first	B
order	I
predicate	I
logic	B
allows	O
access	O
to	O
the	O
structure	O
of	O
logic	B
statements	O
dealing	O
with	O
predicates	O
that	O
operate	O
on	O
atoms	O
to	O
use	O
a	O
prolog	B
notation	O
feathersx	O
birdx	O
birdbrady	O
here	O
feathers	O
and	O
bird	O
are	O
predicates	O
and	O
brady	O
is	O
an	O
atom	O
the	O
first	O
example	O
states	O
that	O
for	O
all	O
x	O
if	O
x	O
is	O
a	O
bird	O
then	O
x	O
has	O
feathers	O
in	O
the	O
second	O
example	O
we	O
state	O
that	O
brady	O
is	O
a	O
bird	O
notice	O
that	O
in	O
the	O
prolog	B
notation	O
that	O
we	O
are	O
using	O
variables	O
are	O
capitalized	O
and	O
predicate	O
names	O
and	O
literal	O
atoms	O
are	O
lower	O
case	O
here	O
is	O
a	O
query	O
that	O
asks	O
who	O
has	O
feathers	O
feathersx	O
x	O
brady	O
in	O
this	O
example	O
through	O
inference	O
we	O
have	O
determined	O
a	O
new	O
fact	O
that	O
brady	O
has	O
feathers	O
because	O
we	O
know	O
that	O
brady	O
is	O
a	O
bird	O
and	O
we	O
have	O
the	O
rule	O
predicate	O
stating	O
that	O
all	O
birds	O
have	O
feathers	O
prolog	B
is	O
not	O
strictly	O
a	O
pure	O
logic	B
programming	O
language	O
since	O
the	O
order	O
in	O
which	O
rules	O
are	O
defined	O
chnages	O
the	O
inference	O
results	O
prolog	B
is	O
a	O
great	O
language	O
for	O
some	O
types	O
of	O
projects	O
have	O
used	O
prolog	B
in	O
both	O
natural	O
language	O
processing	O
and	O
in	O
planning	O
projects	O
we	O
will	O
see	O
that	O
powerloom	B
is	O
considerably	O
more	O
flexible	O
than	O
prolog	B
but	O
does	O
have	O
a	O
steep	O
learning	O
curve	O
reasoning	B
description	B
logic	B
deals	O
with	O
descriptions	O
of	O
concepts	O
and	O
how	O
these	O
descriptions	O
define	O
the	O
domain	O
of	O
concepts	O
in	O
terms	O
used	O
in	O
object	O
oriented	O
programming	O
languages	O
membership	O
in	O
a	O
class	O
is	O
determined	O
implicitly	O
by	O
the	O
description	O
of	O
the	O
object	O
and	O
not	O
by	O
explicitly	O
stating	O
something	O
like	O
brady	O
is	O
a	O
member	O
of	O
the	O
bird	O
class	O
description	O
logics	O
divide	O
statements	O
into	O
relations	O
refered	O
to	O
as	O
tbox	O
and	O
concepts	O
called	O
abox	O
we	O
would	O
say	O
that	O
a	O
statement	O
like	O
all	O
birds	O
have	O
feathers	O
is	O
stored	O
in	O
the	O
tbox	O
while	O
a	O
specific	O
assertion	O
like	O
brady	O
is	O
a	O
bird	O
is	O
stored	O
in	O
the	O
abox	O
powerloom	B
overview	O
powerloom	B
is	O
designed	O
to	O
be	O
an	O
expressive	O
language	O
for	O
knowledge	B
representation	I
and	O
reasoning	B
as	O
a	O
result	O
powerloom	B
is	O
not	O
a	O
complete	O
reasoning	B
system	O
but	O
makes	O
tradeoffs	O
for	O
completeness	O
of	O
inferences	O
and	O
expressivity	O
vs	O
computational	O
efficiency	O
it	O
is	O
interesting	O
to	O
note	O
that	O
loom	B
and	O
powerloom	B
were	O
designed	O
and	O
implemented	O
to	O
solve	O
real	O
world	O
problems	O
and	O
the	O
tradeoffs	O
to	O
make	O
these	O
problems	O
computationally	O
tractable	O
have	O
informed	O
the	O
design	O
and	O
implementation	O
of	O
these	O
systems	O
powerloom	B
does	O
not	O
make	O
all	O
posible	O
inferences	O
from	O
concepts	O
that	O
it	O
operates	O
on	O
the	O
powerloom	B
distribution	O
contains	O
two	O
very	O
detailed	O
examples	O
for	O
representing	O
relationships	O
between	O
companies	O
and	O
for	O
information	O
dealing	O
with	O
airplanes	O
these	O
examples	O
are	O
more	O
detailed	O
than	O
the	O
simpler	O
example	O
of	O
data	O
from	O
news	O
stories	O
used	O
in	O
this	O
chapter	O
we	O
will	O
look	O
one	O
of	O
these	O
examples	O
rules	O
and	O
relations	O
and	O
after	O
working	O
through	O
this	O
chapter	O
i	O
encourage	O
you	O
to	O
interactively	O
experiment	O
with	O
the	O
two	O
examples	O
that	O
ship	O
with	O
powerloom	B
we	O
will	O
start	O
by	O
defining	O
some	O
terms	O
used	O
in	O
powerloom	B
concept	O
the	O
java	O
equivalent	O
would	O
be	O
an	O
instance	O
of	O
a	O
class	O
relation	O
specifies	O
a	O
link	O
between	O
two	O
concepts	O
function	O
functional	O
mapping	O
of	O
one	O
concept	O
to	O
another	O
rule	O
allows	O
new	O
concepts	O
to	O
be	O
deduced	O
without	O
explicitly	O
asserting	O
them	O
a	O
relation	O
can	O
specify	O
the	O
types	O
of	O
concepts	O
that	O
a	O
relation	O
connects	O
an	O
example	O
will	O
make	O
this	O
clear	O
and	O
introduce	O
the	O
lisp-like	O
syntax	O
of	O
powerloom	B
statements	O
concepts	O
person	O
parent	O
person	O
running	O
powerloom	B
interactively	O
relation	O
parent-of	O
parent	O
person	O
here	O
i	O
have	O
defined	O
two	O
concepts	O
person	O
and	O
parent	O
note	O
that	O
we	O
have	O
a	O
hierarchy	O
of	O
concept	O
types	O
here	O
the	O
parent	O
is	O
a	O
more	O
specific	O
concept	O
type	O
than	O
the	O
person	O
concept	O
all	O
instances	O
that	O
are	O
parents	O
are	O
also	O
of	O
type	O
person	O
the	O
relation	O
parentof	O
links	O
a	O
parent	O
concept	O
to	O
a	O
person	O
concept	O
we	O
will	O
learn	O
more	O
about	O
basic	O
powerloom	B
functionality	O
in	O
the	O
next	O
two	O
sections	O
as	O
we	O
use	O
powerloom	B
in	O
an	O
interactive	O
session	O
and	O
when	O
we	O
embed	O
powerloom	B
in	O
a	O
java	O
example	O
program	O
running	O
powerloom	B
interactively	O
we	O
will	O
experiment	O
with	O
powerloom	B
concepts	O
relations	O
and	O
rules	O
in	O
this	O
section	O
in	O
an	O
interactive	O
command	O
shell	O
i	O
will	O
introduce	O
more	O
examples	O
of	O
powerloom	B
functionality	O
for	O
asserting	O
instances	O
of	O
concepts	O
performing	O
queries	O
loading	O
powerloom	B
source	O
files	O
defining	O
relations	O
using	O
separate	O
modules	O
and	O
asking	O
powerloom	B
to	O
explain	O
the	O
inference	O
process	O
that	O
it	O
used	O
for	O
query	O
processing	O
you	O
can	O
run	O
powerloom	B
using	O
the	O
command	O
line	O
interface	O
by	O
changing	O
directory	O
to	O
the	O
lib	O
subdirectory	O
from	O
the	O
zip	O
file	O
for	O
this	O
book	O
and	O
trying	O
java	O
powerloom	B
jarstella	O
jar	O
edu	O
isi	O
powerloom	B
powerloom	B
this	O
starts	O
the	O
powerloom	B
standalone	O
system	O
and	O
prints	O
a	O
prompt	O
that	O
includes	O
the	O
name	O
of	O
the	O
current	O
module	O
the	O
default	O
module	O
name	O
is	O
pl-user	O
in	O
the	O
first	O
example	O
when	O
i	O
enter	O
the	O
person	O
concept	O
at	O
the	O
interactive	O
prompt	O
then	O
powerloom	B
prints	O
the	O
result	O
of	O
the	O
expression	O
that	O
just	O
entered	O
pl-user	O
person	O
pl-user	O
parent	O
person	O
pl-user	O
parent-of	O
parent	O
person	O
pl-user	O
ken	O
ken	O
pl-user	O
mark	O
reasoning	B
mark	O
pl-user	O
ken	O
mark	O
ken	O
mark	O
now	O
that	O
we	O
have	O
entered	O
two	O
concepts	O
a	O
test	O
relation	O
and	O
asserted	O
a	O
few	O
facts	O
we	O
can	O
look	O
at	O
an	O
example	O
of	O
powerloom	B
s	O
query	O
language	O
pl-user	O
all	O
there	O
are	O
solutions	O
pl-user	O
all	O
there	O
is	O
solution	O
pl-user	O
the	O
obvious	O
point	O
to	O
note	O
from	O
this	O
example	O
is	O
that	O
we	O
never	O
specified	O
that	O
ken	O
was	O
a	O
parent	O
rather	O
powerloom	B
deduced	O
this	O
from	O
the	O
parent-of	O
relation	O
powerloom	B
s	O
command	O
line	O
system	O
prompts	O
you	O
with	O
the	O
string	O
pl-user	O
and	O
you	O
can	O
type	O
any	O
definition	O
or	O
query	O
like	O
lisp	O
powerloom	B
uses	O
a	O
prefix	O
notation	O
and	O
expressions	O
are	O
contained	O
in	O
parenthesis	O
powerloom	B
supports	O
a	O
module	O
system	O
for	O
partitioning	O
concepts	O
relations	O
functions	O
and	O
rules	O
into	O
different	O
sets	O
and	O
as	O
previously	O
mentioned	O
pl-user	O
is	O
the	O
default	O
module	O
powerloom	B
modules	O
can	O
form	O
a	O
hierarchy	O
inheriting	O
concepts	O
relations	O
and	O
rules	O
from	O
parent	O
modules	O
the	O
subdirectory	O
test	O
data	O
contains	O
the	O
demo	O
file	O
business	O
plm	O
written	O
by	O
robert	O
macgregor	O
that	O
is	O
supplied	O
with	O
the	O
full	O
powerloom	B
distribution	O
you	O
can	O
load	O
his	O
complete	O
example	O
using	O
pl-user	O
this	O
is	O
a	O
good	O
example	O
because	O
it	O
demonstrates	O
most	O
of	O
the	O
available	O
functionality	O
of	O
powerloom	B
in	O
a	O
short	O
lines	O
when	O
you	O
are	O
done	O
reading	O
this	O
chapter	O
please	O
take	O
a	O
few	O
minutes	O
to	O
read	O
through	O
this	O
example	O
file	O
since	O
i	O
do	O
not	O
list	O
it	O
here	O
there	O
are	O
a	O
few	O
things	O
to	O
notice	O
in	O
this	O
example	O
here	O
we	O
see	O
a	O
rule	O
used	O
to	O
make	O
the	O
relation	O
contains	O
transitive	O
contains	O
geographic-location	O
geographic-location	O
running	O
powerloom	B
interactively	O
transitive-contains	O
the	O
operator	O
means	O
that	O
if	O
the	O
first	O
clause	O
is	O
true	O
then	O
so	O
is	O
the	O
second	O
in	O
english	O
this	O
rule	O
could	O
be	O
stated	O
if	O
an	O
instance	O
contains	O
and	O
if	O
instance	O
contains	O
then	O
we	O
can	O
infer	O
that	O
also	O
contains	O
to	O
see	O
how	O
this	O
rule	O
works	O
in	O
practice	O
we	O
can	O
switch	O
to	O
the	O
example	O
module	O
business	O
and	O
find	O
all	O
locations	O
contained	O
inside	O
another	O
location	O
pl-user	O
business	O
all	O
there	O
are	O
solutions	O
business	O
here	O
we	O
have	O
fifteen	O
solutions	O
even	O
though	O
there	O
are	O
only	O
seven	O
contains	O
relations	O
asserted	O
in	O
the	O
business	O
plm	O
file	O
the	O
other	O
eight	O
solutions	O
were	O
inferred	O
in	O
addition	O
to	O
the	O
retrieve	O
function	O
that	O
finds	O
solutions	O
matching	O
a	O
query	O
you	O
can	O
also	O
use	O
the	O
ask	O
function	O
to	O
determine	O
if	O
a	O
specified	O
relation	O
is	O
true	O
for	O
example	O
business	O
united-states	O
dallas	O
true	O
business	O
reasoning	B
for	O
complex	O
queries	O
you	O
can	O
use	O
the	O
why	O
function	O
to	O
see	O
how	O
powerloom	B
solved	O
the	O
last	O
query	O
business	O
southern-us	O
dallas	O
true	O
business	O
follows	O
by	O
modus	O
ponens	O
with	O
substitution	O
since	O
and	O
and	O
southern-us	O
texas	O
texas	O
dallas	O
business	O
by	O
default	O
the	O
explanation	O
facility	O
is	O
turned	O
off	O
because	O
it	O
causes	O
powerloom	B
to	O
run	O
more	O
slowly	O
it	O
was	O
turned	O
on	O
in	O
the	O
file	O
business	O
plm	O
using	O
the	O
statement	O
justifications	O
using	O
the	O
powerloom	B
apis	O
in	O
java	O
programs	O
once	O
you	O
interactively	O
develop	O
concepts	O
rules	O
and	O
relations	O
then	O
it	O
is	O
likely	O
that	O
you	O
may	O
want	O
to	O
use	O
them	O
with	O
powerloom	B
in	O
an	O
embedded	O
mode	O
making	O
powerloom	B
a	O
part	O
of	O
your	O
application	O
i	O
will	O
get	O
you	O
started	O
with	O
a	O
few	O
java	O
example	O
programs	O
the	O
source	O
code	O
for	O
this	O
chapter	O
is	O
in	O
the	O
subdirectory	O
src-powerloom-reasoning	O
if	O
you	O
download	O
the	O
powerloom	B
manual	O
pdf	O
file	O
from	O
the	O
powerloom	B
web	O
site	O
you	O
will	O
have	O
the	O
complete	O
java	O
api	O
documentation	O
for	O
the	O
java	O
version	O
of	O
powerloom	B
are	O
also	O
c	O
and	O
common	O
lisp	O
versions	O
with	O
separate	O
documentation	O
i	O
have	O
found	O
that	O
i	O
usually	O
use	O
just	O
a	O
small	O
subset	O
of	O
the	O
java	O
powerloom	B
apis	O
and	O
i	O
have	O
wrapped	O
this	O
subset	O
in	O
a	O
wrapper	O
class	O
in	O
the	O
file	O
powerloomutils	O
java	O
we	O
will	O
use	O
my	O
wrapper	O
class	O
for	O
the	O
examples	O
in	O
the	O
rest	O
of	O
this	O
chapter	O
my	O
wrapper	O
class	O
has	O
the	O
follow	O
public	O
methods	O
using	O
the	O
powerloom	B
apis	O
in	O
java	O
programs	O
powerloomutils	O
constructor	O
initializes	O
the	O
java	O
powerloom	B
runtime	O
sys	O
tem	O
loadstring	O
fpath	O
load	O
a	O
source	O
file	O
changemodulestring	O
workingmodule	O
set	O
the	O
current	O
powerloom	B
working	O
module	O
pl-user	O
is	O
the	O
default	O
module	O
assertpropositionstring	O
proposition	O
asserts	O
a	O
new	O
proposition	O
for	O
example	O
moms	O
grocery	O
note	O
that	O
quotation	O
marks	O
are	O
escaped	O
with	O
a	O
backslash	O
character	O
you	O
can	O
also	O
use	O
single	O
quote	O
characters	O
like	O
moms	O
grocery	O
because	O
i	O
convert	O
single	O
quotes	O
in	O
my	O
wrapper	O
code	O
createrelationstring	O
relation	O
int	O
arity	O
create	O
a	O
new	O
relation	O
with	O
a	O
specified	O
arity	O
of	O
arguments	O
for	O
example	O
you	O
could	O
create	O
a	O
relation	O
owns	O
with	O
arity	O
and	O
then	O
assert	O
elaine	O
moms	O
grocery	O
i	O
usually	O
do	O
not	O
use	O
this	O
api	O
since	O
i	O
prefer	O
to	O
place	O
relations	O
rules	O
in	O
a	O
source	O
code	O
file	O
ending	O
in	O
the	O
extention	O
doquerystring	O
query	O
returns	O
a	O
list	O
of	O
results	O
from	O
a	O
query	O
each	O
result	O
in	O
the	O
list	O
is	O
itself	O
a	O
list	O
you	O
will	O
always	O
want	O
to	O
work	O
in	O
an	O
interactive	O
powerloom	B
console	O
for	O
writing	O
and	O
debugging	O
powerloom	B
models	O
i	O
built	O
the	O
model	O
in	O
test	O
plm	O
the	O
subdirectory	O
test	O
data	O
interactively	O
and	O
we	O
will	O
use	O
it	O
here	O
in	O
an	O
embedded	O
java	O
example	O
powerloomutils	O
plu	O
new	O
powerloomutils	O
plu	O
loadtest	O
datatest	O
plm	O
plu	O
changemodulebusiness	O
plu	O
assertproposition	O
grocery	O
plu	O
assertproposition	O
plu	O
assertproposition	O
list	O
answers	O
plu	O
doqueryall	O
system	O
out	O
printlnanswers	O
answers	O
answers	O
plu	O
doquery	O
reasoning	B
system	O
out	O
printlnanswers	O
answers	O
plu	O
createrelationceo	O
plu	O
assertproposition	O
grocery	O
answers	O
plu	O
doquery	O
system	O
out	O
printlnanswers	O
answers	O
i	O
have	O
added	O
the	O
program	O
output	O
produced	O
by	O
printing	O
the	O
value	O
of	O
the	O
list	O
variable	O
answers	O
as	O
comments	O
after	O
each	O
system	O
out	O
println	O
call	O
in	O
the	O
wrapper	O
api	O
calls	O
that	O
take	O
a	O
string	O
argument	O
i	O
broke	O
long	O
strings	O
over	O
several	O
lines	O
for	O
formatting	O
to	O
the	O
width	O
of	O
a	O
page	O
you	O
would	O
not	O
do	O
this	O
in	O
your	O
own	O
programs	O
because	O
of	O
the	O
cost	O
of	O
the	O
extra	O
string	O
concatenation	O
we	O
will	O
not	O
look	O
at	O
the	O
implementation	O
of	O
the	O
p	O
owerloomu	O
tils	O
class	O
you	O
can	O
read	O
the	O
code	O
if	O
you	O
are	O
interested	O
that	O
said	O
i	O
will	O
make	O
a	O
few	O
commments	O
on	O
the	O
java	O
powerloom	B
apis	O
the	O
class	O
p	O
li	O
contains	O
static	O
methods	O
for	O
initializing	O
the	O
system	O
loading	O
powerloom	B
source	O
files	O
here	O
are	O
a	O
few	O
examples	O
pli	O
initialize	O
pli	O
loadtest	O
plm	O
null	O
pli	O
schangemodulebusiness	O
null	O
suggestions	O
for	O
further	O
study	O
this	O
chapter	O
has	O
provided	O
a	O
brief	O
introduction	O
to	O
powerloom	B
one	O
of	O
my	O
favorite	O
ai	O
tools	O
i	O
also	O
showed	O
you	O
how	O
to	O
go	O
about	O
embedding	O
the	O
powerloom	B
knowledge	B
representation	I
and	O
reasoning	B
systems	O
in	O
your	O
java	O
programs	O
assuming	O
that	O
you	O
see	O
benefit	O
to	O
further	O
study	O
i	O
recommend	O
reading	O
through	O
the	O
powerloom	B
manual	O
and	O
the	O
presentations	O
files	O
on	O
the	O
powerloom	B
web	O
site	O
as	O
you	O
read	O
through	O
this	O
material	O
it	O
is	O
best	O
to	O
have	O
an	O
interactive	O
powerloom	B
session	O
open	O
to	O
try	O
the	O
examples	O
as	O
you	O
read	O
them	O
suggestions	O
for	O
further	O
study	O
knowledge	B
representation	I
and	O
logic	B
are	O
huge	O
subjects	O
and	O
i	O
will	O
close	O
out	O
this	O
chapter	O
by	O
recommending	O
a	O
few	O
books	O
that	O
have	O
been	O
the	O
most	O
helpful	O
to	O
me	O
knowledge	B
representation	I
by	O
john	O
sowa	O
this	O
has	O
always	O
been	O
my	O
favorite	O
reference	O
for	O
knowledge	B
representation	I
logic	B
and	O
ontologies	O
artificial	O
intelligence	O
a	O
modern	O
approach	O
by	O
stuart	O
russell	O
and	O
peter	O
norvig	O
a	O
very	O
good	O
theoretical	O
treatment	O
of	O
logic	B
and	O
knowledge	B
representation	I
the	O
art	O
of	O
prolog	B
by	O
leon	O
sterling	O
and	O
ehud	O
shapiro	O
prolog	B
implements	O
a	O
form	O
of	O
predicate	O
logic	B
that	O
is	O
less	O
expressive	O
than	O
the	O
descriptive	O
logics	O
supported	O
by	O
powerloom	B
and	O
owl	B
that	O
said	O
prolog	B
is	O
very	O
efficient	O
and	O
fairly	O
easy	O
to	O
learn	O
and	O
so	O
is	O
sometimes	O
a	O
better	O
choice	O
this	O
book	O
is	O
one	O
of	O
my	O
favorite	O
general	O
prolog	B
references	O
the	O
prolog	B
language	O
is	O
a	O
powerful	O
ai	O
development	O
tool	O
both	O
the	O
open	O
source	O
swiprolog	O
and	O
the	O
commercial	O
amzi	O
prolog	B
systems	O
have	O
good	O
java	O
interfaces	O
i	O
don	O
t	O
cover	O
prolog	B
in	O
this	O
book	O
but	O
there	O
are	O
several	O
very	O
good	O
tutorials	O
on	O
the	O
web	O
if	O
you	O
decide	O
to	O
experiment	O
with	O
prolog	B
we	O
will	O
continue	O
chapter	O
with	O
our	O
study	O
of	O
logic-based	O
reasoning	B
systems	O
in	O
the	O
context	O
of	O
the	O
semantic	B
web	I
reasoning	B
semantic	B
web	I
the	O
semantic	B
web	I
is	O
intended	O
to	O
provide	O
a	O
massive	O
linked	O
set	O
of	O
data	O
for	O
use	O
by	O
software	O
systems	O
just	O
as	O
the	O
world	O
wide	O
web	O
provides	O
a	O
massive	O
collection	O
of	O
linked	O
web	O
pages	O
for	O
human	O
reading	O
and	O
browsing	O
the	O
semantic	B
web	I
is	O
like	O
the	O
web	O
in	O
that	O
anyone	O
can	O
generate	O
any	O
content	O
that	O
they	O
want	O
this	O
freedom	O
to	O
publish	O
anything	O
works	O
for	O
the	O
web	O
because	O
we	O
use	O
our	O
ability	O
to	O
understand	O
natural	O
language	O
to	O
interpret	O
what	O
we	O
read	O
and	O
often	O
to	O
dismiss	O
material	O
that	O
based	O
upon	O
our	O
own	O
knowledge	O
we	O
consider	O
to	O
be	O
incorrect	O
the	O
core	O
concept	O
for	O
the	O
semantic	B
web	I
is	O
data	O
integration	O
and	O
use	O
from	O
different	O
sources	O
as	O
we	O
will	O
soon	O
see	O
the	O
tools	O
for	O
implementing	O
the	O
semantic	B
web	I
are	O
designed	O
for	O
encoding	O
data	O
and	O
sharing	O
data	O
from	O
many	O
different	O
sources	O
there	O
are	O
several	O
very	O
good	O
semantic	B
web	I
toolkits	O
for	O
the	O
java	O
language	O
and	O
platform	O
i	O
will	O
use	O
sesame	B
because	O
it	O
is	O
what	O
i	O
often	O
use	O
in	O
my	O
own	O
work	O
and	O
i	O
believe	O
that	O
it	O
is	O
a	O
good	O
starting	O
technology	O
for	O
your	O
first	O
experiments	O
with	O
semantic	B
web	I
technologies	O
this	O
chapter	O
provides	O
an	O
incomplete	O
coverage	O
of	O
semantic	B
web	I
technologies	O
and	O
is	O
intended	O
merely	O
as	O
a	O
gentle	O
introduction	O
to	O
a	O
few	O
useful	O
techniques	O
and	O
how	O
to	O
implement	O
those	O
techniques	O
in	O
java	O
figure	O
shows	O
a	O
layered	O
set	O
of	O
data	O
models	O
that	O
are	O
used	O
to	O
implement	O
semantic	B
web	I
applications	O
to	O
design	O
and	O
implement	O
these	O
applications	O
we	O
need	O
to	O
think	O
in	O
terms	O
of	O
physical	O
models	O
and	O
access	O
of	O
rdf	B
rdfs	B
and	O
perhaps	O
owl	B
data	O
logical	O
models	O
we	O
use	O
rdf	B
and	O
rdfs	B
to	O
define	O
relationships	O
between	O
data	O
represented	O
as	O
unique	O
uris	O
and	O
string	O
literals	O
and	O
how	O
we	O
logically	O
combine	O
data	O
from	O
different	O
sources	O
and	O
conceptual	O
modeling	O
level	O
knowledge	B
representation	I
using	O
owl	B
i	O
am	O
currently	O
writing	O
a	O
separate	O
book	O
practical	O
semantic	B
web	I
programming	O
in	O
java	O
that	O
goes	O
into	O
much	O
more	O
detail	O
on	O
the	O
use	O
of	O
sesame	B
jena	B
protege	B
owlapis	O
rdfrdfsowl	O
modeling	O
and	O
descriptive	O
logic	B
reasoners	O
this	O
chapter	O
is	O
meant	O
to	O
get	O
you	O
interested	O
in	O
this	O
technology	O
but	O
is	O
not	O
intended	O
as	O
a	O
detailed	O
guide	O
semantic	B
web	I
figure	O
layers	O
of	O
data	O
models	O
used	O
in	O
implementing	O
semantic	B
web	I
applications	O
relational	B
database	I
model	O
has	O
problems	O
dealing	O
with	O
rapidly	O
changing	O
data	O
requirements	O
when	O
people	O
are	O
first	O
introduced	O
to	O
semantic	B
web	I
technologies	O
their	O
first	O
reaction	O
is	O
often	O
something	O
like	O
i	O
can	O
just	O
do	O
that	O
with	O
a	O
database	O
the	O
relational	B
database	I
model	O
is	O
an	O
efficient	O
way	O
to	O
express	O
and	O
work	O
with	O
slowly	O
changing	O
data	O
models	O
there	O
are	O
some	O
clever	O
tools	O
for	O
dealing	O
with	O
data	O
change	O
requirements	O
in	O
the	O
database	O
world	O
and	O
migrations	O
being	O
a	O
good	O
example	O
but	O
it	O
is	O
awkward	O
to	O
have	O
end	O
users	O
and	O
even	O
developers	O
tagging	B
on	O
new	O
data	O
attributes	O
to	O
relational	B
database	I
tables	O
this	O
same	O
limitation	O
also	O
applies	O
to	O
object	O
oriented	O
programming	O
and	O
object	O
modeling	O
even	O
with	O
dynamic	O
languages	O
that	O
facilitate	O
modifying	O
classes	O
at	O
runtime	O
the	O
options	O
for	O
adding	O
attributes	O
to	O
existing	O
models	O
is	O
just	O
too	O
limiting	O
the	O
same	O
argument	O
can	O
be	O
made	O
against	O
the	O
use	O
of	O
xml	O
constrained	O
by	O
conformance	O
to	O
either	O
dtds	O
or	O
xml	O
schemas	O
it	O
is	O
true	O
that	O
rdf	B
and	O
rdfs	B
can	O
be	O
serialized	O
to	O
xml	O
using	O
many	O
pre-existing	O
xml	O
namespaces	O
for	O
different	O
knowledge	O
sources	O
and	O
their	O
schemas	O
but	O
it	O
turns	O
out	O
that	O
this	O
is	O
done	O
in	O
a	O
way	O
that	O
does	O
not	O
reduce	O
the	O
flexibility	O
for	O
extending	O
data	O
models	O
xml	O
storage	O
is	O
really	O
only	O
a	O
serialization	O
of	O
rdf	B
and	O
many	O
developers	O
who	O
are	O
just	O
starting	O
to	O
use	O
semantic	B
web	I
technologies	O
initially	O
get	O
confused	O
trying	O
to	O
read	O
xml	O
serialization	O
of	O
rdf	B
almost	O
like	O
trying	O
to	O
read	O
a	O
pdf	O
file	O
with	O
a	O
plain	O
text	O
editor	O
and	O
something	O
to	O
be	O
avoided	O
owl	B
extends	O
rdfs	B
to	O
allow	O
expression	O
of	O
richer	O
class	O
relationships	O
cardinality	O
etc	O
xml	O
a	O
syntax	O
for	O
tree	O
structured	O
documents	O
xml	O
schema	O
a	O
language	O
for	O
placing	O
restrictions	O
on	O
xml	O
documentsrdf	O
modeling	O
subject	O
predicate	O
and	O
object	O
linksrdfs	O
vocabulary	O
for	O
describing	O
properties	O
and	O
class	O
membership	O
by	O
properties	O
rdf	B
the	O
universal	O
data	O
format	O
a	O
major	O
goal	O
for	O
the	O
rest	O
of	O
this	O
chapter	O
is	O
convincing	O
you	O
that	O
modeling	O
data	O
with	O
rdf	B
and	O
rdfs	B
facilitates	O
freely	O
extending	O
data	O
models	O
and	O
also	O
allows	O
fairly	O
easy	O
integration	O
of	O
data	O
from	O
different	O
sources	O
using	O
different	O
schemas	O
without	O
explicitly	O
converting	O
data	O
from	O
one	O
schema	O
to	O
another	O
for	O
reuse	O
rdf	B
the	O
universal	O
data	O
format	O
the	O
resource	O
description	O
framework	O
is	O
used	O
to	O
encode	O
information	O
and	O
the	O
rdf	B
schema	O
facilitates	O
using	O
data	O
with	O
different	O
rdf	B
encodings	O
without	O
the	O
need	O
to	O
convert	O
data	O
formats	O
rdf	B
data	O
was	O
originally	O
encoded	O
as	O
xml	O
and	O
intended	O
for	O
automated	O
processing	O
in	O
this	O
chapter	O
we	O
will	O
use	O
two	O
simple	O
to	O
read	O
formats	O
called	O
n-triples	O
and	O
sesame	B
can	O
be	O
used	O
to	O
convert	O
between	O
all	O
rdf	B
formats	O
so	O
we	O
might	O
as	O
well	O
use	O
formats	O
that	O
are	O
easier	O
to	O
read	O
and	O
understand	O
rdf	B
data	O
consists	O
of	O
a	O
set	O
of	O
triple	O
values	O
subject	O
predicate	O
object	O
some	O
of	O
my	O
work	O
with	O
semantic	B
web	I
technologies	O
deals	O
with	O
processing	O
news	O
stories	O
extracting	O
semantic	O
information	O
from	O
the	O
text	O
and	O
storing	O
it	O
in	O
rdf	B
i	O
will	O
use	O
this	O
application	O
domain	O
for	O
the	O
examples	O
in	O
this	O
chapter	O
i	O
deal	O
with	O
triples	O
like	O
subject	O
a	O
url	O
uri	O
of	O
a	O
news	O
article	O
predicate	O
a	O
relation	O
like	O
containsperson	O
object	O
a	O
value	O
like	O
bill	O
clinton	O
as	O
previously	O
mentioned	O
we	O
will	O
use	O
either	O
uris	O
or	O
string	O
literals	O
as	O
values	O
for	O
subjects	O
and	O
objects	O
we	O
will	O
always	O
use	O
uris	O
for	O
the	O
values	O
of	O
predicates	O
in	O
any	O
case	O
uris	O
are	O
usually	O
preferred	O
to	O
string	O
literals	O
because	O
they	O
are	O
unique	O
we	O
will	O
see	O
an	O
example	O
of	O
this	O
preferred	O
use	O
but	O
first	O
we	O
need	O
to	O
learn	O
the	O
n-triple	B
and	O
rdf	B
formats	O
in	O
section	O
i	O
proposed	O
the	O
idea	O
that	O
rdf	B
was	O
more	O
flexible	O
than	O
object	O
modeling	O
in	O
programming	O
languages	O
relational	O
databases	O
and	O
xml	O
with	O
schemas	O
if	O
we	O
can	O
tag	O
new	O
attributes	O
on	O
the	O
fly	O
to	O
existing	O
data	O
how	O
do	O
we	O
prevent	O
what	O
i	O
might	O
call	O
data	O
chaos	O
as	O
we	O
modify	O
existing	O
data	O
sources	O
it	O
turns	O
out	O
that	O
the	O
solution	O
to	O
this	O
problem	O
is	O
also	O
the	O
solution	O
for	O
encoding	O
real	O
semantics	O
meaning	O
with	O
data	O
we	O
usually	O
use	O
unique	O
uris	O
for	O
rdf	B
subjects	O
predicates	O
and	O
objects	O
and	O
usually	O
semantic	B
web	I
with	O
a	O
preference	O
for	O
not	O
using	O
string	O
literals	O
i	O
will	O
try	O
to	O
make	O
this	O
idea	O
more	O
clear	O
with	O
some	O
examples	O
any	O
part	O
of	O
a	O
triple	O
predicate	O
or	O
object	O
is	O
either	O
a	O
uri	O
or	O
a	O
string	O
literal	O
uris	O
encode	O
namespaces	O
for	O
example	O
the	O
containsperson	O
predicate	O
in	O
the	O
last	O
example	O
could	O
properly	O
be	O
written	O
as	O
httpknowledgebooks	O
comontologycontainsperson	O
the	O
first	O
part	O
of	O
this	O
uri	O
is	O
considered	O
to	O
be	O
the	O
namespace	O
for	O
we	O
will	O
use	O
as	O
a	O
predicate	O
containsperson	O
when	O
different	O
rdf	B
triples	O
use	O
this	O
same	O
predicate	O
this	O
is	O
some	O
assurance	O
to	O
us	O
that	O
all	O
users	O
of	O
this	O
predicate	O
subscribe	O
to	O
the	O
same	O
meaning	O
furthermore	O
we	O
will	O
see	O
in	O
section	O
we	O
can	O
use	O
rdfs	B
to	O
state	O
equivalency	O
between	O
this	O
predicate	O
the	O
namespace	O
httpknowledgebooks	O
comontology	O
with	O
predicates	O
represented	O
by	O
different	O
uris	O
used	O
in	O
other	O
data	O
sources	O
in	O
an	O
artificial	O
intelligence	O
sense	O
software	O
that	O
we	O
write	O
does	O
not	O
understand	O
a	O
predicate	O
like	O
containsperson	O
in	O
the	O
way	O
that	O
a	O
human	O
reader	O
can	O
by	O
combining	O
understood	O
common	O
meanings	O
for	O
the	O
words	O
contains	O
and	O
person	O
but	O
for	O
many	O
interesting	O
and	O
useful	O
types	O
of	O
applications	O
that	O
is	O
fine	O
as	O
long	O
as	O
the	O
predicate	O
is	O
used	O
consistently	O
we	O
will	O
see	O
shortly	O
that	O
we	O
can	O
define	O
abbreviation	O
prefixes	O
for	O
namespaces	O
which	O
makes	O
rdf	B
and	O
rdfs	B
files	O
shorter	O
and	O
easier	O
to	O
read	O
a	O
statement	O
in	O
n-triple	B
format	O
consists	O
of	O
three	O
uris	O
string	O
literals	O
any	O
combination	O
followed	O
by	O
a	O
period	O
to	O
end	O
the	O
statement	O
while	O
statements	O
are	O
often	O
written	O
one	O
per	O
line	O
in	O
a	O
source	O
file	O
they	O
can	O
be	O
broken	O
across	O
lines	O
it	O
is	O
the	O
ending	O
period	O
which	O
marks	O
the	O
end	O
of	O
a	O
statement	O
the	O
standard	O
file	O
extension	O
for	O
n-triple	B
format	O
files	O
is	O
and	O
the	O
standard	O
format	O
for	O
format	O
files	O
is	O
my	O
preference	O
is	O
to	O
use	O
n-triple	B
format	O
files	O
as	O
output	O
from	O
programs	O
that	O
i	O
write	O
to	O
save	O
data	O
as	O
rdf	B
i	O
often	O
use	O
sesame	B
to	O
convert	O
n-triple	B
files	O
to	O
if	O
i	O
will	O
be	O
reading	O
them	O
or	O
even	O
hand	O
editing	O
them	O
you	O
will	O
see	O
why	O
i	O
prefer	O
the	O
format	O
when	O
we	O
look	O
at	O
an	O
example	O
kb	O
kbcontainscountry	O
here	O
we	O
see	O
the	O
use	O
of	O
an	O
abbreviation	O
prefix	O
kb	O
for	O
the	O
namespace	O
for	O
my	O
company	O
knowledgebooks	O
com	O
ontologies	O
the	O
first	O
term	O
in	O
the	O
rdf	B
statement	O
subject	O
is	O
the	O
uri	O
of	O
a	O
news	O
article	O
the	O
second	O
term	O
predicate	O
is	O
containscountry	O
in	O
the	O
kb	O
namespace	O
the	O
last	O
item	O
in	O
the	O
statement	O
object	O
is	O
a	O
string	O
literal	O
china	O
i	O
would	O
describe	O
this	O
rdf	B
statement	O
in	O
english	O
as	O
the	O
news	O
article	O
at	O
uri	O
mentions	O
the	O
country	O
china	O
this	O
was	O
a	O
very	O
simple	O
example	O
which	O
we	O
will	O
expand	O
to	O
show	O
additional	O
features	O
of	O
the	O
notation	O
as	O
another	O
example	O
suppose	O
that	O
this	O
news	O
article	O
also	O
rdf	B
the	O
universal	O
data	O
format	O
mentions	O
the	O
usa	O
instead	O
of	O
adding	O
a	O
whole	O
new	O
statement	O
like	O
this	O
kb	O
kbcontainscountry	O
kbcontainscountry	O
we	O
can	O
combine	O
them	O
using	O
notation	O
allows	O
us	O
to	O
collapse	O
multiple	O
rdf	B
statements	O
that	O
share	O
the	O
same	O
subject	O
and	O
optionally	O
the	O
same	O
predicate	O
kb	O
kbcontainscountry	O
we	O
can	O
also	O
add	O
in	O
additional	O
predicates	O
that	O
use	O
the	O
same	O
subject	O
kb	O
kbcontainscountry	O
kbcontainsorganization	O
nations	O
kbcontainsperson	O
ki-moon	O
brown	O
jintao	O
w	O
bush	O
musharraf	O
putin	O
ahmadinejad	O
this	O
single	O
statement	O
represents	O
ten	O
individual	O
rdf	B
triples	O
each	O
section	O
defining	O
triples	O
with	O
the	O
same	O
subject	O
and	O
predicate	O
have	O
objects	O
separated	O
by	O
commas	O
and	O
ending	O
with	O
a	O
period	O
please	O
note	O
that	O
whatever	O
rdf	B
storage	O
system	O
we	O
use	O
will	O
be	O
using	O
sesame	B
it	O
makes	O
no	O
difference	O
if	O
we	O
load	O
rdf	B
as	O
xml	O
n-triple	B
of	O
format	O
files	O
internally	O
subject	O
predicate	O
and	O
object	O
triples	O
are	O
stored	O
in	O
the	O
same	O
way	O
and	O
are	O
used	O
in	O
the	O
same	O
way	O
i	O
promised	O
you	O
that	O
the	O
data	O
in	O
rdf	B
data	O
stores	O
was	O
easy	O
to	O
extend	O
as	O
an	O
example	O
let	O
us	O
assume	O
that	O
we	O
have	O
written	O
software	O
that	O
is	O
able	O
to	O
read	O
online	O
news	O
articles	O
and	O
create	O
rdf	B
data	O
that	O
captures	O
some	O
of	O
the	O
semantics	O
in	O
the	O
articles	O
if	O
we	O
extend	O
our	O
program	O
to	O
also	O
recognize	O
dates	O
when	O
the	O
articles	O
are	O
published	O
we	O
can	O
simply	O
reprocess	O
articles	O
and	O
for	O
each	O
article	O
add	O
a	O
triple	O
to	O
our	O
rdf	B
data	O
store	O
using	O
a	O
form	O
like	O
kbdatepublished	O
semantic	B
web	I
furthermore	O
if	O
we	O
do	O
not	O
have	O
dates	O
for	O
all	O
news	O
articles	O
that	O
is	O
often	O
acceptable	O
depending	O
on	O
the	O
application	O
extending	O
rdf	B
with	O
rdf	B
schema	O
rdfs	B
supports	O
the	O
definition	O
of	O
classes	O
and	O
properties	O
based	O
on	O
set	O
inclusion	O
in	O
rdfs	B
classes	O
and	O
properties	O
are	O
orthogonal	O
we	O
will	O
not	O
simply	O
be	O
using	O
properties	O
to	O
define	O
data	O
attributes	O
for	O
classes	O
this	O
is	O
different	O
than	O
object	O
modeling	O
and	O
object	O
oriented	O
programming	O
languages	O
like	O
java	O
rdfs	B
is	O
encoded	O
as	O
rdf	B
the	O
same	O
syntax	O
because	O
the	O
semantic	B
web	I
is	O
intended	O
to	O
be	O
processed	O
automatically	O
by	O
software	O
systems	O
it	O
is	O
encoded	O
as	O
rdf	B
there	O
is	O
a	O
problem	O
that	O
must	O
be	O
solved	O
in	O
implementing	O
and	O
using	O
the	O
semantic	B
web	I
everyone	O
who	O
publishes	O
semantic	B
web	I
data	O
is	O
free	O
to	O
create	O
their	O
own	O
rdf	B
schemas	O
for	O
storing	O
data	O
for	O
example	O
there	O
is	O
usually	O
no	O
single	O
standard	O
rdf	B
schema	O
definition	O
for	O
topics	O
like	O
news	O
stories	O
and	O
stock	O
market	O
data	O
understanding	O
the	O
difficulty	O
of	O
integrating	O
different	O
data	O
sources	O
in	O
different	O
formats	O
helps	O
to	O
understand	O
the	O
design	O
decisions	O
behind	O
the	O
semantic	B
web	I
we	O
will	O
start	O
with	O
an	O
example	O
that	O
is	O
an	O
extension	O
of	O
the	O
example	O
in	O
the	O
last	O
section	O
that	O
also	O
uses	O
rdfs	B
we	O
add	O
a	O
few	O
additional	O
rdf	B
statements	O
are	O
rdfs	B
kb	O
rdfs	B
kbcontainscity	O
rdfssubpropertyof	O
kbcontainsplace	O
kbcontainscountry	O
rdfssubpropertyof	O
kbcontainsplace	O
kbcontainsstate	O
rdfssubpropertyof	O
kbcontainsplace	O
the	O
last	O
three	O
lines	O
declare	O
that	O
the	O
property	O
containscity	O
is	O
a	O
subproperty	O
of	O
containsplace	O
the	O
property	O
containscountry	O
is	O
a	O
subproperty	O
of	O
containsplace	O
the	O
property	O
containsstate	O
is	O
a	O
subproperty	O
of	O
containsplace	O
why	O
is	O
this	O
useful	O
for	O
at	O
least	O
two	O
reasons	O
you	O
can	O
query	O
an	O
rdf	B
data	O
store	O
for	O
all	O
triples	O
that	O
use	O
property	O
containsplace	O
and	O
also	O
match	O
triples	O
with	O
property	O
equal	O
to	O
containscity	O
containscountry	O
or	O
containsstate	O
there	O
may	O
not	O
even	O
be	O
any	O
triples	O
that	O
explicitly	O
use	O
the	O
property	O
containsplace	O
the	O
sparql	B
query	O
language	O
consider	O
a	O
hypothetical	O
case	O
where	O
you	O
are	O
using	O
two	O
different	O
rdf	B
data	O
stores	O
that	O
use	O
different	O
properties	O
for	O
naming	O
cities	O
cityname	O
and	O
city	O
you	O
can	O
define	O
cityname	O
to	O
be	O
a	O
subproperty	O
of	O
city	O
and	O
then	O
write	O
all	O
queries	O
against	O
the	O
single	O
property	O
name	O
city	O
this	O
removes	O
the	O
necessity	O
to	O
convert	O
data	O
from	O
different	O
sources	O
to	O
use	O
the	O
same	O
schema	O
in	O
addition	O
to	O
providing	O
a	O
vocabulary	O
for	O
describing	O
properties	O
and	O
class	O
membership	O
by	O
properties	O
rdfs	B
is	O
also	O
used	O
for	O
logical	O
inference	O
to	O
infer	O
new	O
triples	O
combine	O
data	O
from	O
different	O
rdf	B
data	O
sources	O
and	O
to	O
allow	O
effective	O
querying	O
of	O
rdf	B
data	O
stores	O
we	O
will	O
see	O
examples	O
of	O
all	O
of	O
these	O
features	O
of	O
rdfs	B
when	O
we	O
start	O
using	O
the	O
sesame	B
libraries	O
in	O
the	O
next	O
section	O
to	O
perform	O
sparql	B
queries	O
the	O
sparql	B
query	O
language	O
sparql	B
is	O
a	O
query	O
language	O
used	O
to	O
query	O
rdf	B
data	O
stores	O
while	O
sparql	B
may	O
initially	O
look	O
like	O
sql	O
we	O
will	O
see	O
that	O
there	O
are	O
some	O
important	O
differences	O
like	O
support	O
for	O
rdfs	B
and	O
owl	B
inferencing	O
section	O
and	O
graph-based	O
instead	O
of	O
relational	O
matching	O
operations	O
we	O
will	O
cover	O
the	O
basics	O
of	O
sparql	B
in	O
this	O
section	O
and	O
then	O
see	O
more	O
examples	O
in	O
section	O
when	O
we	O
learn	O
how	O
to	O
embed	O
sesame	B
in	O
java	O
applications	O
we	O
will	O
use	O
the	O
format	O
rdf	B
file	O
test	O
for	O
the	O
examples	O
in	O
this	O
section	O
and	O
in	O
section	O
this	O
file	O
was	O
created	O
automatically	O
by	O
spidering	O
reuters	O
news	O
stories	O
on	O
the	O
news	O
yahoo	O
com	O
web	O
site	O
and	O
automatically	O
extracting	O
named	O
entities	O
from	O
the	O
text	O
of	O
the	O
articles	O
we	O
will	O
see	O
techniques	O
for	O
extracting	O
named	O
entities	O
from	O
text	O
in	O
chapters	O
and	O
in	O
this	O
chapter	O
we	O
use	O
these	O
sample	O
rdf	B
files	O
that	O
i	O
have	O
created	O
as	O
input	O
from	O
another	O
source	O
you	O
have	O
already	O
seen	O
snippets	O
of	O
this	O
file	O
in	O
section	O
and	O
i	O
list	O
the	O
entire	O
file	O
here	O
for	O
reference	O
to	O
fit	O
line	O
width	O
you	O
may	O
find	O
the	O
file	O
easier	O
to	O
read	O
if	O
you	O
are	O
at	O
your	O
computer	O
and	O
open	O
the	O
file	O
in	O
a	O
text	O
editor	O
so	O
you	O
will	O
not	O
be	O
limited	O
to	O
what	O
fits	O
on	O
a	O
book	O
page	O
kb	O
rdfs	B
kbcontainscity	O
rdfssubpropertyof	O
kbcontainsplace	O
kbcontainscountry	O
rdfssubpropertyof	O
kbcontainsplace	O
kbcontainsstate	O
rdfssubpropertyof	O
kbcontainsplace	O
semantic	B
web	I
kbcontainscity	O
paul	O
chicago	O
city	O
kbcontainsregion	O
midwest	O
kbcontainscountry	O
states	O
kbcontainsstate	O
kbcontainsorganization	O
guard	O
department	O
of	O
agriculture	O
house	O
board	O
of	O
trade	O
of	O
transportation	O
kbcontainsperson	O
gray-fisher	O
miller	O
hollander	O
feltes	O
w	O
bush	O
kbcontainsindustryterm	O
inflation	O
ministers	O
kbcontainscity	O
kbcontainscountry	O
states	O
kbcontainsstate	O
kbcontainsorganization	O
house	O
kbcontainsperson	O
petraeus	O
administration	O
government	O
mccain	O
zebari	O
obama	O
w	O
bush	O
fiorina	O
kbcontainsindustryterm	O
prices	O
kbcontainscity	O
kbcontainscountry	O
states	O
republic	O
of	O
iran	O
the	O
sparql	B
query	O
language	O
kbcontainsstate	O
kbcontainsorganization	O
of	O
maryland	O
nations	O
kbcontainsperson	O
ki-moon	O
brown	O
jintao	O
w	O
bush	O
musharraf	O
putin	O
kull	O
ahmadinejad	O
kbcontainscity	O
paulo	O
lumpur	O
kbcontainsregion	O
kbcontainscountry	O
states	O
arabia	O
india	O
korea	O
kbcontainsorganization	O
reserve	O
bank	O
union	O
central	O
bank	O
commission	O
kbcontainsperson	O
myung-bak	O
nag	O
kbcontainscompany	O
bank	O
managing	O
inacio	O
lula	O
da	O
silva	O
lacker	O
kbcontainsindustryterm	O
bank	O
federal	O
reserve	O
bank	O
costs	O
ministers	O
oil	O
prices	O
prices	O
shock	O
prices	O
ministers	O
prices	O
in	O
the	O
following	O
examples	O
we	O
will	O
look	O
at	O
queries	O
but	O
not	O
the	O
results	O
please	O
be	O
patient	O
these	O
same	O
queries	O
are	O
used	O
in	O
the	O
embedded	O
java	O
examples	O
in	O
the	O
next	O
section	O
so	O
it	O
makes	O
sense	O
to	O
only	O
list	O
the	O
query	O
return	O
values	O
in	O
one	O
place	O
besides	O
that	O
you	O
will	O
enjoy	O
running	O
the	O
example	O
programs	O
yourself	O
and	O
experiment	O
with	O
modifying	O
the	O
queries	O
semantic	B
web	I
we	O
will	O
start	O
with	O
a	O
simple	O
sparql	B
query	O
for	O
subjects	O
article	O
urls	O
and	O
objects	O
countries	O
with	O
the	O
value	O
for	O
the	O
predicate	O
equal	O
to	O
containscountry	O
select	O
where	O
httpknowledgebooks	O
comontologycontainscountry	O
variables	O
in	O
queries	O
start	O
with	O
a	O
question	O
mark	O
character	O
and	O
can	O
have	O
any	O
names	O
we	O
can	O
make	O
this	O
query	O
easier	O
and	O
reduce	O
the	O
chance	O
of	O
misspelling	O
errors	O
by	O
using	O
a	O
namespace	O
prefix	O
prefix	O
kb	O
select	O
where	O
kbcontainscountry	O
we	O
could	O
have	O
filtered	O
on	O
any	O
other	O
predicate	O
for	O
instance	O
containsp	O
lace	O
here	O
is	O
another	O
example	O
using	O
a	O
match	O
against	O
a	O
string	O
literal	O
to	O
find	O
all	O
articles	O
exactly	O
matching	O
the	O
text	O
maryland	O
the	O
following	O
queries	O
were	O
copied	O
from	O
java	O
source	O
files	O
and	O
were	O
embedded	O
as	O
string	O
literals	O
so	O
you	O
will	O
see	O
quotation	O
marks	O
backslash	O
escaped	O
in	O
these	O
examples	O
if	O
you	O
were	O
entering	O
these	O
queries	O
into	O
a	O
query	O
form	O
you	O
would	O
not	O
escape	O
the	O
quotation	O
marks	O
prefix	O
kb	O
select	O
where	O
kbcontainsstate	O
we	O
can	O
also	O
match	O
partial	O
string	O
literals	O
against	O
regular	O
expressions	O
prefix	O
kb	O
select	O
where	O
kbcontainsorganization	O
filter	O
regex	O
object	O
using	O
sesame	B
prior	O
to	O
this	O
last	O
example	O
query	O
we	O
only	O
requested	O
that	O
the	O
query	O
return	O
values	O
for	O
subject	O
and	O
predicate	O
for	O
triples	O
that	O
matched	O
the	O
query	O
however	O
we	O
might	O
want	O
to	O
return	O
all	O
triples	O
whose	O
subject	O
this	O
case	O
a	O
news	O
article	O
uri	O
is	O
in	O
one	O
of	O
the	O
matched	O
triples	O
note	O
that	O
there	O
are	O
two	O
matching	O
triples	O
each	O
terminated	O
with	O
a	O
period	O
prefix	O
kb	O
select	O
where	O
kbcontainsorganization	O
filter	O
regex	O
object	O
distinct	O
order	O
by	O
limit	O
offset	O
when	O
where	O
clauses	O
contain	O
more	O
than	O
one	O
triple	O
pattern	O
to	O
match	O
this	O
is	O
equivalent	O
to	O
a	O
boolean	O
and	O
operation	O
the	O
distinct	O
clause	O
removes	O
duplicate	O
results	O
the	O
order	O
by	O
clause	O
sorts	O
the	O
output	O
in	O
alphabetical	O
order	O
in	O
this	O
case	O
first	O
by	O
predicate	O
containscountry	O
etc	O
and	O
then	O
by	O
object	O
the	O
limit	O
modifier	O
limits	O
the	O
number	O
of	O
results	O
returned	O
and	O
the	O
offset	O
modifier	O
sets	O
the	O
number	O
of	O
matching	O
results	O
to	O
skip	O
we	O
are	O
done	O
with	O
our	O
quick	O
tutorial	O
on	O
using	O
the	O
select	O
query	O
form	O
there	O
are	O
three	O
other	O
query	O
forms	O
that	O
i	O
am	O
not	O
covering	O
in	O
this	O
chapter	O
construct	O
returns	O
a	O
new	O
rdf	B
graph	O
of	O
query	O
results	O
ask	O
returns	O
boolean	O
true	O
or	O
false	O
indicating	O
if	O
a	O
query	O
matches	O
any	O
triples	O
describe	O
returns	O
a	O
new	O
rdf	B
graph	O
containing	O
matched	O
resources	O
using	O
sesame	B
sesame	B
is	O
a	O
complete	O
java	O
library	O
for	O
developing	O
rdfrdfs	O
applications	O
and	O
we	O
will	O
use	O
it	O
in	O
this	O
chapter	O
currently	O
sesame	B
s	O
support	O
for	O
owl	B
section	O
is	O
limited	O
other	O
java	O
libraries	O
i	O
have	O
used	O
that	O
more	O
fully	O
support	O
owl	B
are	O
jena	B
owlapi	O
and	O
the	O
protege	B
library	O
semantic	B
web	I
figure	O
java	O
utility	O
classes	O
and	O
interface	O
for	O
using	O
sesame	B
figure	O
shows	O
a	O
uml	O
diagram	O
for	O
the	O
wrapper	O
classes	O
and	O
interface	O
that	O
i	O
wrote	O
for	O
sesame	B
to	O
make	O
it	O
easier	O
for	O
you	O
to	O
get	O
started	O
my	O
wrapper	O
uses	O
an	O
in-memory	O
rdf	B
repository	O
that	O
supports	O
inference	O
loading	O
rdfrdfsowl	O
files	O
and	O
performing	O
queries	O
if	O
you	O
decide	O
to	O
use	O
semantic	B
web	I
technologies	O
in	O
your	O
development	O
you	O
will	O
eventually	O
want	O
to	O
use	O
the	O
full	O
sesame	B
apis	O
for	O
programatically	O
creating	O
new	O
rdf	B
triples	O
finer	O
control	O
of	O
the	O
type	O
of	O
repository	O
are	O
in-memory	O
disk	O
based	O
and	O
database	O
and	O
inferencing	O
and	O
programatically	O
using	O
query	O
results	O
that	O
said	O
using	O
my	O
wrapper	O
library	O
is	O
a	O
good	O
place	O
for	O
you	O
to	O
start	O
to	O
start	O
experimenting	O
the	O
class	O
constructor	O
t	O
riplestoresesamem	O
anager	O
opens	O
a	O
new	O
in-memory	O
rdf	B
triple	O
store	O
i	O
will	O
not	O
cover	O
the	O
internal	O
implementation	O
of	O
the	O
classes	O
and	O
interface	O
seen	O
in	O
figure	O
but	O
you	O
can	O
read	O
the	O
source	O
code	O
in	O
the	O
subdirectory	O
src-semanticweb	O
we	O
will	O
look	O
in	O
some	O
detail	O
at	O
an	O
example	O
program	O
that	O
uses	O
sesame	B
and	O
my	O
wrapper	O
library	O
for	O
sesame	B
the	O
source	O
code	O
for	O
this	O
example	O
is	O
in	O
the	O
file	O
examplesparqlqueries	O
java	O
this	O
example	O
class	O
implements	O
the	O
isparqlp	O
rocessresults	O
interface	O
public	O
class	O
examplesparqlqueries	O
implements	O
isparqlprocessresults	O
and	O
does	O
this	O
by	O
defining	O
the	O
method	O
public	O
void	O
processresultliststring	O
data	O
system	O
out	O
printnext	O
result	O
for	O
s	O
data	O
system	O
out	O
prints	O
system	O
out	O
println	O
processresultliststring	O
dataisparqlprocessresultsinterfaceloadrdfstring	O
rdf	B
file	O
path	O
nameclosedosparqlquerystring	O
sparql	B
query	O
isparqlprocessresults	O
handler	O
output	O
file	O
pathtriplestoresesamemanager	O
owl	B
the	O
web	O
ontology	O
language	O
that	O
simply	O
prints	O
out	O
the	O
subject	O
predicate	O
and	O
object	O
of	O
each	O
matched	O
triple	O
the	O
class	O
t	O
riplestoresesamem	O
anager	O
method	O
public	O
string	O
dosparqlquerystring	O
sparql	B
query	O
isparqlprocessresults	O
handler	O
calls	O
a	O
defined	O
processresult	O
method	O
once	O
for	O
each	O
triple	O
that	O
matches	O
a	O
query	O
the	O
examplesparqlqueries	O
class	O
makes	O
several	O
sparql	B
queries	O
and	O
prints	O
the	O
results	O
these	O
queries	O
are	O
the	O
example	O
queries	O
from	O
the	O
last	O
section	O
here	O
is	O
an	O
example	O
query	O
with	O
the	O
program	O
output	O
triplestoresesamemanager	O
ts	O
new	O
triplestoresesamemanager	O
sparql	B
query	O
kb	O
kbcontainsstate	O
ts	O
dosparqlquerysparql	O
query	O
this	O
here	O
is	O
the	O
single	O
line	O
of	O
output	O
debug	O
printout	O
is	O
not	O
shown	O
and	O
the	O
long	O
line	O
is	O
split	O
into	O
two	O
lines	O
to	O
fit	O
the	O
page	O
width	O
next	O
result	O
other	O
queries	O
in	O
the	O
last	O
section	O
return	O
two	O
or	O
three	O
values	O
per	O
result	O
this	O
example	O
only	O
returns	O
the	O
subject	O
url	O
you	O
can	O
run	O
the	O
text	O
program	O
implemented	O
in	O
the	O
class	O
examplesparqlqueries	O
to	O
see	O
all	O
of	O
the	O
query	O
results	O
for	O
the	O
examples	O
in	O
the	O
last	O
section	O
there	O
is	O
a	O
lot	O
more	O
to	O
rdfs	B
than	O
what	O
i	O
have	O
covered	O
so	O
far	O
in	O
this	O
chapter	O
but	O
i	O
believe	O
you	O
have	O
a	O
sufficient	O
introduction	O
in	O
order	O
to	O
use	O
the	O
example	O
programs	O
to	O
experiment	O
with	O
using	O
rdf	B
and	O
rdfs	B
to	O
define	O
data	O
and	O
use	O
sesame	B
in	O
an	O
imbedded	O
mode	O
in	O
your	O
java	O
applications	O
owl	B
the	O
web	O
ontology	O
language	O
we	O
have	O
already	O
seen	O
a	O
few	O
examples	O
of	O
using	O
rdfs	B
to	O
define	O
sub-properties	O
in	O
the	O
this	O
chapter	O
the	O
web	O
ontology	O
language	O
extends	O
the	O
expressive	O
power	O
of	O
semantic	B
web	I
rdfs	B
we	O
will	O
not	O
cover	O
owl	B
programming	O
examples	O
in	O
this	O
book	O
but	O
this	O
section	O
will	O
provide	O
some	O
background	O
material	O
sesame	B
version	O
included	O
in	O
the	O
zip	O
file	O
for	O
this	O
book	O
does	O
not	O
support	O
owl	B
dl	O
reasoning	B
out	O
of	O
the	O
box	O
when	O
i	O
need	O
to	O
use	O
owl	B
dl	O
reasoning	B
in	O
java	O
applications	O
i	O
use	O
one	O
or	O
more	O
of	O
the	O
following	O
protegeowlapis	O
compatible	O
with	O
the	O
protege	B
ontology	O
editor	O
pellet	O
dl	O
reasoner	O
owlim	O
owl	B
dl	O
reasoner	O
compatible	O
with	O
some	O
versions	O
of	O
sesame	B
jena	B
general	O
purpose	O
library	O
owlapi	O
a	O
simpler	O
api	O
using	O
many	O
other	O
libraries	O
owl	B
is	O
more	O
expressive	O
than	O
rdfs	B
in	O
that	O
it	O
supports	O
cardinality	O
richer	O
class	O
relationships	O
and	O
descriptive	O
logic	B
reasoning	B
owl	B
treats	O
the	O
idea	O
of	O
classes	O
very	O
differently	O
than	O
object	O
oriented	O
programming	O
languages	O
like	O
java	O
and	O
smalltalk	O
but	O
similar	O
to	O
the	O
way	O
powerloom	B
uses	O
concepts	O
s	O
rough	O
equivalent	O
to	O
a	O
class	O
in	O
owl	B
instances	O
of	O
a	O
class	O
are	O
referred	O
to	O
as	O
individuals	O
and	O
class	O
membership	O
is	O
determined	O
by	O
a	O
set	O
of	O
properties	O
that	O
allow	O
a	O
dl	O
reasoner	O
to	O
infer	O
class	O
membership	O
of	O
an	O
individual	O
is	O
called	O
entailment	O
we	O
saw	O
an	O
example	O
of	O
expressing	O
transitive	O
relationships	O
when	O
we	O
were	O
using	O
powerloom	B
in	O
section	O
where	O
we	O
defined	O
a	O
powerloom	B
rule	O
to	O
express	O
that	O
the	O
relation	O
contains	O
is	O
transitive	O
we	O
will	O
now	O
look	O
at	O
a	O
similar	O
example	O
using	O
owl	B
we	O
have	O
been	O
using	O
the	O
rdf	B
file	O
in	O
previous	O
examples	O
and	O
we	O
will	O
layer	O
new	O
examples	O
by	O
adding	O
new	O
triples	O
that	O
represent	O
rdf	B
rdfs	B
and	O
owl	B
we	O
saw	O
in	O
the	O
definition	O
of	O
three	O
triples	O
using	O
rdfssubpropertyof	O
properties	O
to	O
create	O
a	O
more	O
general	O
kbcontainsplace	O
property	O
kbcontainscity	O
rdfssubpropertyof	O
kbcontainsplace	O
kbcontainscountry	O
rdfssubpropertyof	O
kbcontainsplace	O
kbcontainsstate	O
rdfssubpropertyof	O
kbcontainsplace	O
kbcontainsplace	O
rdftype	O
owltransitiveproperty	O
kbplaceunitedstates	O
kbcontainsstate	O
kbplaceillinois	O
kbplaceillinois	O
kbcontainscity	O
kbplacechicago	O
we	O
can	O
also	O
infer	O
that	O
kbplaceunitedstates	O
kbcontainsplace	O
kbplacechicago	O
knowledge	B
representation	I
and	O
rest	O
we	O
can	O
also	O
model	O
inverse	O
properties	O
in	O
owl	B
for	O
example	O
here	O
we	O
add	O
an	O
inverse	O
property	O
kbcontainedin	O
adding	O
it	O
to	O
the	O
example	O
in	O
the	O
last	O
listing	O
kbcontainedin	O
owlinverseof	O
kbcontainsplace	O
given	O
an	O
rdf	B
container	O
that	O
supported	O
extended	O
owl	B
dl	O
sparql	B
queries	O
we	O
can	O
now	O
execute	O
sparql	B
queries	O
matching	O
the	O
property	O
kbcontainedin	O
and	O
match	O
triples	O
in	O
the	O
rdf	B
triple	O
store	O
that	O
have	O
never	O
been	O
asserted	O
owl	B
dl	O
is	O
a	O
very	O
large	O
subject	O
and	O
owl	B
is	O
an	O
even	O
larger	O
subject	O
from	O
reading	O
chapter	O
and	O
the	O
very	O
light	O
coverage	O
of	O
owl	B
in	O
this	O
section	O
you	O
should	O
understand	O
the	O
concept	O
of	O
class	O
membership	O
not	O
by	O
explicitly	O
stating	O
that	O
an	O
object	O
individual	O
is	O
a	O
member	O
of	O
a	O
class	O
but	O
rather	O
because	O
an	O
individual	O
has	O
properties	O
that	O
can	O
be	O
used	O
to	O
infer	O
class	O
membership	O
the	O
world	O
wide	O
web	O
consortium	O
has	O
defined	O
three	O
versions	O
of	O
the	O
owl	B
language	O
that	O
are	O
in	O
increasing	O
order	O
of	O
complexity	O
owl	B
lite	O
owl	B
dl	O
and	O
owl	B
full	O
owl	B
dl	O
description	B
logic	B
is	O
the	O
most	O
widely	O
used	O
recommended	O
version	O
of	O
owl	B
owl	B
full	O
is	O
not	O
computationally	O
decidable	O
since	O
it	O
supports	O
full	O
logic	B
multiple	O
class	O
inheritance	O
and	O
other	O
things	O
that	O
probably	O
make	O
it	O
computationally	O
intractable	O
for	O
all	O
but	O
small	O
problems	O
knowledge	B
representation	I
and	O
rest	O
a	O
theme	O
in	O
this	O
book	O
is	O
representing	O
knowledge	O
using	O
logic	B
expert	B
system	I
rules	O
relational	O
databases	O
at	O
the	O
physical	O
model	O
level	O
conceptual	O
models	O
like	O
entity	O
relation	O
and	O
in	O
flexible	O
data	O
models	O
like	O
rdf	B
and	O
rdfs	B
higher	O
level	O
conceptual	O
models	O
in	O
owl	B
i	O
want	O
to	O
make	O
some	O
comments	O
about	O
the	O
rest	O
architectural	O
style	O
and	O
how	O
it	O
is	O
complementary	O
to	O
distributed	O
knowledge	B
representation	I
on	O
the	O
web	O
the	O
rest	O
model	O
implies	O
that	O
resource	O
providers	O
have	O
some	O
internal	O
model	O
for	O
the	O
storage	O
and	O
maintenance	O
of	O
data	O
but	O
use	O
a	O
possibly	O
different	O
representation	O
of	O
their	O
internal	O
data	O
model	O
to	O
transfer	O
their	O
internal	O
data	O
to	O
clients	O
i	O
would	O
argue	O
that	O
rdf	B
is	O
often	O
a	O
good	O
representation	O
for	O
resource	O
providers	O
to	O
use	O
for	O
transferring	O
data	O
in	O
their	O
internal	O
data	O
formats	O
to	O
rest	O
clients	O
because	O
of	O
its	O
flexibility	O
in	O
describing	O
both	O
data	O
and	O
relations	O
between	O
data	O
rdf	B
is	O
inherently	O
a	O
rich	O
notation	O
because	O
rdfs	B
and	O
owl	B
are	O
themselves	O
expressed	O
as	O
rdf	B
data	O
i	O
expect	O
that	O
conventional	O
data	O
sources	O
like	O
relational	O
databases	O
and	O
conventional	O
data-rich	O
web	O
sites	O
will	O
benefit	O
from	O
publishing	O
rest	O
style	O
interfaces	O
using	O
rdf	B
as	O
the	O
external	O
representation	O
of	O
data	O
we	O
are	O
already	O
seeing	O
interesting	O
and	O
useful	O
semantic	B
web	I
projects	O
that	O
utilize	O
a	O
data	O
source	O
to	O
publish	O
data	O
as	O
rdf	B
embedded	O
as	O
rdfa	O
xhtml	O
notation	O
for	O
embedding	O
rdf	B
in	O
xhtml	O
web	O
pages	O
and	O
i	O
see	O
this	O
as	O
a	O
growth	O
area	O
for	O
publishing	O
information	O
resources	O
that	O
are	O
useful	O
for	O
both	O
humans	O
and	O
software	O
agents	O
material	O
for	O
further	O
study	O
writing	O
semantic	B
web	I
applications	O
in	O
java	O
is	O
a	O
very	O
large	O
topic	O
worthy	O
of	O
an	O
entire	O
book	O
i	O
have	O
covered	O
in	O
this	O
chapter	O
what	O
for	O
my	O
work	O
have	O
been	O
the	O
most	O
useful	O
semantic	B
web	I
techniques	O
storing	O
and	O
querying	O
rdf	B
and	O
rdfs	B
for	O
a	O
specific	O
application	O
we	O
will	O
see	O
in	O
chapter	O
some	O
useful	O
techniques	O
for	O
gathering	O
semantic	O
information	O
from	O
the	O
web	O
specifically	O
in	O
section	O
i	O
briefly	O
talk	O
about	O
entering	O
semantic	O
data	O
from	O
the	O
open	B
calais	I
system	O
into	O
a	O
sesame	B
rdf	B
repository	O
i	O
have	O
already	O
mentioned	O
several	O
java	O
libraries	O
that	O
support	O
owl	B
descriptive	O
logic	B
reasoning	B
in	O
section	O
when	O
the	O
expressive	O
power	O
of	O
rdf	B
and	O
rdfs	B
become	O
insufficient	O
for	O
your	O
application	O
you	O
will	O
then	O
need	O
to	O
use	O
a	O
library	O
supporting	O
the	O
owl	B
language	O
and	O
owl	B
description	B
logic	B
reasoning	B
the	O
combination	O
of	O
rdf	B
and	O
rdfs	B
is	O
sufficient	O
for	O
many	O
applications	O
and	O
using	O
this	O
simpler	O
technology	O
is	O
the	O
right	O
way	O
to	O
get	O
started	O
developing	O
semantic	B
web	I
applications	O
because	O
rdf	B
and	O
rdfs	B
very	O
few	O
owl	B
features	O
commonly	O
referred	O
to	O
as	O
rdfs-plus	O
are	O
easier	O
to	O
implement	O
and	O
have	O
a	O
smaller	O
learning	O
curve	O
i	O
believe	O
that	O
the	O
adoption	O
of	O
owl	B
dl	O
will	O
be	O
slow	O
i	O
concentrated	O
on	O
using	O
sesame	B
in	O
an	O
embedded	O
mode	O
in	O
java	O
applications	O
in	O
this	O
chapter	O
but	O
another	O
common	O
use	O
is	O
as	O
an	O
rdf	B
repository	O
web	O
service	O
in	O
either	O
case	O
the	O
basic	O
ideas	O
of	O
converting	O
data	O
to	O
rdf	B
storing	O
rdf	B
and	O
allowing	O
sparql	B
queries	O
are	O
the	O
same	O
expert	O
systems	O
we	O
will	O
be	O
using	O
the	O
drools	B
java	O
expert	B
system	I
language	O
and	O
libraries	O
in	O
this	O
chapter	O
earlier	O
editions	O
of	O
this	O
book	O
used	O
the	O
jess	B
expert	B
system	I
tool	O
but	O
due	O
to	O
the	O
new	O
more	O
restrictive	O
jess	B
licensing	O
terms	O
i	O
decided	O
to	O
switch	O
to	O
drools	B
because	O
it	O
is	O
released	O
under	O
the	O
apache	O
license	O
the	O
primary	O
web	O
site	O
for	O
drools	B
is	O
www	O
jboss	O
orgdrools	O
where	O
you	O
can	O
download	O
the	O
source	O
code	O
and	O
documentation	O
both	O
jess	B
and	O
drools	B
are	O
forward	B
chaining	I
inference	O
engines	O
that	O
use	O
the	O
rete	O
algorithm	O
and	O
are	O
derived	O
from	O
charles	O
forgy	O
s	O
language	O
one	O
thing	O
to	O
keep	O
in	O
mind	O
whenever	O
you	O
are	O
building	O
a	O
system	O
based	O
on	O
the	O
rete	O
algorithm	O
is	O
that	O
rete	O
scales	O
very	O
well	O
to	O
large	O
numbers	O
of	O
rules	O
but	O
scales	O
at	O
on	O
where	O
n	O
is	O
the	O
number	O
of	O
facts	O
in	O
the	O
system	O
i	O
have	O
a	O
long	O
history	O
with	O
porting	O
it	O
to	O
xerox	O
lisp	O
machines	O
and	O
the	O
apple	O
macintosh	O
as	O
well	O
as	O
building	O
custom	O
versions	O
supporting	O
multiple	O
worlds	O
of	O
data	O
and	O
rule	O
spaces	O
one	O
thing	O
that	O
i	O
would	O
like	O
to	O
make	O
clear	O
drools	B
is	O
the	O
only	O
technology	O
that	O
i	O
am	O
covering	O
in	O
this	O
book	O
that	O
i	O
have	O
not	O
used	O
professionally	O
that	O
said	O
i	O
spent	O
some	O
effort	O
getting	O
up	O
to	O
speed	O
on	O
drools	B
as	O
a	O
replacement	O
for	O
jess	B
on	O
future	O
projects	O
while	O
there	O
is	O
some	O
interest	O
in	O
using	O
packages	O
like	O
drools	B
for	O
business	O
rules	O
to	O
capture	O
business	B
process	I
knowledge	I
often	O
as	O
embedded	O
components	O
in	O
large	O
systems	O
expert	O
systems	O
have	O
historically	O
been	O
built	O
to	O
approach	O
human	O
level	O
expertise	O
for	O
very	O
specific	O
tasks	O
like	O
configuring	O
computer	O
systems	O
and	O
medical	O
diagnosis	O
the	O
examples	O
in	O
this	O
chapter	O
are	O
very	O
simple	O
and	O
are	O
intended	O
to	O
show	O
you	O
how	O
to	O
embed	O
drools	B
in	O
your	O
java	O
applications	O
and	O
to	O
show	O
you	O
a	O
few	O
tricks	O
for	O
using	O
forward	B
chaining	I
rule-based	O
systems	O
drools	B
is	O
a	O
domain	O
specific	O
language	O
that	O
attempts	O
to	O
provide	O
a	O
syntax	O
that	O
is	O
easier	O
to	O
use	O
than	O
a	O
general	O
purpose	O
programming	O
language	O
i	O
do	O
not	O
usually	O
recommend	O
java	O
ides	O
personal	O
choice	O
but	O
if	O
you	O
already	O
use	O
eclipse	O
then	O
i	O
suggest	O
that	O
you	O
use	O
the	O
drools	B
plugins	O
for	O
eclipse	O
eclipse	O
drools	B
workbench	O
which	O
help	O
setting	O
up	O
projects	O
and	O
understand	O
the	O
drools	B
rule	O
language	O
syntax	O
the	O
eclipse	O
drools	B
workbench	O
can	O
automatically	O
generate	O
a	O
small	O
demo	O
which	O
i	O
will	O
go	O
over	O
in	O
some	O
detail	O
in	O
the	O
next	O
two	O
sections	O
i	O
then	O
design	O
and	O
implement	O
two	O
simple	O
example	O
rule	O
systems	O
for	O
solving	O
block	O
world	O
type	O
problems	O
and	O
for	O
answering	O
help	O
desk	O
questions	O
the	O
material	O
in	O
this	O
chapter	O
exclusively	O
covers	O
forward	B
chaining	I
production	O
systems	O
expert	O
systems	O
figure	O
using	O
drools	B
for	O
developing	O
rule-based	O
systems	O
and	O
then	O
deploying	O
them	O
called	O
expert	O
systems	O
forward	B
chaining	I
systems	O
start	O
with	O
a	O
set	O
of	O
known	O
facts	O
and	O
apply	O
rules	O
to	O
work	O
towards	O
solving	O
one	O
or	O
more	O
goals	O
an	O
alternative	O
approach	O
often	O
used	O
in	O
prolog	B
programs	O
is	O
to	O
use	O
backward	B
chaining	I
backward	B
chaining	I
systems	O
start	O
with	O
a	O
final	O
goal	O
and	O
attempt	O
to	O
work	O
backwards	O
towards	O
currently	O
known	O
facts	O
the	O
phrase	O
expert	O
systems	O
was	O
almost	O
synonymous	O
with	O
artificial	O
intelligence	O
in	O
the	O
early	O
and	O
mid	O
the	O
application	O
of	O
expert	B
system	I
techniques	O
to	O
real	O
problems	O
like	O
configuring	O
dec	O
vax	O
minicomputers	O
medical	O
diagnosis	O
and	O
evaluating	O
seismic	O
data	O
for	O
planning	O
oil	O
exploration	O
had	O
everyone	O
very	O
excited	O
unfortunately	O
expert	O
systems	O
were	O
over	O
hyped	O
and	O
there	O
was	O
an	O
eventual	O
backlash	O
that	O
affected	O
the	O
entire	O
field	O
of	O
ai	O
still	O
the	O
knowledge	O
of	O
how	O
to	O
write	O
expert	O
systems	O
is	O
a	O
useful	O
skill	O
this	O
chapter	O
contains	O
a	O
tutorial	O
for	O
using	O
the	O
drools	B
system	O
and	O
also	O
shows	O
how	O
to	O
use	O
machine	B
learning	I
to	O
help	O
generate	O
rules	O
when	O
training	O
data	O
is	O
available	O
as	O
seen	O
in	O
figure	O
drools	B
development	O
is	O
interactive	O
you	O
will	O
work	O
in	O
an	O
environment	O
where	O
you	O
can	O
quickly	O
add	O
and	O
change	O
rules	O
and	O
re-run	O
test	O
cases	O
this	O
interactive	O
style	O
of	O
development	O
is	O
similar	O
to	O
using	O
powerloom	B
as	O
we	O
saw	O
in	O
chapter	O
droolsinferenceengineworking	O
memoryfactsrulesdeveloperinteractivedevelopmenteclipse	O
droolsworkbenchapplication	O
programsdroolsapi	O
production	O
systems	O
production	O
systems	O
i	O
like	O
to	O
refer	O
to	O
expert	O
systems	O
by	O
a	O
more	O
precise	O
name	O
production	O
systems	O
productions	O
are	O
rules	O
for	O
transforming	O
state	O
for	O
example	O
given	O
the	O
three	O
production	B
rules	I
a	O
b	O
b	O
c	O
c	O
d	O
then	O
if	O
a	O
production	O
system	O
is	O
initialized	O
with	O
the	O
state	O
a	O
the	O
state	O
d	O
can	O
be	O
derived	O
by	O
applying	O
these	O
three	O
production	B
rules	I
in	O
order	O
the	O
form	O
of	O
these	O
production	B
rules	I
is	O
side	O
side	O
or	O
lhs	B
rhs	B
like	O
the	O
powerloom	B
reasoning	B
system	O
used	O
in	O
chapter	O
much	O
of	O
the	O
power	O
of	O
a	O
rule-based	O
system	O
comes	O
from	O
the	O
ability	O
to	O
use	O
variables	O
so	O
that	O
the	O
left-hand	O
side	O
patterns	O
can	O
match	O
a	O
variety	O
of	O
known	O
facts	O
working	O
memory	O
in	O
drools	B
the	O
values	O
of	O
these	O
variables	O
set	O
in	O
the	O
lhs	B
matching	O
process	O
are	O
substituted	O
for	O
the	O
variables	O
on	O
the	O
right-hand	O
side	O
patterns	O
production	O
rule	O
systems	O
are	O
much	O
less	O
expressive	O
than	O
description	B
logic	B
style	O
reasoners	O
like	O
powerloom	B
the	O
benefits	O
of	O
production	O
rule	O
systems	O
is	O
that	O
they	O
should	O
have	O
better	O
runtime	O
efficiency	O
and	O
are	O
easier	O
to	O
use	O
a	O
smaller	O
learning	O
curve	O
good	O
advice	O
is	O
to	O
use	O
production	O
systems	O
when	O
they	O
are	O
adequate	O
and	O
if	O
not	O
use	O
a	O
more	O
expressive	O
knowledge	B
representation	I
and	O
reasoning	B
system	O
like	O
powerloom	B
the	O
drools	B
rules	O
language	O
the	O
basic	O
syntax	O
out	O
optional	O
components	O
of	O
a	O
drools	B
rule	O
is	O
rule	O
name	O
for	O
the	O
rule	O
when	O
lhs	B
expert	O
systems	O
then	O
rhs	B
end	O
what	O
might	O
sample	O
lhs	B
and	O
rhs	B
statements	O
look	O
like	O
drools	B
rules	O
reference	O
pojos	O
plain	O
old	O
java	O
objects	O
in	O
both	O
the	O
lhs	B
matching	O
expressions	O
and	O
rhs	B
actions	O
if	O
you	O
use	O
the	O
eclipse	O
drools	B
workbench	O
and	O
create	O
a	O
new	O
demo	O
project	O
the	O
workbench	O
will	O
automatically	O
create	O
for	O
you	O
sample	O
drl	O
a	O
sample	O
rule	O
file	O
com	O
sample	O
droolstest	O
java	O
defines	O
a	O
simple	O
java	O
pojo	O
class	O
m	O
essage	O
that	O
is	O
used	O
in	O
the	O
sample	O
drl	O
rule	O
file	O
a	O
utility	O
method	O
for	O
loading	O
rules	O
and	O
a	O
main	O
method	O
that	O
loads	O
rules	O
and	O
creates	O
an	O
instance	O
of	O
the	O
m	O
essage	O
class	O
that	O
fires	O
the	O
first	O
rule	O
in	O
sample	O
drl	O
even	O
if	O
you	O
decide	O
not	O
to	O
use	O
the	O
eclipse	O
drools	B
workbench	O
i	O
include	O
these	O
two	O
auto-generated	O
files	O
in	O
the	O
zip	O
file	O
for	O
this	O
book	O
and	O
we	O
will	O
use	O
these	O
files	O
to	O
introduce	O
both	O
the	O
syntax	O
of	O
rues	O
and	O
using	O
rules	O
and	O
drools	B
in	O
java	O
applications	O
in	O
the	O
next	O
section	O
here	O
is	O
the	O
sample	O
drl	O
file	O
package	O
com	O
sample	O
import	O
com	O
sample	O
droolstest	O
message	O
rule	O
world	O
when	O
m	O
messagestatus	O
message	O
hello	O
message	O
message	O
then	O
system	O
out	O
printlnmessage	O
m	O
setmessagegoodbye	O
cruel	O
world	O
m	O
setstatusmessage	O
goodbye	O
updatem	O
end	O
rule	O
no-loop	O
true	O
when	O
m	O
messagestatus	O
message	O
goodbye	O
message	O
message	O
then	O
system	O
out	O
printlnmessage	O
using	O
drools	B
in	O
java	O
applications	O
m	O
setmessagemessage	O
end	O
this	O
example	O
rule	O
file	O
defines	O
which	O
java	O
package	O
it	O
has	O
visibility	O
in	O
we	O
will	O
see	O
in	O
the	O
next	O
section	O
that	O
the	O
java	O
code	O
that	O
defines	O
the	O
pojo	O
m	O
essage	O
class	O
and	O
code	O
that	O
uses	O
these	O
rules	O
will	O
be	O
in	O
the	O
same	O
java	O
package	O
this	O
class	O
has	O
private	O
data	O
public	O
accessor	O
methods	O
using	O
java	O
bean	O
protocol	O
for	O
attributes	O
status	O
and	O
message	O
another	O
thing	O
that	O
might	O
surprise	O
you	O
in	O
this	O
example	O
is	O
the	O
direct	O
calls	O
to	O
the	O
static	O
java	O
method	O
system	O
out	O
println	O
this	O
is	O
a	O
hint	O
that	O
drools	B
will	O
end	O
up	O
compiling	O
these	O
rules	O
into	O
java	O
byte	O
code	O
when	O
drools	B
sees	O
a	O
reference	O
to	O
the	O
class	O
m	O
essage	O
since	O
there	O
are	O
no	O
java	O
import	O
statements	O
in	O
this	O
example	O
rule	O
file	O
the	O
class	O
m	O
essage	O
must	O
be	O
in	O
the	O
package	O
com	O
sample	O
on	O
the	O
lhs	B
of	O
both	O
rules	O
any	O
instance	O
of	O
class	O
m	O
essage	O
that	O
matches	O
and	O
thus	O
allows	O
the	O
rule	O
to	O
fire	O
sets	O
a	O
reference	O
to	O
the	O
matched	O
object	O
to	O
the	O
local	O
variable	O
m	O
that	O
can	O
then	O
be	O
used	O
on	O
the	O
rhs	B
of	O
the	O
rule	O
in	O
the	O
first	O
rule	O
the	O
attribute	O
message	O
is	O
also	O
stored	O
in	O
a	O
local	O
variable	O
confusingly	O
also	O
called	O
message	O
note	O
that	O
the	O
public	O
attribute	O
accessor	O
methods	O
like	O
setm	O
essage	O
are	O
used	O
to	O
change	O
the	O
state	O
of	O
a	O
matched	O
m	O
essage	O
object	O
we	O
will	O
see	O
later	O
that	O
the	O
first	O
step	O
in	O
writing	O
a	O
drools	B
based	O
expert	B
system	I
is	O
modeling	O
java	O
classes	O
the	O
data	O
required	O
to	O
represent	O
problem	O
states	O
after	O
you	O
have	O
defined	O
these	O
pojo	O
classes	O
you	O
can	O
then	O
proceed	O
with	O
defining	O
some	O
initial	O
test	O
cases	O
and	O
start	O
writing	O
rules	O
to	O
handle	O
the	O
test	O
cases	O
drools	B
development	O
of	O
nontrivial	O
projects	O
will	O
involve	O
an	O
iterative	O
process	O
of	O
adding	O
new	O
test	O
cases	O
writing	O
new	O
rules	O
or	O
generalizing	O
previously	O
written	O
rules	O
and	O
making	O
sure	O
that	O
both	O
the	O
original	O
and	O
newer	O
test	O
cases	O
work	O
there	O
is	O
a	O
complete	O
reference	O
description	O
of	O
the	O
drools	B
rule	I
syntax	I
on	O
the	O
drools	B
documentation	O
wiki	O
the	O
material	O
in	O
this	O
chapter	O
is	O
tutorial	O
in	O
nature	O
new	O
features	O
of	O
the	O
rule	O
language	O
and	O
how	O
to	O
use	O
drools	B
will	O
be	O
introduced	O
as	O
needed	O
for	O
the	O
examples	O
using	O
drools	B
in	O
java	O
applications	O
we	O
looked	O
at	O
the	O
sample	O
rules	O
file	O
sample	O
drl	O
in	O
the	O
last	O
section	O
which	O
is	O
generated	O
automatically	O
when	O
creating	O
a	O
demo	O
project	O
with	O
the	O
eclipse	O
drools	B
workbench	O
we	O
will	O
use	O
the	O
other	O
generated	O
file	O
droolstest	O
java	O
as	O
an	O
illustrative	O
example	O
in	O
this	O
section	O
the	O
file	O
droolstest	O
java	O
is	O
almost	O
lines	O
long	O
so	O
i	O
will	O
list	O
it	O
in	O
small	O
fragments	O
followed	O
by	O
an	O
explanation	O
of	O
each	O
code	O
fragment	O
the	O
first	O
thing	O
to	O
note	O
is	O
that	O
the	O
java	O
client	O
code	O
is	O
in	O
the	O
same	O
package	O
as	O
the	O
rules	O
file	O
expert	O
systems	O
package	O
com	O
sample	O
import	O
java	O
io	O
inputstreamreader	O
import	O
java	O
io	O
reader	O
import	O
org	O
drools	B
rulebase	O
import	O
org	O
drools	B
rulebasefactory	O
import	O
org	O
drools	B
workingmemory	O
import	O
org	O
drools	B
compiler	O
packagebuilder	O
import	O
org	O
drools	B
rule	O
package	O
this	O
main	O
function	O
is	O
an	O
example	O
showing	O
how	O
to	O
use	O
a	O
rule	O
package	O
defined	O
in	O
a	O
rule	O
source	O
file	O
we	O
will	O
see	O
the	O
definition	O
of	O
the	O
utility	O
method	O
readrule	O
that	O
opens	O
a	O
rule	O
file	O
and	O
returns	O
an	O
instance	O
of	O
class	O
rulebase	O
shortly	O
after	O
creating	O
an	O
instance	O
of	O
rulebase	O
we	O
create	O
an	O
instance	O
of	O
the	O
m	O
essage	O
class	O
and	O
add	O
it	O
to	O
open	O
memory	O
public	O
class	O
droolstest	O
public	O
static	O
final	O
void	O
mainstring	O
args	O
try	O
rulebase	O
rulebase	O
readrule	O
workingmemory	O
workingmemory	O
rulebase	O
newstatefulsession	O
message	O
message	O
new	O
message	O
message	O
setmessage	O
world	O
message	O
setstatus	O
message	O
hello	O
workingmemory	O
insert	O
message	O
workingmemory	O
fireallrules	O
catch	O
t	O
t	O
printstacktrace	O
the	O
main	O
method	O
creates	O
a	O
new	O
rule	O
base	O
and	O
working	O
memory	O
working	O
memory	O
is	O
responsible	O
for	O
maintaining	O
the	O
facts	O
in	O
the	O
system	O
in	O
this	O
case	O
facts	O
are	O
plain	O
old	O
java	O
objects	O
that	O
are	O
maintained	O
in	O
a	O
collection	O
an	O
instance	O
of	O
class	O
m	O
essage	O
is	O
created	O
and	O
its	O
status	O
is	O
set	O
to	O
the	O
constant	O
value	O
m	O
essage	O
hello	O
we	O
saw	O
in	O
the	O
last	O
section	O
how	O
the	O
first	O
example	O
rule	O
has	O
a	O
condition	O
that	O
allows	O
the	O
rule	O
to	O
fire	O
if	O
there	O
is	O
any	O
instance	O
of	O
class	O
m	O
essage	O
that	O
has	O
its	O
status	O
attribute	O
set	O
to	O
this	O
value	O
the	O
method	O
f	O
ireallrules	O
will	O
keep	O
identifying	O
rules	O
that	O
are	O
eligible	O
to	O
fire	O
choosing	O
a	O
rule	O
from	O
this	O
active	O
set	O
using	O
algorithms	O
we	O
will	O
discuss	O
later	O
and	O
then	O
repeat	O
using	O
drools	B
in	O
java	O
applications	O
ing	O
this	O
process	O
until	O
no	O
more	O
rules	O
are	O
eligible	O
to	O
fire	O
there	O
are	O
other	O
f	O
ireallrules	O
methods	O
that	O
have	O
arguments	O
for	O
a	O
maximum	O
number	O
of	O
rules	O
to	O
fire	O
and	O
a	O
filter	O
to	O
allow	O
only	O
some	O
eligible	O
rules	O
to	O
execute	O
please	O
note	O
that	O
this	O
is	O
the	O
level	O
rule	O
assembly	O
api	O
private	O
static	O
rulebase	O
readrule	O
throws	O
exception	O
in	O
the	O
source	O
reader	O
source	O
new	O
inputstreamreader	O
droolstest	O
class	O
getresourceasstreamsample	O
drl	O
optionally	O
read	O
in	O
the	O
dsl	O
if	O
you	O
are	O
using	O
one	O
reader	O
dsl	O
getresourceasstreammylang	O
dsl	O
new	O
inputstreamreader	O
droolstest	O
class	O
the	O
method	O
readrule	O
is	O
a	O
utility	O
for	O
reading	O
and	O
compiling	O
a	O
rule	O
file	O
that	O
was	O
generated	O
automatically	O
by	O
the	O
eclipse	O
drools	B
workbench	O
in	O
general	O
your	O
projects	O
will	O
have	O
one	O
or	O
more	O
rules	O
files	O
that	O
you	O
will	O
load	O
as	O
in	O
this	O
example	O
in	O
method	O
readrule	O
we	O
opened	O
an	O
input	O
stream	O
reader	O
on	O
the	O
source	O
code	O
for	O
the	O
example	O
drools	B
rule	O
file	O
sample	O
drl	O
drools	B
has	O
the	O
ability	O
to	O
modify	O
the	O
rule	O
syntax	O
to	O
create	O
domain	O
specific	O
languages	O
that	O
match	O
your	O
application	O
or	O
business	O
domain	O
this	O
can	O
be	O
very	O
useful	O
if	O
you	O
want	O
domain	O
experts	O
to	O
create	O
rules	O
since	O
they	O
can	O
use	O
their	O
own	O
language	O
we	O
will	O
not	O
cover	O
custom	O
dsls	O
in	O
this	O
chapter	O
but	O
the	O
drools	B
documentation	O
covers	O
this	O
in	O
detail	O
here	O
is	O
the	O
rest	O
of	O
the	O
definition	O
of	O
method	O
readrule	O
use	O
package	O
builder	O
to	O
build	O
up	O
a	O
rule	O
package	O
packagebuilder	O
builder	O
new	O
packagebuilder	O
this	O
will	O
parse	O
and	O
compile	O
in	O
one	O
step	O
builder	O
addpackagefromdrlsource	O
use	O
the	O
following	O
instead	O
of	O
above	O
if	O
you	O
are	O
using	O
a	O
custom	O
dsl	O
source	O
dsl	O
expert	O
systems	O
get	O
the	O
compiled	O
package	O
is	O
serializable	O
package	O
pkg	O
builder	O
getpackage	O
add	O
the	O
package	O
to	O
a	O
rulebase	O
the	O
rule	O
package	O
rulebase	O
rulebase	O
rulebasefactory	O
newrulebase	O
rulebase	O
addpackage	O
pkg	O
return	O
rulebase	O
the	O
readrule	O
utility	O
method	O
can	O
be	O
copied	O
to	O
new	O
rule	O
projects	O
that	O
are	O
not	O
created	O
using	O
the	O
eclipse	O
drools	B
workbench	O
and	O
modified	O
as	O
appropriate	O
to	O
get	O
you	O
started	O
with	O
the	O
java	O
boilerplate	O
required	O
by	O
drools	B
this	O
implementation	O
uses	O
drools	B
defaults	O
the	O
most	O
important	O
being	O
the	O
conflict	O
resolution	O
strategy	O
that	O
defaults	O
to	O
first	O
checking	O
the	O
most	O
recently	O
modified	O
working	O
memory	O
pojo	O
objects	O
to	O
see	O
which	O
rules	O
can	O
fire	O
this	O
produces	O
a	O
depth	O
first	O
search	B
behavior	O
we	O
will	O
modify	O
the	O
readrule	O
utility	O
method	O
later	O
in	O
section	O
when	O
we	O
will	O
need	O
to	O
change	O
this	O
default	O
drools	B
reasoning	B
behavior	O
from	O
depth	O
first	O
to	O
breadth	O
first	O
search	B
we	O
will	O
need	O
a	O
plain	O
old	O
java	O
object	O
class	O
to	O
represent	O
messages	O
in	O
the	O
example	O
rule	O
set	O
this	O
demo	O
class	O
was	O
generated	O
by	O
the	O
eclipse	O
drools	B
workbench	O
public	O
static	O
class	O
message	O
public	O
static	O
final	O
int	O
hello	O
public	O
static	O
final	O
int	O
goodbye	O
private	O
string	O
message	O
private	O
int	O
status	O
public	O
string	O
getmessage	O
return	O
this	O
message	O
public	O
void	O
setmessagestring	O
message	O
this	O
message	O
message	O
public	O
int	O
getstatus	O
return	O
this	O
status	O
public	O
void	O
setstatus	O
int	O
status	O
this	O
status	O
status	O
example	O
drools	B
expert	B
system	I
blocks	O
world	O
you	O
might	O
want	O
to	O
review	O
the	O
example	O
rules	O
using	O
this	O
pojo	O
message	O
class	O
in	O
section	O
here	O
is	O
the	O
sample	O
output	O
from	O
running	O
this	O
example	O
code	O
and	O
rule	O
set	O
hello	O
world	O
goodbye	O
cruel	O
world	O
a	O
simple	O
example	O
but	O
it	O
serves	O
to	O
introduce	O
you	O
the	O
drools	B
rule	I
syntax	I
and	O
required	O
java	O
code	O
this	O
is	O
also	O
a	O
good	O
example	O
to	O
understand	O
because	O
when	O
you	O
use	O
the	O
eclipse	O
drools	B
workbench	O
to	O
create	O
a	O
new	O
drools	B
rule	O
project	O
it	O
generates	O
this	O
example	O
automatically	O
as	O
a	O
template	O
for	O
you	O
to	O
modify	O
and	O
re-use	O
in	O
the	O
next	O
two	O
sections	O
i	O
will	O
develop	O
two	O
more	O
complicated	O
examples	O
solving	O
blocks	O
world	O
problems	O
and	O
supporting	O
a	O
help	O
desk	O
system	O
example	O
drools	B
expert	B
system	I
blocks	O
world	O
the	O
example	O
in	O
this	O
section	O
solved	O
simple	O
blocks	O
world	O
problems	O
see	O
figures	O
through	O
for	O
a	O
very	O
simple	O
example	O
problem	O
i	O
like	O
this	O
example	O
because	O
it	O
introduces	O
the	O
topic	O
of	O
conflict	O
resolution	O
and	O
shows	O
you	O
that	O
even	O
solving	O
simple	O
problems	O
with	O
rule-based	O
systems	O
can	O
be	O
difficult	O
because	O
of	O
the	O
difficulty	O
of	O
developing	O
and	O
debugging	O
rule-based	O
systems	O
they	O
are	O
best	O
for	O
applications	O
that	O
have	O
both	O
high	O
business	O
value	O
and	O
offer	O
an	O
opportunity	O
to	O
encode	O
business	O
or	O
application	O
knowledge	O
of	O
experts	O
in	O
rules	O
so	O
the	O
example	O
in	O
the	O
next	O
section	O
is	O
a	O
more	O
real-life	O
example	O
of	O
good	O
application	O
of	O
expert	O
systems	O
but	O
you	O
will	O
learn	O
valuable	O
techniques	O
in	O
this	O
example	O
in	O
the	O
interest	O
of	O
intellectual	O
honesty	O
i	O
should	O
say	O
that	O
general	O
blocks	O
world	O
problems	O
like	O
the	O
towers	O
of	O
hanoi	O
problem	O
and	O
block	O
world	O
problems	O
as	O
the	O
one	O
in	O
this	O
section	O
are	O
usually	O
easily	O
solved	O
using	O
breadth-first	O
search	B
techniques	O
the	O
java	O
source	O
code	O
and	O
drools	B
rule	O
files	O
for	O
this	O
example	O
are	O
in	O
the	O
files	O
blockworld	O
drl	O
and	O
droolsbockworld	O
java	O
expert	O
systems	O
figure	O
initial	O
state	O
of	O
a	O
blocks	O
world	O
problem	O
with	O
three	O
blocks	O
stacked	O
on	O
top	O
of	O
each	O
other	O
the	O
goal	O
is	O
to	O
move	O
the	O
blocks	O
so	O
that	O
block	O
c	O
is	O
on	O
top	O
of	O
block	O
a	O
figure	O
block	O
c	O
has	O
been	O
removed	O
from	O
block	O
b	O
and	O
placed	O
on	O
the	O
table	O
pojo	O
object	O
models	O
for	O
blocks	O
world	O
example	O
we	O
will	O
use	O
the	O
following	O
three	O
pojo	O
classes	O
in	O
the	O
file	O
droolsbockworld	O
java	O
as	O
static	O
inner	O
classes	O
the	O
first	O
pojo	O
class	O
block	O
represents	O
the	O
state	O
of	O
one	O
block	O
public	O
static	O
class	O
block	O
protected	O
string	O
name	O
protected	O
string	O
ontopof	O
protected	O
string	O
supporting	O
public	O
blockstring	O
name	O
string	O
ontopof	O
string	O
supporting	O
this	O
name	O
name	O
this	O
ontopof	O
ontopof	O
this	O
supporting	O
supporting	O
public	O
string	O
tostring	O
return	O
this	O
hashcode	O
name	O
on	O
top	O
of	O
ontopof	O
supporting	O
supporting	O
public	O
string	O
getname	O
abcabc	O
example	O
drools	B
expert	B
system	I
blocks	O
world	O
return	O
this	O
name	O
public	O
void	O
setnamestring	O
name	O
this	O
name	O
name	O
public	O
string	O
getontopof	O
return	O
this	O
ontopof	O
public	O
void	O
setontopofstring	O
ontopof	O
this	O
ontopof	O
ontopof	O
public	O
string	O
getsupporting	O
return	O
this	O
supporting	O
public	O
void	O
setsupportingstring	O
supporting	O
this	O
supporting	O
supporting	O
the	O
next	O
pojo	O
class	O
oldblockstate	O
is	O
used	O
to	O
represent	O
previous	O
states	O
of	O
blocks	O
as	O
they	O
are	O
being	O
moved	O
as	O
the	O
rules	O
in	O
this	O
example	O
fire	O
we	O
will	O
later	O
see	O
rules	O
that	O
will	O
not	O
put	O
a	O
block	O
into	O
a	O
state	O
that	O
it	O
previously	O
existed	O
in	O
public	O
static	O
class	O
oldblockstate	O
extends	O
block	O
public	O
oldblockstatestring	O
name	O
string	O
ontopof	O
string	O
supporting	O
supername	O
ontopof	O
supporting	O
public	O
string	O
tostring	O
return	O
this	O
hashcode	O
name	O
on	O
top	O
of	O
ontopof	O
supporting	O
supporting	O
the	O
next	O
pojo	O
class	O
goal	O
is	O
used	O
to	O
represent	O
a	O
goal	O
state	O
for	O
the	O
blocks	O
that	O
we	O
are	O
trying	O
to	O
reach	O
public	O
static	O
class	O
goal	O
expert	O
systems	O
figure	O
block	O
b	O
has	O
been	O
removed	O
from	O
block	O
a	O
and	O
placed	O
on	O
the	O
table	O
private	O
string	O
supportingblock	O
private	O
string	O
supportedblock	O
public	O
goalstring	O
supporting	O
string	O
supported	O
this	O
supportingblock	O
supporting	O
this	O
supportedblock	O
supported	O
public	O
string	O
tostring	O
return	O
this	O
hashcode	O
goal	O
supporting	O
block	O
supportingblock	O
and	O
supported	O
block	O
supportedblock	O
public	O
void	O
setsupportingblock	O
string	O
supportingblock	O
this	O
supportingblock	O
supportingblock	O
public	O
string	O
getsupportingblock	O
return	O
supportingblock	O
public	O
void	O
setsupportedblock	O
string	O
supportedblock	O
this	O
supportedblock	O
supportedblock	O
public	O
string	O
getsupportedblock	O
return	O
supportedblock	O
each	O
block	O
object	O
has	O
three	O
string	O
attributes	O
a	O
name	O
the	O
name	O
of	O
the	O
block	O
that	O
this	O
block	O
is	O
on	O
top	O
of	O
and	O
the	O
block	O
that	O
this	O
block	O
supports	O
under	O
we	O
will	O
also	O
define	O
a	O
block	O
instance	O
with	O
the	O
name	O
table	O
we	O
need	O
the	O
pojo	O
class	O
oldblockstate	O
that	O
is	O
a	O
subclass	O
of	O
block	O
to	O
avoid	O
cycles	O
in	O
the	O
reasoning	B
process	O
abc	O
example	O
drools	B
expert	B
system	I
blocks	O
world	O
figure	O
the	O
goal	O
is	O
solved	O
by	O
placing	O
block	O
c	O
on	O
top	O
of	O
block	O
a	O
drools	B
rules	O
for	O
blocks	O
world	O
example	O
we	O
need	O
four	O
rules	O
for	O
this	O
example	O
and	O
they	O
are	O
listed	O
below	O
with	O
comments	O
as	O
appropriate	O
package	O
com	O
markwatson	O
examples	O
drool	O
import	O
com	O
markwatson	O
examples	O
drool	O
droolsblockworld	O
import	O
com	O
markwatson	O
examples	O
drool	O
droolsblockworld	O
import	O
com	O
markwatson	O
examples	O
drool	O
droolsblockworld	O
we	O
place	O
the	O
rules	O
in	O
the	O
same	O
java	O
package	O
as	O
the	O
java	O
support	O
code	O
seen	O
in	O
the	O
next	O
section	O
and	O
the	O
pojo	O
model	O
classes	O
that	O
we	O
saw	O
in	O
the	O
last	O
section	O
the	O
first	O
rule	O
has	O
no	O
preconditions	O
so	O
it	O
can	O
always	O
fire	O
we	O
use	O
the	O
special	O
rule	O
condition	O
no-loop	O
true	O
to	O
let	O
the	O
drools	B
system	O
know	O
that	O
we	O
only	O
want	O
this	O
rule	O
to	O
fire	O
one	O
time	O
this	O
rule	O
inserts	O
facts	O
into	O
working	O
memory	O
for	O
the	O
simple	O
problem	O
seen	O
in	O
figures	O
through	O
rule	O
rule	O
no-loop	O
true	O
when	O
then	O
goalc	O
test	O
insertnew	O
goalc	O
test	O
blockstring	O
name	O
string	O
ontopof	O
insertnew	O
blocka	O
insertnew	O
blockb	O
insertnew	O
blockc	O
insertnew	O
blockd	O
string	O
supporting	O
abc	O
expert	O
systems	O
insertnew	O
blocktable	O
end	O
the	O
following	O
rule	O
looks	O
for	O
situations	O
where	O
it	O
is	O
possible	O
to	O
move	O
a	O
block	O
with	O
a	O
few	O
conditions	O
find	O
a	O
block	O
block	O
that	O
is	O
on	O
top	O
of	O
another	O
block	O
and	O
is	O
not	O
itself	O
supporting	O
any	O
other	O
blocks	O
find	O
a	O
second	O
block	O
block	O
that	O
is	O
not	O
block	O
and	O
is	O
not	O
itself	O
supporting	O
any	O
other	O
blocks	O
find	O
the	O
block	O
on	O
top	O
of	O
that	O
is	O
under	O
block	O
and	O
supporting	O
block	O
make	O
sure	O
that	O
no	O
previous	O
block	O
with	O
the	O
name	O
in	O
the	O
variable	O
block	O
has	O
already	O
been	O
on	O
top	O
of	O
block	O
on	O
top	O
of	O
and	O
supporting	O
block	O
if	O
these	O
conditions	O
are	O
met	O
we	O
can	O
remove	O
the	O
three	O
matching	O
facts	O
and	O
create	O
facts	O
for	O
the	O
new	O
block	O
positions	O
and	O
a	O
new	O
oldblockstate	O
fact	O
in	O
working	O
memory	O
note	O
that	O
the	O
fourth	O
lhs	B
matching	O
pattern	O
is	O
prefixed	O
with	O
not	O
so	O
this	O
matches	O
if	O
there	O
are	O
no	O
objects	O
in	O
working	O
memory	O
that	O
match	O
this	O
pattern	O
rule	O
block	O
on	O
move	O
to	O
when	O
name	O
ontopof	O
supporting	O
name	O
ontopof	O
supporting	O
blockname	O
ontopof	O
supporting	O
not	O
oldblockstatename	O
ontopof	O
supporting	O
then	O
system	O
out	O
println	O
system	O
out	O
println	O
system	O
out	O
println	O
insertnew	O
insertnew	O
example	O
drools	B
expert	B
system	I
blocks	O
world	O
insertnew	O
insertnew	O
system	O
out	O
printlnmoving	O
from	O
to	O
end	O
the	O
next	O
rule	O
looks	O
for	O
opportunities	O
to	O
remove	O
block	O
from	O
block	O
if	O
no	O
other	O
block	O
is	O
sitting	O
on	O
top	O
of	O
block	O
is	O
block	O
is	O
clear	O
rule	O
block	O
remove	O
from	O
when	O
name	O
on	O
top	O
of	O
ontopof	O
supporting	O
name	O
ontopof	O
supporting	O
then	O
system	O
out	O
println	O
system	O
out	O
println	O
insertnew	O
insertnew	O
insertnew	O
blocktable	O
system	O
out	O
printlnclearing	O
remove	O
from	O
on	O
top	O
of	O
to	O
table	O
end	O
the	O
next	O
rule	O
checks	O
to	O
see	O
if	O
the	O
current	O
goal	O
is	O
satisfied	O
in	O
which	O
case	O
it	O
halts	O
the	O
drools	B
engine	O
rule	O
on	O
goal	O
achieved	O
salience	O
when	O
supportingblock	O
supportedblock	O
blockname	O
supporting	O
then	O
expert	O
systems	O
system	O
out	O
printlndone	O
drools	B
halt	O
end	O
the	O
java	O
code	O
in	O
the	O
next	O
section	O
can	O
load	O
and	O
run	O
these	O
example	O
rules	O
java	O
code	O
for	O
blocks	O
world	O
example	O
the	O
example	O
in	O
this	O
section	O
introduces	O
something	O
new	O
modifying	O
the	O
default	O
way	O
that	O
drools	B
chooses	O
which	O
rules	O
to	O
fire	O
when	O
more	O
than	O
one	O
rule	O
is	O
eligible	O
to	O
fire	O
this	O
is	O
referred	O
to	O
as	O
the	O
conflict	O
resolution	O
strategy	O
and	O
this	O
phrase	O
dates	O
back	O
to	O
the	O
original	O
production	O
system	O
drools	B
by	O
default	O
prefers	O
rules	O
that	O
are	O
instantiated	O
by	O
data	O
that	O
is	O
newer	O
in	O
working	O
memory	O
this	O
is	O
similar	O
to	O
depth	O
first	O
search	B
in	O
the	O
blocks	O
world	O
example	O
in	O
this	O
section	O
we	O
will	O
need	O
to	O
change	O
the	O
conflict	O
resolution	O
strategy	O
to	O
process	O
rules	O
in	O
a	O
first-in	O
first-out	O
order	O
which	O
is	O
similar	O
to	O
a	O
breadth	O
first	O
search	B
strategy	O
first	O
let	O
us	O
define	O
the	O
problem	O
that	O
we	O
want	O
to	O
solve	O
consider	O
labeled	O
blocks	O
sitting	O
on	O
a	O
table	O
as	O
seen	O
in	O
figures	O
through	O
the	O
java	O
code	O
in	O
this	O
section	O
is	O
similar	O
to	O
what	O
we	O
already	O
saw	O
in	O
section	O
so	O
we	O
will	O
just	O
look	O
at	O
the	O
differences	O
here	O
to	O
start	O
with	O
in	O
the	O
utility	O
method	O
readrule	O
we	O
need	O
to	O
add	O
a	O
few	O
lines	O
of	O
code	O
to	O
configure	O
drools	B
to	O
use	O
a	O
breadth-first	O
instead	O
of	O
a	O
depth-first	O
reasoning	B
strategy	O
private	O
static	O
rulebase	O
readrule	O
throws	O
exception	O
reader	O
source	O
new	O
inputstreamreader	O
droolsblockworld	O
class	O
getresourceasstream	O
packagebuilder	O
builder	O
new	O
packagebuilder	O
builder	O
addpackagefromdrl	O
source	O
package	O
pkg	O
builder	O
getpackage	O
change	O
the	O
default	O
conflict	O
resolution	O
strategy	O
rulebaseconfiguration	O
rbc	O
new	O
rulebaseconfiguration	O
rbc	O
setconflictresolvernew	O
fifoconflictresolver	O
rulebase	O
rulebase	O
rulebasefactory	O
newrulebaserbc	O
rulebase	O
addpackagepkg	O
example	O
drools	B
expert	B
system	I
blocks	O
world	O
return	O
rulebase	O
the	O
drools	B
class	O
f	O
if	O
oconf	O
lictresolver	O
is	O
not	O
so	O
well	O
named	O
but	O
a	O
first-in	O
firstout	O
strategy	O
is	O
like	O
depth	O
first	O
search	B
the	O
default	O
conflict	O
resolution	O
strategy	O
favors	O
rules	O
that	O
are	O
eligible	O
to	O
fire	O
from	O
data	O
that	O
has	O
most	O
recently	O
changed	O
since	O
we	O
have	O
already	O
seen	O
the	O
definition	O
of	O
the	O
java	O
pojo	O
classes	O
used	O
in	O
the	O
rules	O
in	O
section	O
the	O
only	O
remaining	O
java	O
code	O
to	O
look	O
at	O
is	O
in	O
the	O
static	O
main	O
method	O
rulebase	O
rulebase	O
readrule	O
workingmemory	O
workingmemory	O
system	O
out	O
printlnninitial	O
working	O
memorynn	O
rulebase	O
newstatefulsession	O
workingmemory	O
tostring	O
just	O
fire	O
the	O
first	O
setup	O
rule	O
iteratorfacthandle	O
iter	O
workingmemory	O
iteratefacthandles	O
while	O
system	O
out	O
printlniter	O
next	O
system	O
out	O
printlnnn	O
before	O
firing	O
rules	O
limit	O
cycles	O
system	O
out	O
printlnnn	O
after	O
firing	O
rules	O
system	O
out	O
printlnnfinal	O
working	O
memoryn	O
workingmemory	O
tostring	O
iter	O
workingmemory	O
iteratefacthandles	O
while	O
system	O
out	O
printlniter	O
next	O
for	O
making	O
rule	O
debugging	O
easier	O
i	O
wanted	O
to	O
run	O
the	O
first	O
start	O
up	O
rule	O
to	O
define	O
the	O
initial	O
problem	O
facts	O
in	O
working	O
memory	O
and	O
then	O
print	O
working	O
memory	O
that	O
is	O
why	O
i	O
called	O
workingm	O
emory	O
f	O
to	O
ask	O
the	O
drools	B
rule	O
engine	O
to	O
just	O
fire	O
one	O
rule	O
in	O
the	O
last	O
example	O
we	O
called	O
workingm	O
emory	O
f	O
ireallrules	O
with	O
no	O
arguments	O
so	O
the	O
rule	O
engine	O
runs	O
forever	O
as	O
long	O
as	O
there	O
are	O
rules	O
eligible	O
to	O
fire	O
after	O
printing	O
the	O
facts	O
in	O
working	O
memory	O
i	O
call	O
the	O
f	O
with	O
a	O
limit	O
of	O
rule	O
firings	O
because	O
blocks	O
world	O
problems	O
can	O
fail	O
to	O
terminate	O
least	O
the	O
simple	O
rules	O
that	O
i	O
have	O
written	O
for	O
this	O
example	O
often	O
failed	O
to	O
terminate	O
when	O
i	O
was	O
debugging	O
this	O
example	O
limiting	O
the	O
number	O
of	O
rule	O
firings	O
is	O
often	O
a	O
good	O
idea	O
the	O
output	O
from	O
this	O
example	O
with	O
debug	O
output	O
removed	O
is	O
clearing	O
remove	O
c	O
from	O
b	O
to	O
table	O
expert	O
systems	O
moving	O
b	O
from	O
a	O
to	O
c	O
clearing	O
remove	O
b	O
from	O
c	O
to	O
table	O
moving	O
a	O
from	O
table	O
to	O
c	O
moving	O
c	O
from	O
table	O
to	O
b	O
done	O
note	O
that	O
this	O
is	O
not	O
the	O
best	O
solution	O
since	O
it	O
has	O
unnecessary	O
steps	O
if	O
you	O
are	O
interested	O
here	O
is	O
the	O
output	O
with	O
debug	O
printout	O
showing	O
the	O
facts	O
that	O
enabled	O
each	O
rule	O
to	O
fire	O
c	O
on	O
top	O
of	O
b	O
supporting	O
b	O
on	O
top	O
of	O
a	O
supporting	O
c	O
clearing	O
remove	O
c	O
from	O
b	O
to	O
table	O
b	O
on	O
top	O
of	O
a	O
supporting	O
c	O
on	O
top	O
of	O
table	O
supporting	O
a	O
on	O
top	O
of	O
table	O
supporting	O
b	O
moving	O
b	O
from	O
a	O
to	O
c	O
b	O
on	O
top	O
of	O
c	O
supporting	O
c	O
on	O
top	O
of	O
table	O
clearing	O
remove	O
b	O
from	O
c	O
to	O
table	O
a	O
on	O
top	O
of	O
table	O
c	O
on	O
top	O
of	O
table	O
table	O
on	O
top	O
of	O
moving	O
a	O
from	O
table	O
to	O
c	O
c	O
on	O
top	O
of	O
table	O
b	O
on	O
top	O
of	O
table	O
table	O
on	O
top	O
of	O
moving	O
c	O
from	O
table	O
to	O
b	O
done	O
supporting	O
supporting	O
supporting	O
a	O
supporting	O
c	O
supporting	O
b	O
supporting	O
supporting	O
this	O
printout	O
does	O
not	O
show	O
the	O
printout	O
of	O
all	O
facts	O
before	O
and	O
after	O
running	O
this	O
example	O
example	O
drools	B
expert	B
system	I
help	O
desk	O
system	O
automating	O
help	O
desk	O
functions	O
can	O
improve	O
the	O
quality	O
of	O
customer	O
service	O
and	O
reduce	O
costs	O
help	O
desk	O
software	O
can	O
guide	O
human	O
call	O
operators	O
through	O
canned	O
explanations	O
that	O
can	O
be	O
thought	O
of	O
as	O
decision	O
trees	O
for	O
example	O
customer	O
reports	O
that	O
their	O
refrigerator	O
is	O
not	O
running	O
ask	O
if	O
the	O
power	O
is	O
on	O
and	O
no	O
circuit	O
breakers	O
are	O
tripped	O
if	O
customer	O
reports	O
that	O
power	O
source	O
is	O
ok	O
ask	O
if	O
the	O
light	O
example	O
drools	B
expert	B
system	I
help	O
desk	O
system	O
is	O
on	O
inside	O
the	O
refrigerator	O
to	O
determine	O
if	O
just	O
the	O
compressor	O
motor	O
is	O
out	O
we	O
will	O
see	O
in	O
chapter	O
that	O
decision	O
trees	O
can	O
be	O
learned	O
from	O
training	O
data	O
one	O
method	O
of	O
implementing	O
a	O
decision	O
tree	O
approach	O
to	O
help	O
desk	O
support	O
would	O
be	O
to	O
capture	O
customer	O
interactions	O
by	O
skilled	O
support	O
staff	O
factor	O
operator	O
responses	O
into	O
standard	O
phrases	O
and	O
customer	O
comments	O
into	O
standard	O
questions	O
and	O
use	O
a	O
machine	B
learning	I
package	O
like	O
weka	B
to	O
learn	O
the	O
best	O
paths	O
through	O
questions	O
and	O
answers	O
we	O
will	O
take	O
a	O
different	O
approach	O
in	O
our	O
example	O
for	O
this	O
section	O
we	O
will	O
assume	O
that	O
an	O
expert	O
customer	O
service	O
representative	O
has	O
provided	O
us	O
with	O
use	O
cases	O
of	O
common	O
problems	O
what	O
customers	O
tend	O
to	O
ask	O
for	O
each	O
problem	O
and	O
the	O
responses	O
by	O
customer	O
service	O
representatives	O
we	O
will	O
develop	O
some	O
sample	O
drools	B
rules	O
to	O
encode	O
this	O
knowledge	O
this	O
approach	O
is	O
likely	O
to	O
be	O
more	O
difficult	O
to	O
implement	O
than	O
a	O
decision	O
tree	O
system	O
but	O
has	O
the	O
potential	O
advantage	O
that	O
if	O
individual	O
rules	O
make	O
sense	O
in	O
general	O
they	O
may	O
end	O
up	O
being	O
useful	O
in	O
contexts	O
beyond	O
those	O
anticipated	O
by	O
rules	O
developers	O
with	O
this	O
greater	O
flexibility	O
comes	O
a	O
potential	O
for	O
less	O
accuracy	O
we	O
will	O
start	O
in	O
the	O
next	O
section	O
by	O
developing	O
some	O
pojo	O
object	O
models	O
required	O
for	O
our	O
example	O
help	O
desk	O
expert	B
system	I
and	O
then	O
in	O
the	O
next	O
section	O
develop	O
a	O
few	O
example	O
rules	O
object	O
models	O
for	O
an	O
example	O
help	O
desk	O
we	O
will	O
use	O
a	O
single	O
java	O
pojo	O
class	O
for	O
this	O
example	O
we	O
want	O
a	O
problem	O
type	O
a	O
description	O
of	O
a	O
problem	O
and	O
a	O
suggestion	O
a	O
real	O
help	O
desk	O
system	O
might	O
use	O
additional	O
classes	O
for	O
intermediate	O
steps	O
in	O
diagnosing	O
problems	O
and	O
offering	O
advice	O
but	O
for	O
this	O
example	O
we	O
will	O
chain	O
problems	O
together	O
here	O
is	O
an	O
example	O
customer	O
my	O
refrigerator	O
is	O
not	O
running	O
service	O
i	O
want	O
to	O
know	O
if	O
the	O
power	O
is	O
on	O
is	O
the	O
light	O
on	O
inside	O
the	O
refrigerator	O
customer	O
no	O
service	O
please	O
check	O
your	O
circuit	O
breaker	O
i	O
will	O
wait	O
customer	O
all	O
my	O
circuit	O
breakers	O
looked	O
ok	O
and	O
everything	O
else	O
is	O
running	O
in	O
the	O
kitchen	O
service	O
i	O
will	O
schedule	O
a	O
service	O
call	O
for	O
you	O
we	O
will	O
not	O
develop	O
an	O
interactive	O
system	O
a	O
dialog	O
with	O
a	O
customer	O
is	O
assumed	O
to	O
be	O
converted	O
into	O
facts	O
in	O
working	O
memory	O
these	O
facts	O
will	O
be	O
represented	O
by	O
instances	O
of	O
the	O
class	O
p	O
roblem	O
the	O
expert	B
system	I
will	O
apply	O
the	O
rule	O
base	O
to	O
the	O
facts	O
in	O
working	O
memory	O
and	O
make	O
suggestions	O
here	O
is	O
the	O
java	O
class	O
p	O
roblem	O
that	O
is	O
defined	O
as	O
an	O
inner	O
static	O
class	O
in	O
the	O
file	O
droolshelpdesk	O
java	O
expert	O
systems	O
public	O
static	O
class	O
problem	O
enums	O
as	O
match	O
types	O
so	O
i	O
use	O
static	O
integers	O
here	O
in	O
general	O
using	O
enums	O
is	O
much	O
better	O
note	O
drools	B
has	O
problems	O
dealing	O
with	O
java	O
final	O
public	O
static	O
int	O
none	O
appliance	O
types	O
final	O
public	O
static	O
int	O
refrigerator	O
final	O
public	O
static	O
int	O
microwave	O
final	O
public	O
static	O
int	O
tv	O
final	O
public	O
static	O
int	O
dvd	O
environmentaldata	O
possible	O
values	O
final	O
public	O
static	O
int	O
circuit	O
breaker	O
off	O
final	O
public	O
static	O
int	O
lights	O
off	O
in	O
room	O
problemtype	O
possible	O
values	O
final	O
public	O
static	O
int	O
not	O
running	O
final	O
public	O
static	O
int	O
smoking	O
final	O
public	O
static	O
int	O
on	O
fire	O
final	O
public	O
static	O
int	O
makes	O
noise	O
long	O
serviceid	O
unique	O
id	O
for	O
all	O
problems	O
dealing	O
with	O
customer	O
problem	O
int	O
appliancetype	O
none	O
int	O
problemtype	O
none	O
int	O
environmentaldata	O
none	O
public	O
problemlong	O
serviceid	O
int	O
type	O
this	O
serviceid	O
serviceid	O
this	O
appliancetype	O
type	O
public	O
string	O
tostring	O
return	O
enumnames	O
getappliancetype	O
problem	O
type	O
enumnames	O
getproblemtype	O
environmental	O
data	O
enumnames	O
getenvironmentaldata	O
public	O
long	O
getserviceid	O
return	O
serviceid	O
public	O
int	O
getenvironmentaldata	O
return	O
environmentaldata	O
public	O
int	O
getproblemtype	O
return	O
problemtype	O
static	O
mapinteger	O
string	O
enumnames	O
example	O
drools	B
expert	B
system	I
help	O
desk	O
system	O
new	O
hashmapinteger	O
string	O
static	O
it	O
is	O
unfortunate	O
that	O
the	O
current	O
version	O
of	O
drools	B
does	O
not	O
work	O
well	O
with	O
java	O
enums	O
the	O
p	O
roblem	O
class	O
would	O
have	O
been	O
about	O
half	O
as	O
many	O
lines	O
of	O
code	O
need	O
to	O
map	O
integers	O
to	O
meaningful	O
descriptions	O
for	O
tostring	O
and	O
the	O
example	O
would	O
also	O
be	O
more	O
type	O
safe	O
i	O
used	O
constant	O
values	O
like	O
refrigerator	O
and	O
running	O
to	O
represent	O
possible	O
values	O
for	O
the	O
member	O
class	O
attributes	O
like	O
appliancet	O
ype	O
problemt	O
ype	O
and	O
environmentaldata	O
there	O
is	O
obviously	O
a	O
tight	O
binding	O
from	O
the	O
java	O
pojo	O
classes	O
like	O
p	O
roblem	O
to	O
the	O
rules	O
that	O
use	O
these	O
classes	O
to	O
represent	O
objects	O
in	O
working	O
memory	O
we	O
will	O
see	O
a	O
few	O
example	O
help	O
desk	O
rules	O
in	O
the	O
next	O
section	O
drools	B
rules	O
for	O
an	O
example	O
help	O
desk	O
this	O
demo	O
help	O
desk	O
system	O
is	O
not	O
interactive	O
the	O
java	O
code	O
in	O
the	O
next	O
section	O
loads	O
the	O
rule	O
set	O
that	O
we	O
are	O
about	O
to	O
develop	O
and	O
then	O
programmatically	O
adds	O
test	O
facts	O
into	O
working	O
memory	O
that	O
simulate	O
two	O
help	O
desk	O
customer	O
service	O
issues	O
this	O
is	O
an	O
important	O
example	O
since	O
you	O
will	O
likely	O
want	O
to	O
add	O
data	O
directly	O
from	O
java	O
code	O
into	O
drools	B
working	O
memory	O
there	O
are	O
several	O
rules	O
defined	O
in	O
the	O
example	O
file	O
helpdesk	O
drl	O
and	O
we	O
will	O
look	O
at	O
a	O
few	O
of	O
them	O
here	O
these	O
rules	O
are	O
intended	O
to	O
be	O
a	O
pedantic	O
example	O
of	O
both	O
how	O
to	O
match	O
attributes	O
in	O
java	O
pojo	O
classes	O
and	O
to	O
show	O
a	O
few	O
more	O
techniques	O
for	O
writing	O
drools	B
rules	O
i	O
used	O
to	O
use	O
the	O
lisp	O
based	O
to	O
develop	O
expert	O
systems	O
and	O
i	O
find	O
the	O
combination	O
of	O
java	O
and	O
drools	B
is	O
certainly	O
less	O
agile	O
to	O
use	O
i	O
found	O
myself	O
writing	O
a	O
rule	O
then	O
editing	O
the	O
pojo	O
class	O
problem	O
to	O
add	O
constants	O
for	O
things	O
that	O
i	O
wanted	O
to	O
use	O
in	O
the	O
rule	O
with	O
more	O
experience	O
this	O
less	O
than	O
interactive	O
process	O
might	O
become	O
expert	O
systems	O
more	O
comfortable	O
for	O
me	O
as	O
in	O
the	O
blocks	O
world	O
example	O
we	O
want	O
to	O
place	O
the	O
rules	O
file	O
in	O
the	O
same	O
package	O
as	O
the	O
java	O
code	O
using	O
the	O
rules	O
file	O
and	O
import	O
any	O
pojo	O
classes	O
that	O
we	O
will	O
use	O
in	O
working	O
memory	O
package	O
com	O
markwatson	O
examples	O
drool	O
import	O
com	O
markwatson	O
examples	O
drool	O
droolshelpdesk	O
problem	O
the	O
first	O
rule	O
sets	O
a	O
higher	O
than	O
default	O
rule	O
salience	O
so	O
it	O
will	O
fire	O
before	O
any	O
rules	O
with	O
the	O
default	O
rule	O
salience	O
value	O
of	O
zero	O
this	O
rule	O
has	O
a	O
feature	O
that	O
we	O
have	O
not	O
seen	O
before	O
i	O
have	O
no	O
matching	O
expressions	O
in	O
the	O
when	O
clause	O
all	O
java	O
problem	O
instances	O
will	O
match	O
the	O
left-hand	O
side	O
of	O
this	O
rule	O
rule	O
all	O
problems	O
salience	O
when	O
p	O
problem	O
then	O
system	O
out	O
printlnfrom	O
rule	O
print	O
all	O
problems	O
end	O
p	O
the	O
following	O
rule	O
matches	O
an	O
instance	O
of	O
the	O
class	O
p	O
roblem	O
in	O
working	O
memory	O
that	O
has	O
a	O
value	O
of	O
problem	O
circuit	O
breaker	O
off	O
for	O
the	O
vakue	O
of	O
attribute	O
environmentaldata	O
this	O
constant	O
has	O
the	O
integer	O
value	O
of	O
but	O
is	O
is	O
obviously	O
more	O
clear	O
to	O
use	O
meaningful	O
constant	O
names	O
rule	O
circuit	O
breaker	O
when	O
problemenvironmentaldata	O
then	O
system	O
out	O
printlnreset	O
circuit	O
breaker	O
problem	O
circuit	O
breaker	O
off	O
end	O
the	O
last	O
rule	O
could	O
perhaps	O
be	O
improved	O
by	O
having	O
it	O
only	O
fire	O
if	O
any	O
appliance	O
was	O
not	O
currently	O
running	O
we	O
make	O
this	O
check	O
in	O
the	O
next	O
rule	O
notice	O
that	O
in	O
the	O
next	O
rule	O
we	O
are	O
matching	O
different	O
attributes	O
ype	O
and	O
environmentaldata	O
and	O
it	O
does	O
not	O
matter	O
if	O
these	O
attributes	O
match	O
in	O
a	O
single	O
working	O
memory	O
element	O
or	O
two	O
different	O
working	O
memory	O
elements	O
example	O
drools	B
expert	B
system	I
help	O
desk	O
system	O
rule	O
for	O
reset	O
circuit	O
breaker	O
when	O
problemproblemtype	O
problem	O
not	O
running	O
problemenvironmentaldata	O
problem	O
circuit	O
breaker	O
off	O
then	O
system	O
out	O
printlncheck	O
for	O
power	O
source	O
the	O
unit	O
is	O
not	O
is	O
not	O
on	O
and	O
circuit	O
breaker	O
is	O
tripped	O
check	O
circuit	O
breaker	O
for	O
this	O
room	O
end	O
we	O
will	O
look	O
at	O
the	O
java	O
code	O
to	O
use	O
these	O
example	O
rules	O
in	O
the	O
next	O
section	O
java	O
code	O
for	O
an	O
example	O
help	O
desk	O
we	O
will	O
see	O
another	O
trick	O
for	O
using	O
drools	B
in	O
this	O
example	O
creating	O
working	O
memory	O
elements	O
instances	O
of	O
the	O
problem	O
pojo	O
class	O
in	O
java	O
code	O
instead	O
of	O
in	O
a	O
startup	O
rule	O
as	O
we	O
did	O
for	O
the	O
blocks	O
world	O
example	O
the	O
code	O
in	O
this	O
section	O
is	O
also	O
in	O
the	O
droolshelpdesk	O
java	O
source	O
file	O
is	O
the	O
pojo	O
class	O
definition	O
seen	O
in	O
section	O
the	O
static	O
main	O
method	O
in	O
the	O
droolshelpdesk	O
class	O
is	O
very	O
similar	O
to	O
the	O
main	O
method	O
in	O
the	O
blocks	O
world	O
example	O
except	O
that	O
here	O
we	O
also	O
call	O
a	O
new	O
method	O
createt	O
estf	O
acts	O
public	O
static	O
final	O
void	O
mainstring	O
args	O
throws	O
exception	O
up	O
the	O
rulebase	O
rulebase	O
rulebase	O
readrule	O
workingmemory	O
workingmemory	O
rulebase	O
newstatefulsession	O
createtestfactsworkingmemory	O
same	O
as	O
the	O
blocks	O
world	O
example	O
we	O
already	O
looked	O
at	O
the	O
utility	O
method	O
readrule	O
in	O
section	O
so	O
we	O
will	O
just	O
look	O
at	O
the	O
new	O
method	O
createt	O
estf	O
acts	O
that	O
creates	O
two	O
instance	O
of	O
the	O
pojo	O
class	O
p	O
roblem	O
in	O
working	O
memory	O
private	O
static	O
void	O
expert	O
systems	O
createtestfactsworkingmemory	O
workingmemory	O
throws	O
exception	O
problem	O
new	O
problem	O
refrigerator	O
problem	O
not	O
running	O
problem	O
circuit	O
breaker	O
off	O
problem	O
new	O
problem	O
tv	O
problem	O
smoking	O
in	O
this	O
code	O
we	O
created	O
new	O
instances	O
of	O
the	O
class	O
p	O
roblem	O
and	O
set	O
desired	O
attributes	O
we	O
then	O
use	O
the	O
w	O
orkingm	O
emory	O
method	O
insert	O
to	O
add	O
the	O
ojects	O
to	O
the	O
working	O
memory	O
collection	O
that	O
drools	B
maintains	O
the	O
output	O
when	O
running	O
this	O
example	O
is	O
to	O
fit	O
the	O
page	O
width	O
from	O
rule	O
print	O
all	O
problems	O
tv	O
problem	O
type	O
smoking	O
environmental	O
data	O
none	O
from	O
rule	O
print	O
all	O
problems	O
refrigerator	O
problem	O
type	O
not	O
running	O
environmental	O
data	O
circuit	O
breaker	O
off	O
unplug	O
appliance	O
to	O
prevent	O
fire	O
danger	O
tv	O
problem	O
type	O
smoking	O
environmental	O
data	O
none	O
check	O
for	O
power	O
source	O
refrigerator	O
problem	O
type	O
not	O
running	O
environmental	O
data	O
circuit	O
breaker	O
off	O
the	O
unit	O
is	O
not	O
is	O
not	O
on	O
and	O
the	O
circuit	O
breaker	O
is	O
tripped	O
check	O
the	O
circuit	O
breaker	O
for	O
this	O
room	O
notes	O
on	O
the	O
craft	O
of	O
building	O
expert	O
systems	O
notes	O
on	O
the	O
craft	O
of	O
building	O
expert	O
systems	O
it	O
may	O
seem	O
like	O
rule-based	O
expert	O
systems	O
have	O
a	O
lot	O
of	O
programming	O
overhead	O
that	O
is	O
it	O
will	O
seem	O
excessively	O
difficult	O
to	O
solve	O
simple	O
problems	O
using	O
production	O
systems	O
however	O
for	O
encoding	O
large	O
ill-structured	O
problems	O
production	O
systems	O
provide	O
a	O
convenient	O
notation	O
for	O
collecting	O
together	O
what	O
would	O
otherwise	O
be	O
too	O
large	O
a	O
collection	O
of	O
unstructured	O
data	O
and	O
heuristic	O
rules	O
expert	O
systems	O
in	O
an	O
introduction	O
to	O
rule-based	O
programming	O
brownston	O
et	O
al	O
as	O
a	O
programming	O
technique	O
writing	O
rule-based	O
expert	O
systems	O
is	O
not	O
for	O
everyone	O
some	O
programmers	O
find	O
rule-based	O
programming	O
to	O
be	O
cumbersome	O
while	O
others	O
find	O
it	O
a	O
good	O
fit	O
for	O
solving	O
some	O
types	O
of	O
problems	O
i	O
encourage	O
the	O
reader	O
to	O
have	O
some	O
fun	O
experimenting	O
with	O
drools	B
both	O
with	O
the	O
examples	O
in	O
this	O
chapter	O
and	O
the	O
many	O
examples	O
in	O
the	O
drools	B
distribution	O
package	O
and	O
documentation	O
before	O
starting	O
a	O
moderate	O
or	O
large	O
expert	B
system	I
project	O
there	O
are	O
several	O
steps	O
that	O
i	O
recommend	O
write	O
a	O
detailed	O
description	O
of	O
the	O
problem	O
to	O
be	O
solved	O
decide	O
what	O
structured	O
data	O
elements	O
best	O
describe	O
the	O
problem	O
space	O
try	O
to	O
break	O
down	O
the	O
problem	O
into	O
separate	O
modules	O
of	O
rules	O
if	O
possible	O
try	O
to	O
develop	O
and	O
test	O
these	O
smaller	O
modules	O
independently	O
preferably	O
one	O
source	O
file	O
per	O
module	O
plan	O
on	O
writing	O
specific	O
rules	O
that	O
test	O
parts	O
of	O
the	O
system	O
by	O
initializing	O
working	O
memory	O
for	O
specific	O
tests	O
for	O
the	O
various	O
modules	O
these	O
tests	O
will	O
be	O
very	O
important	O
when	O
testing	O
all	O
of	O
the	O
modules	O
together	O
because	O
tests	O
that	O
work	O
correctly	O
for	O
a	O
single	O
module	O
may	O
fail	O
when	O
all	O
modules	O
are	O
loaded	O
due	O
to	O
unexpected	O
rule	O
interactions	O
production	O
systems	O
model	O
fairly	O
accurately	O
the	O
stimulus-response	O
behavior	O
in	O
people	O
the	O
left-hand	O
side	O
terms	O
represent	O
environmental	O
data	O
that	O
triggers	O
a	O
response	O
or	O
action	O
represented	O
by	O
the	O
right-hand	O
side	O
terms	O
in	O
production	B
rules	I
simple	O
stimulus-response	O
types	O
of	O
production	B
rules	I
might	O
be	O
adequate	O
for	O
modeling	O
simple	O
behaviors	O
but	O
our	O
goal	O
in	O
writing	O
expert	O
systems	O
is	O
to	O
encode	O
deep	O
knowledge	O
and	O
the	O
ability	O
to	O
make	O
complex	O
decisions	O
in	O
a	O
very	O
narrow	O
limited	O
problem	O
domain	O
in	O
order	O
to	O
model	O
complex	O
decision-making	O
abilities	O
we	O
also	O
often	O
need	O
to	O
add	O
higher-level	O
control	O
functionality	O
to	O
expert	O
systems	O
this	O
higher	O
level	O
or	O
meta	O
control	O
can	O
be	O
the	O
control	O
of	O
which	O
rule	O
modules	O
are	O
active	O
we	O
did	O
not	O
look	O
at	O
the	O
drools	B
apis	O
for	O
managing	O
modules	O
in	O
this	O
chapter	O
but	O
these	O
apis	O
are	O
covered	O
in	O
the	O
drools	B
documentation	O
hopefully	O
this	O
chapter	O
both	O
gave	O
you	O
a	O
quickstart	O
for	O
experimenting	O
with	O
drools	B
and	O
enough	O
experience	O
to	O
know	O
if	O
a	O
rule-based	O
system	O
might	O
be	O
a	O
good	O
fit	O
for	O
your	O
own	O
development	O
expert	O
systems	O
genetic	O
algorithms	O
genetic	O
algorithms	O
are	O
computer	O
simulations	O
to	O
evolve	O
a	O
population	O
of	O
chromosomes	O
that	O
contain	O
at	O
least	O
some	O
very	O
fit	O
individuals	O
fitness	B
is	O
specified	O
by	O
a	O
fitness	B
function	O
that	O
rates	O
each	O
individual	O
in	O
the	O
population	O
setting	O
up	O
a	O
ga	O
simulation	O
is	O
fairly	O
easy	O
we	O
need	O
to	O
represent	O
encode	O
the	O
state	O
of	O
a	O
system	O
in	O
a	O
chromosome	B
that	O
is	O
usually	O
implemented	O
as	O
a	O
set	O
of	O
bits	O
ga	O
is	O
basically	O
a	O
search	B
operation	O
searching	O
for	O
a	O
good	O
solution	O
to	O
a	O
problem	O
where	O
the	O
solution	O
is	O
a	O
very	O
fit	O
chromosome	B
the	O
programming	O
technique	O
of	O
using	O
ga	O
is	O
useful	O
for	O
ai	O
systems	O
that	O
must	O
adapt	O
to	O
changing	O
conditions	O
because	O
re-programming	O
can	O
be	O
as	O
simple	O
as	O
defining	O
a	O
new	O
fitness	B
function	O
and	O
re-running	O
the	O
simulation	O
an	O
advantage	O
of	O
ga	O
is	O
that	O
the	O
search	B
process	O
will	O
not	O
often	O
get	O
stuck	O
in	O
local	O
minimum	O
because	O
the	O
genetic	O
crossover	B
process	O
produces	O
radically	O
different	O
chromosomes	O
in	O
new	O
generations	O
while	O
occasional	O
mutations	O
a	O
random	O
bit	O
in	O
a	O
chromosome	B
cause	O
small	O
changes	O
another	O
aspect	O
of	O
ga	O
is	O
supporting	O
the	O
evolutionary	O
concept	O
of	O
survival	O
of	O
the	O
fittest	O
by	O
using	O
the	O
fitness	B
function	O
we	O
will	O
preferentially	O
breed	O
chromosomes	O
with	O
higher	O
fitness	B
values	O
it	O
is	O
interesting	O
to	O
compare	O
how	O
gas	O
are	O
trained	O
with	O
how	O
we	O
train	O
neural	O
networks	O
we	O
need	O
to	O
manually	O
supervise	O
the	O
training	O
process	O
for	O
gas	O
we	O
need	O
to	O
supply	O
a	O
fitness	B
function	O
and	O
for	O
the	O
two	O
neural	B
network	I
models	O
used	O
in	O
chapter	O
we	O
need	O
to	O
supply	O
training	O
data	O
with	O
desired	O
sample	O
outputs	O
for	O
sample	O
inputs	O
theory	O
gas	O
are	O
typically	O
used	O
to	O
search	B
very	O
large	O
and	O
possibly	O
very	O
high	O
dimensional	O
search	B
spaces	O
if	O
we	O
want	O
to	O
find	O
a	O
solution	O
as	O
a	O
single	O
point	O
in	O
an	O
n	O
dimensional	O
space	O
where	O
a	O
fitness	B
function	O
has	O
a	O
near	O
maximum	O
value	O
then	O
we	O
have	O
n	O
parameters	O
to	O
encode	O
in	O
each	O
chromosome	B
in	O
this	O
chapter	O
we	O
will	O
be	O
solving	O
a	O
simple	O
problem	O
that	O
is	O
one-dimensional	O
so	O
we	O
only	O
need	O
to	O
encode	O
a	O
single	O
number	O
floating	O
point	O
number	O
for	O
this	O
example	O
in	O
each	O
chromosome	B
using	O
a	O
ga	O
toolkit	O
like	O
the	O
one	O
developed	O
in	O
section	O
requires	O
two	O
problem-specific	O
customizations	O
characterize	O
the	O
search	B
space	O
by	O
a	O
set	O
of	O
parameters	O
that	O
can	O
be	O
encoded	O
in	O
a	O
chromosome	B
on	O
this	O
later	O
gas	O
work	O
with	O
the	O
coding	O
of	O
a	O
parameter	O
set	O
not	O
the	O
parameters	O
themselves	O
algorithms	O
in	O
search	B
optimiza	O
genetic	O
algorithms	O
figure	O
the	O
test	O
function	O
evaluated	O
over	O
the	O
interval	O
the	O
maximum	O
value	O
of	O
occurs	O
at	O
tion	O
and	O
machine	B
learning	I
david	O
goldberg	O
provide	O
a	O
numeric	O
fitness	B
function	O
that	O
allows	O
us	O
to	O
rate	O
the	O
fitness	B
of	O
each	O
chromosome	B
in	O
a	O
population	O
we	O
will	O
use	O
these	O
fitness	B
values	O
to	O
determine	O
which	O
chromosomes	O
in	O
the	O
population	O
are	O
most	O
likely	O
to	O
survive	O
and	O
reproduce	O
using	O
genetic	O
crossover	B
and	O
mutation	B
operations	O
the	O
ga	O
toolkit	O
developed	O
in	O
this	O
chapter	O
treats	O
genes	O
as	O
a	O
single	O
bit	O
while	O
you	O
can	O
consider	O
a	O
gene	O
to	O
be	O
an	O
arbitrary	O
data	O
structure	O
the	O
approach	O
of	O
using	O
single	O
bit	O
genes	O
and	O
specifying	O
the	O
number	O
of	O
genes	O
bits	O
in	O
a	O
chromosome	B
is	O
very	O
flexible	O
a	O
population	O
is	O
a	O
set	O
of	O
chromosomes	O
a	O
generation	O
is	O
defined	O
as	O
one	O
reproductive	O
cycle	O
of	O
replacing	O
some	O
elements	O
of	O
the	O
chromosome	B
population	O
with	O
new	O
chromosomes	O
produced	O
by	O
using	O
a	O
genetic	O
crossover	B
operation	O
followed	O
by	O
optionally	O
mutating	O
a	O
few	O
chromosomes	O
in	O
the	O
population	O
we	O
will	O
describe	O
a	O
simple	O
example	O
problem	O
in	O
this	O
section	O
write	O
a	O
general	O
purpose	O
library	O
in	O
section	O
and	O
finish	O
the	O
chapter	O
in	O
section	O
by	O
solving	O
the	O
problem	O
posed	O
in	O
this	O
section	O
for	O
a	O
sample	O
problem	O
suppose	O
that	O
we	O
want	O
to	O
find	O
the	O
maximum	O
value	O
of	O
the	O
function	O
f	O
with	O
one	O
independent	O
variable	O
x	O
in	O
equation	O
and	O
as	O
seen	O
in	O
figure	O
f	O
sinx	O
x	O
x	O
the	O
problem	O
that	O
we	O
want	O
to	O
solve	O
is	O
finding	O
a	O
good	O
value	O
of	O
x	O
to	O
find	O
a	O
near	O
to	O
possible	O
maximum	O
value	O
of	O
f	O
to	O
be	O
clear	O
we	O
encode	O
a	O
floating	O
point	O
number	O
java	O
library	O
for	O
genetic	O
algorithms	O
figure	O
crossover	B
operation	O
as	O
a	O
chromosome	B
made	O
up	O
of	O
a	O
specific	O
number	O
of	O
bits	O
so	O
any	O
chromosome	B
with	O
randomly	O
set	O
bits	O
will	O
represent	O
some	O
random	O
number	O
in	O
the	O
interval	O
the	O
fitness	B
function	O
is	O
simply	O
the	O
function	O
in	O
equation	O
figure	O
shows	O
an	O
example	O
of	O
a	O
crossover	B
operation	O
a	O
random	O
chromosome	B
bit	O
index	O
is	O
chosen	O
and	O
two	O
chromosomes	O
are	O
cut	O
at	O
this	O
this	O
index	O
and	O
swap	O
cut	O
parts	O
the	O
two	O
original	O
chromosomes	O
in	O
generationn	O
are	O
shown	O
on	O
the	O
left	O
of	O
the	O
figure	O
and	O
after	O
the	O
crossover	B
operation	O
they	O
produce	O
two	O
new	O
chromosomes	O
in	O
shown	O
on	O
the	O
right	O
of	O
the	O
figure	O
in	O
addition	O
to	O
using	O
crossover	B
operations	O
to	O
create	O
new	O
chromosomes	O
from	O
existing	O
chromosomes	O
we	O
will	O
also	O
use	O
genetic	O
mutation	B
randomly	O
flipping	O
bits	O
in	O
chromosomes	O
a	O
fitness	B
function	O
that	O
rates	O
the	O
fitness	B
value	O
of	O
each	O
chromosome	B
allows	O
us	O
to	O
decide	O
which	O
chromosomes	O
to	O
discard	O
and	O
which	O
to	O
use	O
for	O
the	O
next	O
generation	O
we	O
will	O
use	O
the	O
most	O
fit	O
chromosomes	O
in	O
the	O
population	O
for	O
producing	O
the	O
next	O
generation	O
using	O
crossover	B
and	O
mutation	B
we	O
will	O
implement	O
a	O
general	O
purpose	O
java	O
ga	O
library	O
in	O
the	O
next	O
section	O
and	O
then	O
solve	O
the	O
example	O
problem	O
posed	O
in	O
this	O
section	O
in	O
section	O
java	O
library	O
for	O
genetic	O
algorithms	O
the	O
full	O
implementation	O
of	O
the	O
ga	O
library	O
is	O
in	O
the	O
java	O
source	O
file	O
genetic	O
java	O
the	O
following	O
code	O
snippets	O
shows	O
the	O
method	O
signatures	O
defining	O
the	O
public	O
api	O
for	O
the	O
library	O
note	O
that	O
there	O
are	O
two	O
constructors	O
the	O
first	O
using	O
default	O
values	O
for	O
the	O
fraction	O
of	O
chromosomes	O
on	O
which	O
to	O
perform	O
crossover	B
and	O
mutation	B
operations	O
and	O
the	O
second	O
constructor	O
allows	O
setting	O
explicit	O
values	O
for	O
these	O
parameters	O
abstract	O
public	O
class	O
genetic	O
public	O
geneticint	O
num	O
genes	O
per	O
chromosome	B
genetic	O
algorithms	O
public	O
geneticint	O
num	O
genes	O
per	O
chromosome	B
int	O
num	O
chromosomes	O
int	O
num	O
chromosomes	O
float	O
crossover	B
fraction	O
float	O
mutation	B
fraction	O
the	O
method	O
sort	O
is	O
used	O
to	O
sort	O
the	O
population	O
of	O
chromosomes	O
in	O
most	O
fit	O
first	B
order	I
the	O
methods	O
getgene	O
and	O
setgene	O
are	O
used	O
to	O
fetch	O
and	O
change	O
the	O
value	O
of	O
any	O
gene	O
in	O
any	O
chromosome	B
these	O
methods	O
are	O
protected	O
but	O
you	O
will	O
probably	O
not	O
need	O
to	O
override	O
them	O
in	O
derived	O
classes	O
protected	O
void	O
sort	O
protected	O
boolean	O
getgeneint	O
chromosome	B
int	O
gene	O
protected	O
void	O
setgeneint	O
chromosome	B
int	O
gene	O
int	O
value	O
protected	O
void	O
setgeneint	O
chromosome	B
int	O
gene	O
boolean	O
value	O
the	O
methods	O
evolve	O
docrossovers	O
dom	O
utations	O
and	O
doremoveduplicates	O
are	O
utilities	O
for	O
running	O
ga	O
simulations	O
these	O
methods	O
are	O
protected	O
but	O
you	O
will	O
probably	O
not	O
need	O
to	O
override	O
them	O
in	O
derived	O
classes	O
protected	O
void	O
evolve	O
protected	O
void	O
docrossovers	O
protected	O
void	O
domutations	O
protected	O
void	O
doremoveduplicates	O
when	O
you	O
subclass	O
class	O
genetic	O
you	O
must	O
implement	O
the	O
following	O
abstract	O
method	O
calcf	O
itness	O
that	O
will	O
determine	O
the	O
evolution	O
of	O
chromosomes	O
during	O
the	O
ga	O
simulation	O
implement	O
the	O
following	O
method	O
in	O
sub-classes	O
abstract	O
public	O
void	O
calcfitness	O
the	O
class	O
chromosome	B
represents	O
a	O
bit	O
set	O
with	O
a	O
specified	O
number	O
of	O
bits	O
and	O
a	O
floating	O
point	O
fitness	B
value	O
java	O
library	O
for	O
genetic	O
algorithms	O
class	O
chromosome	B
private	O
chromosome	B
public	O
chromosomeint	O
num	O
genes	O
public	O
boolean	O
getbitint	O
index	O
public	O
void	O
setbitint	O
index	O
boolean	O
value	O
public	O
float	O
getfitness	O
public	O
void	O
setfitnessfloat	O
value	O
public	O
boolean	O
equalschromosome	O
c	O
the	O
class	O
chromosomecomparator	O
implements	O
a	O
comparator	O
interface	O
and	O
is	O
application	O
specific	O
it	O
is	O
used	O
to	O
sort	O
a	O
population	O
in	O
best	O
first	B
order	I
class	O
chromosomecomparator	O
implements	O
comparatorchromosome	O
public	O
int	O
comparechromosome	O
chromosome	B
the	O
last	O
class	O
chromosomecomparator	O
is	O
used	O
when	O
using	O
the	O
java	O
collection	O
class	O
static	O
sort	O
method	O
the	O
class	O
genetic	O
is	O
an	O
abstract	O
class	O
you	O
must	O
subclass	O
it	O
and	O
implement	O
the	O
method	O
calcf	O
itness	O
that	O
uses	O
an	O
application	O
specific	O
fitness	B
function	O
you	O
must	O
supply	O
to	O
set	O
a	O
fitness	B
value	O
for	O
each	O
chromosome	B
this	O
ga	O
library	O
provides	O
the	O
following	O
behavior	O
generates	O
an	O
initial	O
random	O
population	O
with	O
a	O
specified	O
number	O
of	O
bits	O
genes	O
per	O
chromosome	B
and	O
a	O
specified	O
number	O
of	O
chromosomes	O
in	O
the	O
population	O
ability	O
to	O
evaluate	O
each	O
chromosome	B
based	O
on	O
a	O
numeric	O
fitness	B
function	O
ability	O
to	O
create	O
new	O
chromosomes	O
from	O
the	O
most	O
fit	O
chromosomes	O
in	O
the	O
population	O
using	O
the	O
genetic	O
crossover	B
and	O
mutation	B
operations	O
there	O
are	O
two	O
class	O
constructors	O
for	O
genetic	O
set	O
up	O
a	O
new	O
ga	O
experiment	O
by	O
setting	O
the	O
number	O
of	O
genes	O
bits	O
per	O
chromosome	B
and	O
the	O
number	O
of	O
chromosomes	O
in	O
the	O
population	O
the	O
genetic	O
class	O
constructors	O
build	O
an	O
array	O
of	O
integers	O
roulettew	O
heel	O
which	O
is	O
used	O
to	O
weight	O
the	O
most	O
fit	O
chromosomes	O
in	O
the	O
population	O
for	O
choosing	O
the	O
parents	O
genetic	O
algorithms	O
of	O
crossover	B
and	O
mutation	B
operations	O
when	O
a	O
chromosome	B
is	O
being	O
chosen	O
a	O
random	O
integer	O
is	O
selected	O
to	O
be	O
used	O
as	O
an	O
index	O
into	O
the	O
roulettew	O
heel	O
array	O
the	O
values	O
in	O
the	O
array	O
are	O
all	O
integer	O
indices	O
into	O
the	O
chromosome	B
array	O
more	O
fit	O
chromosomes	O
are	O
heavily	O
weighted	O
in	O
favor	O
of	O
being	O
chosen	O
as	O
parents	O
for	O
the	O
crossover	B
operations	O
the	O
algorithm	O
for	O
the	O
crossover	B
operation	O
is	O
fairly	O
simple	O
here	O
is	O
the	O
implementation	O
public	O
void	O
docrossovers	O
int	O
num	O
crossoverfraction	O
for	O
i	O
num	O
i	O
i--	O
don	O
t	O
overwrite	O
the	O
chromosome	B
from	O
current	O
generation	O
int	O
math	O
random	O
int	O
math	O
random	O
if	O
int	O
locus	O
math	O
random	O
for	O
g	O
gnumgenesperchromosome	O
g	O
if	O
locus	O
setgenei	O
g	O
g	O
else	O
setgenei	O
g	O
g	O
the	O
method	O
dom	O
utations	O
is	O
similar	O
to	O
docrossovers	O
we	O
randomly	O
choose	O
chromosomes	O
from	O
the	O
population	O
and	O
for	O
these	O
selected	O
chromosomes	O
we	O
randomly	O
flip	O
the	O
value	O
of	O
one	O
gene	O
gene	O
is	O
a	O
bit	O
in	O
our	O
implementation	O
public	O
void	O
domutations	O
int	O
num	O
mutationfraction	O
for	O
i	O
i	O
num	O
i	O
don	O
t	O
overwrite	O
the	O
chromosome	B
from	O
current	O
generation	O
int	O
c	O
math	O
random	O
finding	O
the	O
maximum	O
value	O
of	O
a	O
function	O
int	O
g	O
math	O
random	O
setgenec	O
g	O
g	O
we	O
developed	O
a	O
general	O
purpose	O
library	O
in	O
this	O
section	O
for	O
simulating	O
populations	O
of	O
chromosomes	O
that	O
can	O
evolve	O
to	O
a	O
more	O
fit	O
population	O
given	O
a	O
fitness	B
function	O
that	O
ranks	O
individual	O
chromosomes	O
in	O
order	O
of	O
fitness	B
in	O
section	O
we	O
will	O
develop	O
an	O
example	O
ga	O
application	O
by	O
defining	O
the	O
size	O
of	O
a	O
population	O
and	O
the	O
fitness	B
function	O
defined	O
by	O
equation	O
finding	O
the	O
maximum	O
value	O
of	O
a	O
function	O
we	O
will	O
use	O
the	O
java	O
library	O
in	O
the	O
last	O
section	O
to	O
develop	O
an	O
example	O
application	O
to	O
find	O
the	O
maximum	O
of	O
the	O
function	O
seen	O
in	O
figure	O
which	O
shows	O
a	O
plot	O
of	O
equation	O
plotted	O
in	O
the	O
interval	O
while	O
we	O
could	O
find	O
the	O
maximum	O
value	O
of	O
this	O
function	O
by	O
using	O
newton	O
s	O
method	O
even	O
a	O
simple	O
brute	O
force	O
search	B
over	O
the	O
range	O
of	O
the	O
independent	O
variable	O
x	O
the	O
ga	O
method	O
scales	O
very	O
well	O
to	O
similar	O
problems	O
of	O
higher	O
dimensionality	O
the	O
ga	O
also	O
helps	O
us	O
to	O
not	O
find	O
just	O
locally	O
optimum	O
solutions	O
in	O
this	O
example	O
we	O
are	O
working	O
in	O
one	O
dimension	O
so	O
we	O
only	O
need	O
to	O
encode	O
a	O
single	O
variable	O
in	O
a	O
chromosome	B
as	O
an	O
example	O
of	O
a	O
higher	O
dimensional	O
system	O
we	O
might	O
have	O
products	O
of	O
sine	O
waves	O
using	O
independent	O
variables	O
still	O
the	O
one-dimensional	O
case	O
seen	O
in	O
figure	O
is	O
a	O
good	O
example	O
for	O
showing	O
you	O
how	O
to	O
set	O
up	O
a	O
ga	O
simulation	O
our	O
first	O
task	O
is	O
to	O
characterize	O
the	O
search	B
space	O
as	O
one	O
or	O
more	O
parameters	O
in	O
general	O
when	O
we	O
write	O
ga	O
applications	O
we	O
might	O
need	O
to	O
encode	O
several	O
parameters	O
in	O
a	O
single	O
chromosome	B
for	O
example	O
if	O
a	O
fitness	B
function	O
has	O
three	O
arguments	O
we	O
would	O
encode	O
three	O
numbers	O
in	O
a	O
singe	O
chromosome	B
in	O
this	O
example	O
problem	O
we	O
have	O
only	O
one	O
parameter	O
the	O
independent	O
variable	O
x	O
we	O
will	O
encode	O
the	O
parameter	O
x	O
using	O
ten	O
bits	O
we	O
have	O
ten	O
genes	O
per	O
chromosome	B
a	O
good	O
starting	O
place	O
is	O
writing	O
utility	O
method	O
for	O
converting	O
the	O
representation	O
to	O
a	O
floating-point	O
number	O
in	O
the	O
range	O
float	O
genetofloatint	O
chromosomeindex	O
int	O
base	O
float	O
x	O
for	O
jnumgenesperchromosome	O
j	O
if	O
j	O
genetic	O
algorithms	O
x	O
base	O
base	O
after	O
summing	O
up	O
all	O
on	O
bits	O
times	O
their	O
value	O
we	O
need	O
to	O
normalize	O
what	O
is	O
an	O
integer	O
in	O
the	O
range	O
of	O
to	O
a	O
floating	O
point	O
number	O
in	O
the	O
approximate	O
range	O
of	O
x	O
return	O
x	O
note	O
that	O
we	O
do	O
not	O
need	O
the	O
reverse	O
method	O
we	O
use	O
the	O
ga	O
library	O
from	O
section	O
to	O
create	O
a	O
population	O
of	O
chromosomes	O
in	O
order	O
to	O
evaluate	O
the	O
fitness	B
of	O
each	O
chromosome	B
in	O
a	O
population	O
we	O
only	O
have	O
to	O
convert	O
the	O
representation	O
to	O
a	O
floating-point	O
number	O
for	O
evaluation	O
using	O
the	O
following	O
fitness	B
function	O
private	O
float	O
fitnessfloat	O
x	O
return	O
x	O
x	O
table	O
shows	O
some	O
sample	O
random	O
chromosomes	O
and	O
the	O
floating	O
point	O
numbers	O
that	O
they	O
encode	O
the	O
first	O
column	O
shows	O
the	O
gene	O
indices	O
where	O
the	O
bit	O
is	O
on	O
the	O
second	O
column	O
shows	O
the	O
chromosomes	O
as	O
an	O
integer	O
number	O
represented	O
in	O
binary	O
notation	O
and	O
the	O
third	O
column	O
shows	O
the	O
floating	O
point	O
number	O
that	O
the	O
chromosome	B
encodes	O
the	O
center	O
column	O
in	O
table	O
shows	O
the	O
bits	O
in	O
order	O
where	O
index	O
is	O
the	O
left-most	O
bit	O
and	O
index	O
if	O
the	O
right-most	O
bit	O
this	O
is	O
the	O
reverse	O
of	O
the	O
normal	O
order	O
for	O
encoding	O
integers	O
but	O
the	O
ga	O
does	O
not	O
care	O
it	O
works	O
with	O
any	O
encoding	O
we	O
use	O
once	O
again	O
gas	O
work	O
with	O
encodings	O
on	O
bits	O
in	O
chromosome	B
as	O
binary	O
number	O
encoded	O
table	O
random	O
chromosomes	O
and	O
the	O
floating	O
point	O
numbers	O
that	O
they	O
encode	O
using	O
methods	O
genet	O
of	O
loat	O
and	O
f	O
itness	O
we	O
now	O
implement	O
the	O
abstract	O
method	O
calcf	O
itness	O
from	O
our	O
ga	O
library	O
class	O
genetic	O
so	O
the	O
derived	O
class	O
t	O
estgenetic	O
finding	O
the	O
maximum	O
value	O
of	O
a	O
function	O
is	O
not	O
abstract	O
this	O
method	O
has	O
the	O
responsibility	O
for	O
calculating	O
and	O
setting	O
the	O
fitness	B
value	O
for	O
every	O
chromosome	B
stored	O
in	O
an	O
instance	O
of	O
class	O
genetic	O
public	O
void	O
calcfitness	O
for	O
inumchromosomes	O
i	O
float	O
x	O
genetofloati	O
chromosomes	O
geti	O
setfitnessfitnessx	O
while	O
it	O
was	O
useful	O
to	O
make	O
this	O
example	O
more	O
clear	O
with	O
a	O
separate	O
genet	O
of	O
loat	O
method	O
it	O
would	O
have	O
also	O
been	O
reasonable	O
to	O
simply	O
place	O
the	O
formula	O
in	O
the	O
method	O
f	O
itness	O
in	O
the	O
implementation	O
of	O
the	O
abstract	O
the	O
base	O
class	O
method	O
calcf	O
itness	O
in	O
any	O
case	O
we	O
are	O
done	O
with	O
coding	O
this	O
example	O
you	O
can	O
compile	O
the	O
two	O
example	O
java	O
files	O
genetic	O
java	O
and	O
testgenetic	O
java	O
and	O
run	O
the	O
t	O
estgenetic	O
class	O
to	O
verify	O
that	O
the	O
example	O
program	O
quickly	O
finds	O
a	O
near	O
maximum	O
value	O
for	O
this	O
function	O
you	O
can	O
try	O
setting	O
different	O
numbers	O
of	O
chromosomes	O
in	O
the	O
population	O
and	O
try	O
setting	O
non-default	O
crossover	B
rates	O
of	O
and	O
a	O
mutation	B
rates	O
of	O
we	O
will	O
look	O
at	O
a	O
run	O
with	O
a	O
small	O
number	O
of	O
chromosomes	O
in	O
the	O
population	O
created	O
with	O
genetic	O
experiment	O
new	O
int	O
num	O
cycles	O
for	O
inum	O
cycles	O
i	O
genetic	O
experiment	O
evolve	O
if	O
system	O
out	O
printlngeneration	O
i	O
genetic	O
experiment	O
print	O
in	O
this	O
experiment	O
of	O
chromosomes	O
will	O
be	O
sliced	O
and	O
diced	O
with	O
a	O
crossover	B
operation	O
and	O
will	O
have	O
one	O
of	O
their	O
genes	O
changed	O
we	O
specified	O
bits	O
per	O
chromosome	B
and	O
a	O
population	O
size	O
of	O
chromosomes	O
in	O
this	O
example	O
i	O
have	O
run	O
evolutionary	O
cycles	O
after	O
you	O
determine	O
a	O
fitness	B
function	O
to	O
use	O
you	O
will	O
probably	O
need	O
to	O
experiment	O
with	O
the	O
size	O
of	O
the	O
population	O
and	O
the	O
crossover	B
and	O
mutation	B
rates	O
since	O
the	O
simulation	O
uses	O
random	O
numbers	O
is	O
thus	O
nondeterministic	O
you	O
can	O
get	O
different	O
results	O
by	O
simply	O
rerunning	O
the	O
simulation	O
here	O
is	O
example	O
program	O
output	O
much	O
of	O
the	O
output	O
removed	O
for	O
brevity	O
count	O
of	O
slots	O
in	O
roulette	O
genetic	O
algorithms	O
generation	O
fitness	B
for	O
chromosome	B
is	O
occurs	O
at	O
fitness	B
for	O
chromosome	B
is	O
occurs	O
at	O
fitness	B
for	O
chromosome	B
is	O
occurs	O
at	O
fitness	B
for	O
chromosome	B
is	O
occurs	O
at	O
fitness	B
for	O
chromosome	B
is	O
occurs	O
at	O
fitness	B
for	O
chromosome	B
is	O
occurs	O
at	O
fitness	B
for	O
chromosome	B
is	O
occurs	O
at	O
average	O
and	O
best	O
fitness	B
for	O
this	O
generation	O
fitness	B
for	O
chromosome	B
is	O
occurs	O
at	O
fitness	B
for	O
chromosome	B
is	O
occurs	O
at	O
this	O
example	O
is	O
simple	O
but	O
is	O
intended	O
to	O
be	O
show	O
you	O
how	O
to	O
encode	O
parameters	O
for	O
a	O
problem	O
where	O
you	O
want	O
to	O
search	B
for	O
values	O
to	O
maximize	O
a	O
fitness	B
function	O
that	O
you	O
specify	O
using	O
the	O
library	O
developed	O
in	O
this	O
chapter	O
you	O
should	O
be	O
able	O
to	O
set	O
up	O
and	O
run	O
a	O
ga	O
simulation	O
for	O
your	O
own	O
applications	O
neural	O
networks	O
neural	O
networks	O
can	O
be	O
used	O
to	O
efficiently	O
solve	O
many	O
problems	O
that	O
are	O
intractable	O
or	O
difficult	O
using	O
other	O
ai	O
programming	O
techniques	O
i	O
spent	O
almost	O
two	O
years	O
on	O
a	O
darpa	O
neural	B
network	I
tools	O
advisory	O
panel	O
wrote	O
the	O
first	O
version	O
of	O
the	O
ansim	O
neural	B
network	I
product	O
and	O
have	O
used	O
neural	O
networks	O
for	O
a	O
wide	O
range	O
of	O
application	O
problems	O
interpretation	O
bomb	O
detection	O
and	O
as	O
controllers	O
in	O
computer	O
games	O
mastering	O
the	O
use	O
of	O
simulated	O
neural	O
networks	O
will	O
allow	O
you	O
to	O
solve	O
many	O
types	O
of	O
problems	O
that	O
are	O
very	O
difficult	O
to	O
solve	O
using	O
other	O
methods	O
although	O
most	O
of	O
this	O
book	O
is	O
intended	O
to	O
provide	O
practical	O
advice	O
some	O
theoretical	O
background	O
on	O
using	O
ai	O
programming	O
techniques	O
i	O
cannot	O
imagine	O
being	O
interested	O
in	O
practical	O
ai	O
programming	O
without	O
also	O
wanting	O
to	O
think	O
about	O
the	O
philosophy	O
and	O
mechanics	O
of	O
how	O
the	O
human	O
mind	O
works	O
i	O
hope	O
that	O
my	O
readers	O
share	O
this	O
interest	O
in	O
this	O
book	O
we	O
have	O
examined	O
techniques	O
for	O
focused	O
problem	O
solving	O
concentrating	O
on	O
performing	O
one	O
task	O
at	O
a	O
time	O
however	O
the	O
physical	O
structure	O
and	O
dynamics	O
of	O
the	O
human	O
brain	O
is	O
inherently	O
parallel	O
and	O
distributed	O
distributed	O
processing	O
explorations	O
in	O
the	O
microstructure	O
of	O
cognition	O
rumelhart	O
mcclelland	O
etc	O
we	O
are	O
experts	O
at	O
doing	O
many	O
things	O
at	O
once	O
for	O
example	O
i	O
simultaneously	O
can	O
walk	O
talk	O
with	O
my	O
wife	O
keep	O
our	O
puppy	O
out	O
of	O
cactus	O
and	O
enjoy	O
the	O
scenery	O
behind	O
our	O
house	O
in	O
sedona	O
arizona	O
ai	O
software	O
systems	O
struggle	O
to	O
perform	O
even	O
narrowly	O
defined	O
tasks	O
well	O
so	O
how	O
is	O
it	O
that	O
we	O
are	O
able	O
to	O
simultaneously	O
perform	O
several	O
complex	O
tasks	O
there	O
is	O
no	O
clear	O
or	O
certain	O
answer	O
to	O
this	O
question	O
at	O
this	O
time	O
but	O
certainly	O
the	O
distributed	O
neural	O
architecture	O
of	O
our	O
brains	O
is	O
a	O
requirement	O
for	O
our	O
abilities	O
unfortunately	O
artificial	O
neural	B
network	I
simulations	O
do	O
not	O
currently	O
address	O
multi-tasking	O
techniques	O
that	O
do	O
address	O
this	O
issue	O
are	O
multi-agent	O
systems	O
with	O
some	O
form	O
or	O
mediation	O
between	O
agents	O
also	O
interesting	O
is	O
the	O
distinction	O
between	O
instinctual	O
behavior	O
and	O
learned	O
behavior	O
our	O
knowledge	O
of	O
gas	O
from	O
chapter	O
provides	O
a	O
clue	O
to	O
how	O
the	O
brains	O
of	O
especially	O
lower	O
order	O
animals	O
can	O
be	O
hardwired	O
to	O
provide	O
efficient	O
instinctual	O
behavior	O
under	O
the	O
pressures	O
of	O
evolutionary	O
forces	O
likely	O
survival	O
of	O
more	O
fit	O
individuals	O
this	O
works	O
by	O
using	O
genetic	O
algorithms	O
to	O
design	O
specific	O
neural	O
wiring	O
i	O
have	O
used	O
genetic	O
algorithms	O
to	O
evolve	O
recurrent	O
neural	O
networks	O
for	O
control	O
applications	O
this	O
work	O
only	O
had	O
partial	O
success	O
but	O
did	O
convince	O
me	O
that	O
biological	O
genetic	O
pressure	O
is	O
probably	O
adequate	O
to	O
pre-wire	O
some	O
forms	O
of	O
behavior	O
in	O
natural	O
neural	O
networks	O
neural	O
networks	O
figure	O
physical	O
structure	O
of	O
a	O
neuron	B
while	O
we	O
will	O
study	O
supervised	O
learning	O
techniques	O
in	O
this	O
chapter	O
it	O
is	O
possible	O
to	O
evolve	O
both	O
structure	O
and	O
attributes	O
of	O
neural	O
networks	O
using	O
other	O
types	O
of	O
neural	B
network	I
models	O
like	O
adaptive	O
resonance	O
theory	O
to	O
autonomously	O
learn	O
to	O
classify	O
learning	O
examples	O
without	O
intervention	O
we	O
will	O
start	O
this	O
chapter	O
by	O
discussing	O
human	O
neuron	B
cells	O
and	O
which	O
features	O
of	O
real	O
neurons	O
that	O
we	O
will	O
model	O
unfortunately	O
we	O
do	O
not	O
yet	O
understand	O
all	O
of	O
the	O
biochemical	O
processes	O
that	O
occur	O
in	O
neurons	O
but	O
there	O
are	O
fairly	O
accurate	O
models	O
available	O
search	B
neuron	B
biochemical	O
neurons	O
are	O
surrounded	O
by	O
thin	O
hairlike	O
structures	O
called	O
dendrites	O
which	O
serve	O
to	O
accept	O
activation	O
from	O
other	O
neurons	O
neurons	O
sum	O
up	O
activation	O
from	O
their	O
dendrites	O
and	O
each	O
neuron	B
has	O
a	O
threshold	O
value	O
if	O
the	O
activation	O
summed	O
over	O
all	O
incoming	O
dendrites	O
exceeds	O
this	O
threshold	O
then	O
the	O
neuron	B
fires	O
spreading	O
its	O
activation	O
to	O
other	O
neurons	O
dendrites	O
are	O
very	O
localized	O
around	O
a	O
neuron	B
output	O
from	O
a	O
neuron	B
is	O
carried	O
by	O
an	O
axon	O
which	O
is	O
thicker	O
than	O
dendrites	O
and	O
potentially	O
much	O
longer	O
than	O
dendrites	O
in	O
order	O
to	O
affect	O
remote	O
neurons	O
figure	O
shows	O
the	O
physical	O
structure	O
of	O
a	O
neuron	B
in	O
general	O
the	O
neuron	B
s	O
axon	O
would	O
be	O
much	O
longer	O
than	O
is	O
seen	O
in	O
figure	O
the	O
axon	O
terminal	O
buttons	O
transfer	O
activation	O
to	O
the	O
dendrites	O
of	O
neurons	O
that	O
are	O
close	O
to	O
the	O
individual	O
button	O
an	O
individual	O
neuron	B
is	O
connected	O
to	O
up	O
to	O
ten	O
thousand	O
other	O
neurons	O
in	O
this	O
way	O
the	O
activation	O
absorbed	O
through	O
dendrites	O
is	O
summed	O
together	O
but	O
the	O
firing	O
of	O
a	O
neuron	B
only	O
occurs	O
when	O
a	O
threshold	O
is	O
passed	O
hopfield	O
neural	O
networks	O
hopfield	O
neural	O
networks	O
implement	O
associative	O
content	O
addressable	O
memory	O
a	O
hopfield	O
network	O
is	O
trained	O
using	O
a	O
set	O
of	O
patterns	O
after	O
training	O
the	O
network	O
can	O
be	O
shown	O
a	O
pattern	O
similar	O
to	O
one	O
of	O
the	O
training	O
inputs	O
and	O
it	O
will	O
hopefully	O
associate	O
the	O
noisy	O
pattern	O
with	O
the	O
correct	O
input	O
pattern	O
hopfield	O
networks	O
are	O
java	O
classes	O
for	O
hopfield	O
neural	O
networks	O
very	O
different	O
than	O
back	B
propagation	I
networks	O
later	O
in	O
section	O
because	O
the	O
training	O
data	O
only	O
contains	O
input	O
examples	O
unlike	O
back	B
propagation	I
networks	O
that	O
are	O
trained	O
to	O
associate	O
desired	O
output	O
patterns	O
with	O
input	O
patterns	O
internally	O
the	O
operation	O
of	O
hopfield	O
neural	O
networks	O
is	O
very	O
different	O
than	O
back	B
propagation	I
networks	O
we	O
use	O
hopfield	O
neural	O
networks	O
to	O
introduce	O
the	O
subject	O
of	O
neural	O
nets	O
because	O
they	O
are	O
very	O
easy	O
to	O
simulate	O
with	O
a	O
program	O
and	O
they	O
can	O
also	O
be	O
very	O
useful	O
in	O
practical	O
applications	O
the	O
inputs	O
to	O
hopfield	O
networks	O
can	O
be	O
any	O
dimensionality	O
hopfield	O
networks	O
are	O
often	O
shown	O
as	O
having	O
a	O
two-dimensional	O
input	O
field	O
and	O
are	O
demonstrated	O
recognizing	O
characters	O
pictures	O
of	O
faces	O
etc	O
however	O
we	O
will	O
lose	O
no	O
generality	O
by	O
implementing	O
a	O
hopfield	O
neural	B
network	I
toolkit	O
with	O
one-dimensional	O
inputs	O
because	O
a	O
two-dimensional	O
image	O
can	O
be	O
represented	O
by	O
an	O
equivalent	O
one-dimensional	O
array	O
how	O
do	O
hopfield	O
networks	O
work	O
a	O
simple	O
analogy	O
will	O
help	O
the	O
trained	O
connection	O
weights	O
in	O
a	O
neural	B
network	I
represent	O
a	O
high	O
dimensional	O
space	O
this	O
space	O
is	O
folded	O
and	O
convoluted	O
with	O
local	O
minima	O
representing	O
areas	O
around	O
training	O
input	O
patterns	O
for	O
a	O
moment	O
visualize	O
this	O
very	O
high	O
dimensional	O
space	O
as	O
just	O
being	O
the	O
three	O
dimensional	O
space	O
inside	O
a	O
room	O
the	O
floor	O
of	O
this	O
room	O
is	O
a	O
convoluted	O
and	O
curved	O
surface	O
if	O
you	O
pick	O
up	O
a	O
basketball	O
and	O
bounce	O
it	O
around	O
the	O
room	O
it	O
will	O
settle	O
at	O
a	O
low	O
point	O
in	O
this	O
curved	O
and	O
convoluted	O
floor	O
now	O
consider	O
that	O
the	O
space	O
of	O
input	O
values	O
is	O
a	O
two-dimensional	O
grid	O
a	O
foot	O
above	O
the	O
floor	O
for	O
any	O
new	O
input	O
that	O
is	O
equivalent	O
to	O
a	O
point	O
defined	O
in	O
horizontal	O
coordinates	O
if	O
we	O
drop	O
our	O
basketball	O
from	O
a	O
position	O
above	O
an	O
input	O
grid	O
point	O
the	O
basketball	O
will	O
tend	O
to	O
roll	O
down	O
hill	O
into	O
local	O
gravitational	O
minima	O
the	O
shape	O
of	O
the	O
curved	O
and	O
convoluted	O
floor	O
is	O
a	O
calculated	O
function	O
of	O
a	O
set	O
of	O
training	O
input	O
vectors	O
after	O
the	O
floor	O
has	O
been	O
trained	O
with	O
a	O
set	O
of	O
input	O
vectors	O
then	O
the	O
operation	O
of	O
dropping	O
the	O
basketball	O
from	O
an	O
input	O
grid	O
point	O
is	O
equivalent	O
to	O
mapping	O
a	O
new	O
input	O
into	O
the	O
training	O
example	O
that	O
is	O
closest	O
to	O
this	O
new	O
input	O
using	O
a	O
neural	B
network	I
a	O
common	O
technique	O
in	O
training	O
and	O
using	O
neural	O
networks	O
is	O
to	O
add	O
noise	O
to	O
training	O
data	O
and	O
weights	O
in	O
the	O
basketball	O
analogy	O
this	O
is	O
equivalent	O
to	O
shaking	O
the	O
room	O
so	O
that	O
the	O
basketball	O
finds	O
a	O
good	O
minima	O
to	O
settle	O
into	O
and	O
not	O
a	O
non-optimal	O
local	O
minima	O
we	O
use	O
this	O
technique	O
later	O
when	O
implementing	O
back	B
propagation	I
networks	O
the	O
weights	O
of	O
back	B
propagation	I
networks	O
are	O
also	O
best	O
visualized	O
as	O
defining	O
a	O
very	O
high	O
dimensional	O
space	O
with	O
a	O
manifold	O
that	O
is	O
very	O
convoluted	O
near	O
areas	O
of	O
local	O
minima	O
these	O
local	O
minima	O
are	O
centered	O
near	O
the	O
coordinates	O
defined	O
by	O
each	O
input	O
vector	O
java	O
classes	O
for	O
hopfield	O
neural	O
networks	O
the	O
hopfield	O
neural	B
network	I
model	O
is	O
defined	O
in	O
the	O
file	O
hopfield	O
java	O
since	O
this	O
file	O
only	O
contains	O
about	O
lines	O
of	O
code	O
we	O
will	O
look	O
at	O
the	O
code	O
and	O
discuss	O
the	O
neural	O
networks	O
algorithms	O
for	O
storing	O
and	O
recall	O
of	O
patterns	O
at	O
the	O
same	O
time	O
in	O
a	O
hopfield	O
neural	B
network	I
simulation	O
every	O
neuron	B
is	O
connected	O
to	O
every	O
other	O
neuron	B
consider	O
a	O
pair	O
of	O
neurons	O
indexed	O
by	O
i	O
and	O
j	O
there	O
is	O
a	O
weight	O
wij	O
between	O
these	O
neurons	O
that	O
corresponds	O
in	O
the	O
code	O
to	O
the	O
array	O
element	O
weighti	O
j	O
we	O
can	O
define	O
energy	O
between	O
the	O
associations	O
of	O
these	O
two	O
neurons	O
as	O
energyi	O
j	O
weighti	O
j	O
activationi	O
activationj	O
in	O
the	O
hopfield	O
neural	B
network	I
simulator	O
we	O
store	O
activations	O
the	O
input	O
values	O
as	O
floating	O
point	O
numbers	O
that	O
get	O
clamped	O
in	O
value	O
to	O
off	O
or	O
on	O
in	O
the	O
energy	O
equation	O
we	O
consider	O
an	O
activation	O
that	O
is	O
not	O
clamped	O
to	O
a	O
value	O
of	O
one	O
to	O
be	O
zero	O
this	O
energy	O
is	O
like	O
gravitational	O
energy	O
potential	O
using	O
a	O
basketball	O
court	O
analogy	O
think	O
of	O
a	O
basketball	O
court	O
with	O
an	O
overlaid	O
grid	O
different	O
grid	O
cells	O
on	O
the	O
floor	O
are	O
at	O
different	O
heights	O
energy	O
levels	O
and	O
as	O
you	O
throw	O
a	O
basketball	O
on	O
the	O
court	O
the	O
ball	O
naturally	O
bounces	O
around	O
and	O
finally	O
stops	O
in	O
a	O
location	O
near	O
to	O
the	O
place	O
you	O
threw	O
the	O
ball	O
in	O
a	O
low	O
grid	O
cell	O
in	O
the	O
floor	O
that	O
is	O
it	O
settles	O
in	O
a	O
locally	O
low	O
energy	O
level	O
hopfield	O
networks	O
function	O
in	O
much	O
the	O
same	O
way	O
when	O
shown	O
a	O
pattern	O
the	O
network	O
attempts	O
to	O
settle	O
in	O
a	O
local	O
minimum	O
energy	O
point	O
as	O
defined	O
by	O
a	O
previously	O
seen	O
training	O
example	O
when	O
training	O
a	O
network	O
with	O
a	O
new	O
input	O
we	O
are	O
looking	O
for	O
a	O
low	O
energy	O
point	O
near	O
the	O
new	O
input	O
vector	O
the	O
total	O
energy	O
is	O
a	O
sum	O
of	O
the	O
above	O
equation	O
over	O
all	O
the	O
class	O
constructor	O
allocates	O
storage	O
for	O
input	O
values	O
temporary	O
storage	O
and	O
a	O
two-dimensional	O
array	O
to	O
store	O
weights	O
public	O
hopfieldint	O
numinputs	O
this	O
numinputs	O
numinputs	O
weights	O
new	O
floatnuminputsnuminputs	O
inputcells	O
new	O
floatnuminputs	O
tempstorage	O
new	O
floatnuminputs	O
remember	O
that	O
this	O
model	O
is	O
general	O
purpose	O
multi-dimensional	O
inputs	O
can	O
be	O
converted	O
to	O
an	O
equivalent	O
one-dimensional	O
array	O
the	O
method	O
addt	O
rainingdata	O
is	O
used	O
to	O
store	O
an	O
input	O
data	O
array	O
for	O
later	O
training	O
all	O
input	O
values	O
get	O
clamped	O
to	O
an	O
off	O
or	O
on	O
value	O
by	O
the	O
utility	O
method	O
adjustinput	O
the	O
utility	O
method	O
truncate	O
truncates	O
floating-point	O
values	O
to	O
an	O
integer	O
value	O
the	O
utility	O
method	O
deltaenergy	O
has	O
one	O
argument	O
an	O
index	O
into	O
the	O
input	O
vector	O
the	O
class	O
variable	O
tempstorage	O
is	O
set	O
during	O
training	O
to	O
be	O
the	O
sum	O
of	O
a	O
row	O
of	O
trained	O
weights	O
so	O
the	O
method	O
deltaenergy	O
returns	O
a	O
measure	O
of	O
the	O
energy	O
difference	O
between	O
the	O
input	O
vector	O
in	O
the	O
current	O
input	O
cells	O
and	O
the	O
training	O
input	O
examples	O
private	O
float	O
deltaenergyint	O
index	O
java	O
classes	O
for	O
hopfield	O
neural	O
networks	O
float	O
temp	O
for	O
jnuminputs	O
j	O
temp	O
weightsindexj	O
inputcellsj	O
return	O
temp	O
tempstorageindex	O
the	O
method	O
train	O
is	O
used	O
to	O
set	O
the	O
two-dimensional	O
weight	O
array	O
and	O
the	O
onedimensional	O
tempstorage	O
array	O
in	O
which	O
each	O
element	O
is	O
the	O
sum	O
of	O
the	O
corresponding	O
row	O
in	O
the	O
two-dimensional	O
weight	O
array	O
public	O
void	O
train	O
for	O
jnuminputs	O
j	O
for	O
ij	O
i	O
for	O
ntrainingdata	O
size	O
n	O
float	O
data	O
float	O
adjustinputdatai	O
adjustinputdataj	O
weightsji	O
float	O
temp	O
weightsij	O
weightsji	O
temp	O
for	O
inuminputs	O
i	O
tempstoragei	O
for	O
ji	O
j	O
tempstoragei	O
weightsij	O
once	O
the	O
arrays	O
weight	O
and	O
tempstorage	O
are	O
defined	O
it	O
is	O
simple	O
to	O
recall	O
an	O
original	O
input	O
pattern	O
from	O
a	O
similar	O
test	O
pattern	O
public	O
float	O
recallfloat	O
pattern	O
int	O
numiterations	O
for	O
inuminputs	O
i	O
inputcellsi	O
patterni	O
for	O
ii	O
iinumiterations	O
ii	O
for	O
inuminputs	O
i	O
if	O
neural	O
networks	O
inputcellsi	O
else	O
inputcellsi	O
return	O
inputcells	O
testing	O
the	O
hopfield	O
neural	B
network	I
class	O
the	O
test	O
program	O
for	O
the	O
hopfield	O
neural	B
network	I
class	O
is	O
t	O
est	O
hopf	O
ield	O
this	O
test	O
program	O
defined	O
three	O
test	O
input	O
patterns	O
each	O
with	O
ten	O
values	O
static	O
float	O
data	O
the	O
following	O
code	O
fragment	O
shows	O
how	O
to	O
create	O
a	O
new	O
instance	O
of	O
the	O
hopf	O
ield	O
class	O
and	O
train	O
it	O
to	O
recognize	O
these	O
three	O
test	O
input	O
patterns	O
test	O
new	O
test	O
train	O
the	O
static	O
method	O
helper	O
is	O
used	O
to	O
slightly	O
scramble	O
an	O
input	O
pattern	O
then	O
test	O
the	O
training	O
hopfield	O
neural	B
network	I
to	O
see	O
if	O
the	O
original	O
pattern	O
is	O
re-created	O
helpertest	O
helpertest	O
helpertest	O
the	O
following	O
listing	O
shows	O
an	O
implementation	O
of	O
the	O
method	O
helper	O
called	O
method	O
pp	O
simply	O
formats	O
a	O
floating	O
point	O
number	O
for	O
printing	O
by	O
clamping	O
it	O
to	O
zero	O
or	O
one	O
this	O
version	O
of	O
the	O
code	O
randomly	O
flips	O
one	O
test	O
bit	O
and	O
we	O
will	O
see	O
that	O
the	O
trained	O
hopfield	O
network	O
almost	O
always	O
correctly	O
recognizes	O
the	O
original	O
testing	O
the	O
hopfield	O
neural	B
network	I
class	O
pattern	O
the	O
version	O
of	O
method	O
helper	O
included	O
in	O
the	O
zip	O
file	O
for	O
this	O
book	O
is	O
slightly	O
different	O
in	O
that	O
two	O
bits	O
are	O
randomly	O
flipped	O
will	O
later	O
look	O
at	O
sample	O
output	O
with	O
both	O
one	O
and	O
two	O
bits	O
randomly	O
flipped	O
private	O
static	O
void	O
helperhopfield	O
test	O
string	O
s	O
float	O
test	O
data	O
float	O
dd	O
new	O
for	O
i	O
ddi	O
test	O
datai	O
int	O
index	O
if	O
ddindex	O
else	O
float	O
rr	O
test	O
recalldd	O
system	O
out	O
printsnoriginal	O
data	O
for	O
i	O
i	O
i	O
ddindex	O
system	O
out	O
printpptest	O
datai	O
system	O
out	O
printnrandomized	O
data	O
for	O
i	O
i	O
i	O
system	O
out	O
printppddi	O
system	O
out	O
printnrecognized	O
pattern	O
for	O
i	O
i	O
i	O
system	O
out	O
printpprri	O
system	O
out	O
println	O
the	O
following	O
listing	O
shows	O
how	O
to	O
run	O
the	O
program	O
and	O
lists	O
the	O
example	O
output	O
java	O
test	O
hopfield	O
pattern	O
original	O
data	O
randomized	O
data	O
recognized	O
pattern	O
pattern	O
original	O
data	O
randomized	O
data	O
recognized	O
pattern	O
pattern	O
original	O
data	O
randomized	O
data	O
recognized	O
pattern	O
in	O
this	O
listing	O
we	O
see	O
that	O
the	O
three	O
sample	O
training	O
patterns	O
in	O
t	O
est	O
hopf	O
ield	O
java	O
are	O
re-created	O
after	O
scrambling	O
the	O
data	O
by	O
changing	O
one	O
randomly	O
chosen	O
value	O
to	O
neural	O
networks	O
its	O
opposite	O
value	O
when	O
you	O
run	O
the	O
test	O
program	O
several	O
times	O
you	O
will	O
see	O
occasional	O
errors	O
when	O
one	O
random	O
bit	O
is	O
flipped	O
and	O
you	O
will	O
see	O
errors	O
occur	O
more	O
often	O
with	O
two	O
bits	O
flipped	O
here	O
is	O
an	O
example	O
with	O
two	O
bits	O
flipped	O
per	O
test	O
the	O
first	O
pattern	O
is	O
incorrectly	O
reconstructed	O
and	O
the	O
second	O
and	O
third	O
patterns	O
are	O
reconstructed	O
correctly	O
pattern	O
original	O
data	O
randomized	O
data	O
recognized	O
pattern	O
pattern	O
original	O
data	O
randomized	O
data	O
recognized	O
pattern	O
pattern	O
original	O
data	O
randomized	O
data	O
recognized	O
pattern	O
back	B
propagation	I
neural	O
networks	O
the	O
next	O
neural	B
network	I
model	O
that	O
we	O
will	O
use	O
is	O
called	O
back	B
propagation	I
also	O
known	O
as	O
back-prop	O
and	O
delta	O
rule	O
learning	O
in	O
this	O
model	O
neurons	O
are	O
organized	O
into	O
data	O
structures	O
that	O
we	O
call	O
layers	O
figure	O
shows	O
a	O
simple	O
neural	B
network	I
with	O
two	O
layers	O
this	O
network	O
is	O
shown	O
in	O
two	O
different	O
views	O
just	O
the	O
neurons	O
organized	O
as	O
two	O
one-dimensional	O
arrays	O
and	O
as	O
two	O
one-dimensional	O
arrays	O
with	O
the	O
connections	O
between	O
the	O
neurons	O
in	O
our	O
model	O
there	O
is	O
a	O
connection	O
between	O
two	O
neurons	O
that	O
is	O
characterized	O
by	O
a	O
single	O
floating-point	O
number	O
that	O
we	O
will	O
call	O
the	O
connection	O
s	O
weight	O
a	O
weight	O
wij	O
connects	O
input	O
neuron	B
i	O
to	O
output	O
neuron	B
j	O
in	O
the	O
back	B
propagation	I
model	O
we	O
always	O
assume	O
that	O
a	O
neuron	B
is	O
connected	O
to	O
every	O
neuron	B
in	O
the	O
previous	O
layer	O
the	O
key	O
thing	O
is	O
to	O
be	O
able	O
to	O
train	O
a	O
back-prop	O
neural	B
network	I
training	O
is	O
performed	O
by	O
calculating	O
sets	O
of	O
weights	O
for	O
connecting	O
each	O
layer	O
as	O
we	O
will	O
see	O
we	O
will	O
train	O
networks	O
by	O
applying	O
input	O
values	O
to	O
the	O
input	O
layer	O
allowing	O
these	O
values	O
to	O
propagate	O
through	O
the	O
network	O
using	O
the	O
current	O
weight	O
values	O
and	O
calculating	O
the	O
errors	O
between	O
desired	O
output	O
values	O
and	O
the	O
output	O
values	O
from	O
propagation	O
of	O
input	O
values	O
through	O
the	O
network	O
initially	O
weights	O
are	O
set	O
to	O
small	O
random	O
values	O
you	O
will	O
get	O
a	O
general	O
idea	O
for	O
how	O
this	O
is	O
done	O
in	O
this	O
section	O
and	O
then	O
we	O
will	O
look	O
at	O
java	O
implementation	O
code	O
in	O
section	O
in	O
figure	O
we	O
only	O
have	O
two	O
neuron	B
layers	O
one	O
for	O
the	O
input	O
neurons	O
and	O
one	O
for	O
the	O
output	O
neurons	O
networks	O
with	O
no	O
hidden	O
layers	O
are	O
not	O
usually	O
useful	O
i	O
back	B
propagation	I
neural	O
networks	O
figure	O
two	O
views	O
of	O
the	O
same	O
two-layer	O
neural	B
network	I
the	O
view	O
on	O
the	O
right	O
shows	O
the	O
connection	O
weights	O
between	O
the	O
input	O
and	O
output	O
layers	O
as	O
a	O
two-dimensional	O
array	O
am	O
using	O
the	O
network	O
in	O
figure	O
just	O
to	O
demonstrate	O
layer	O
to	O
layer	O
connections	O
through	O
a	O
weights	O
array	O
to	O
calculate	O
the	O
activation	O
of	O
the	O
first	O
output	O
neuron	B
we	O
evaluate	O
the	O
sum	O
of	O
the	O
products	O
of	O
the	O
input	O
neurons	O
times	O
the	O
appropriate	O
weight	O
values	O
this	O
sum	O
is	O
input	O
to	O
a	O
sigmoid	O
activation	O
function	O
figure	O
and	O
the	O
result	O
is	O
the	O
new	O
activation	O
value	O
for	O
here	O
is	O
the	O
formula	O
for	O
the	O
simple	O
network	O
in	O
figure	O
w	O
w	O
w	O
w	O
figure	O
shows	O
a	O
plot	O
of	O
the	O
sigmoid	O
function	O
and	O
the	O
derivative	O
of	O
the	O
sigmoid	O
function	O
we	O
will	O
use	O
the	O
derivative	O
of	O
the	O
sigmoid	O
function	O
when	O
training	O
a	O
neural	B
network	I
at	O
least	O
one	O
hidden	O
neuron	B
layer	O
with	O
classified	O
data	O
examples	O
a	O
neural	B
network	I
like	O
the	O
one	O
seen	O
in	O
figure	O
is	O
trained	O
by	O
using	O
a	O
set	O
of	O
training	O
data	O
for	O
back	B
propagation	I
networks	O
training	O
data	O
consists	O
of	O
matched	O
sets	O
of	O
input	O
with	O
matching	O
desired	O
output	O
values	O
we	O
want	O
to	O
train	O
a	O
network	O
to	O
not	O
only	O
produce	O
the	O
same	O
outputs	O
for	O
training	O
data	O
inputs	O
as	O
appear	O
in	O
the	O
training	O
data	O
but	O
also	O
to	O
generalize	O
its	O
pattern	O
matching	O
ability	O
based	O
on	O
the	O
training	O
data	O
to	O
be	O
able	O
to	O
match	O
test	O
patterns	O
that	O
are	O
similar	O
to	O
training	O
input	O
patterns	O
a	O
key	O
here	O
is	O
to	O
balance	O
the	O
size	O
of	O
the	O
network	O
against	O
how	O
much	O
information	O
it	O
must	O
hold	O
a	O
common	O
mistake	O
when	O
using	O
back-prop	O
networks	O
is	O
to	O
use	O
too	O
large	O
a	O
network	O
a	O
network	O
that	O
contains	O
too	O
many	O
neurons	O
and	O
connections	O
will	O
simply	O
memorize	O
the	O
training	O
input	O
neuron	B
layerinput	O
neuron	B
layeroutput	O
neuron	B
layeroutputneuron	O
layer	O
neural	O
networks	O
figure	O
sigmoid	O
and	O
derivative	O
of	O
the	O
sigmoid	O
functions	O
this	O
plot	O
was	O
produced	O
by	O
the	O
file	O
src-neural-networksgraph	O
java	O
examples	O
including	O
any	O
noise	O
in	O
the	O
training	O
data	O
however	O
if	O
we	O
use	O
a	O
smaller	O
number	O
of	O
neurons	O
with	O
a	O
very	O
large	O
number	O
of	O
training	O
data	O
examples	O
then	O
we	O
force	O
the	O
network	O
to	O
generalize	O
ignoring	O
noise	O
in	O
the	O
training	O
data	O
and	O
learning	O
to	O
recognize	O
important	O
traits	O
in	O
input	O
data	O
while	O
ignoring	O
statistical	O
noise	O
how	O
do	O
we	O
train	O
a	O
back	B
propagation	I
neural	B
network	I
given	O
that	O
we	O
have	O
a	O
good	O
training	O
data	O
set	O
the	O
algorithm	O
is	O
quite	O
easy	O
we	O
will	O
now	O
walk	O
through	O
the	O
simple	O
case	O
of	O
a	O
two-layer	O
network	O
like	O
the	O
one	O
in	O
figure	O
and	O
later	O
in	O
section	O
we	O
will	O
review	O
the	O
algorithm	O
in	O
more	O
detail	O
when	O
we	O
have	O
either	O
one	O
or	O
two	O
hidden	O
neuron	B
layers	O
between	O
the	O
input	O
and	O
output	O
layers	O
in	O
order	O
to	O
train	O
the	O
network	O
in	O
figure	O
we	O
repeat	O
the	O
following	O
learning	O
cycle	O
several	O
times	O
zero	O
out	O
temporary	O
arrays	O
for	O
holding	O
the	O
error	O
at	O
each	O
neuron	B
the	O
error	O
starting	O
at	O
the	O
output	O
layer	O
is	O
the	O
difference	O
between	O
the	O
output	O
value	O
for	O
a	O
specific	O
output	O
layer	O
neuron	B
and	O
the	O
calculated	O
value	O
from	O
setting	O
the	O
input	O
layer	O
neuron	B
s	O
activation	O
values	O
to	O
the	O
input	O
values	O
in	O
the	O
current	O
training	O
example	O
and	O
letting	O
activation	O
spread	O
through	O
the	O
network	O
update	O
the	O
weight	O
wij	O
i	O
is	O
the	O
index	O
of	O
an	O
input	O
neuron	B
and	O
j	O
is	O
the	O
index	O
of	O
an	O
output	O
neuron	B
using	O
the	O
formula	O
wij	O
learning	O
rate	O
output	O
errorj	O
ii	O
rate	O
is	O
a	O
tunable	O
parameter	O
and	O
output	O
errorj	O
was	O
calculated	O
in	O
step	O
and	O
ii	O
is	O
the	O
activation	O
of	O
input	O
neuron	B
at	O
index	O
i	O
this	O
process	O
is	O
continued	O
to	O
either	O
a	O
maximum	O
number	O
of	O
learning	O
cycles	O
or	O
until	O
the	O
calculated	O
output	O
errors	O
get	O
very	O
small	O
we	O
will	O
see	O
later	O
that	O
the	O
algorithm	O
is	O
similar	O
but	O
slightly	O
more	O
complicated	O
when	O
we	O
have	O
hidden	O
neuron	B
layers	O
the	O
difference	O
is	O
that	O
we	O
will	O
back	O
propagate	O
output	O
errors	O
to	O
the	O
hidden	O
layers	O
in	O
order	O
to	O
estimate	O
errors	O
for	O
hidden	O
neurons	O
we	O
will	O
cover	O
more	O
on	O
this	O
later	O
this	O
type	O
of	O
neural	O
a	O
java	O
class	O
library	O
for	O
back	B
propagation	I
figure	O
capabilities	O
of	O
zero	O
one	O
and	O
two	O
hidden	O
neuron	B
layer	O
neural	O
networks	O
the	O
grayed	O
areas	O
depict	O
one	O
of	O
two	O
possible	O
output	O
values	O
based	O
on	O
two	O
input	O
neuron	B
activation	O
values	O
note	O
that	O
this	O
is	O
a	O
two-dimensional	O
case	O
for	O
visualization	O
purposes	O
if	O
a	O
network	O
had	O
ten	O
input	O
neurons	O
instead	O
of	O
two	O
then	O
these	O
plots	O
would	O
have	O
to	O
be	O
ten-dimensional	O
instead	O
of	O
twodimensional	O
network	O
is	O
too	O
simple	O
to	O
solve	O
very	O
many	O
interesting	O
problems	O
and	O
in	O
practical	O
applications	O
we	O
almost	O
always	O
use	O
either	O
one	O
additional	O
hidden	O
neuron	B
layer	O
or	O
two	O
additional	O
hidden	O
neuron	B
layers	O
figure	O
shows	O
the	O
types	O
of	O
problems	O
that	O
can	O
be	O
solved	O
by	O
zero	O
hidden	O
layer	O
one	O
hidden	O
layer	O
and	O
two	O
hidden	O
layer	O
networks	O
a	O
java	O
class	O
library	O
for	O
back	B
propagation	I
the	O
back	B
propagation	I
neural	B
network	I
library	O
used	O
in	O
this	O
chapter	O
was	O
written	O
to	O
be	O
easily	O
understood	O
and	O
is	O
useful	O
for	O
many	O
problems	O
however	O
one	O
thing	O
that	O
is	O
not	O
in	O
the	O
implementation	O
in	O
this	O
section	O
is	O
added	O
in	O
section	O
is	O
something	O
usually	O
called	O
momentum	O
to	O
speed	O
up	O
the	O
training	O
process	O
at	O
a	O
cost	O
of	O
doubling	O
the	O
storage	O
requirements	O
for	O
weights	O
adding	O
a	O
momentum	O
term	O
not	O
only	O
makes	O
learning	O
faster	O
but	O
also	O
increases	O
the	O
chances	O
of	O
sucessfully	O
learning	O
more	O
difficult	O
problems	O
we	O
will	O
concentrate	O
in	O
this	O
section	O
on	O
implementing	O
a	O
back-prop	O
learning	O
algorithm	O
that	O
works	O
for	O
both	O
one	O
and	O
two	O
hidden	O
layer	O
networks	O
as	O
we	O
saw	O
in	O
figure	O
a	O
network	O
with	O
two	O
hidden	O
layers	O
is	O
capable	O
of	O
arbitrary	O
mappings	O
of	O
input	O
to	O
output	O
values	O
so	O
there	O
is	O
no	O
theoretical	O
reason	O
that	O
i	O
know	O
of	O
for	O
using	O
networks	O
with	O
three	O
hidden	O
layers	O
the	O
source	O
directory	O
src-neural-networks	O
contains	O
example	O
programs	O
for	O
both	O
back	O
neural	O
networks	O
figure	O
example	O
backpropagation	O
neural	B
network	I
with	O
one	O
hidden	O
layer	O
figure	O
example	O
backpropagation	O
neural	B
network	I
with	O
two	O
hidden	O
layers	O
a	O
java	O
class	O
library	O
for	O
back	B
propagation	I
propagation	O
neural	O
networks	O
and	O
hopfield	O
neural	O
networks	O
which	O
we	O
saw	O
at	O
the	O
beginning	O
of	O
this	O
chapter	O
the	O
relevant	O
files	O
for	O
the	O
back	B
propagation	I
examples	O
are	O
neural	O
contains	O
a	O
class	O
for	O
simulating	O
a	O
neural	B
network	I
with	O
one	O
hidden	O
neuron	B
layer	O
test	O
a	O
text-based	O
test	O
program	O
for	O
the	O
class	O
neural	O
guitest	O
a	O
gui-based	O
test	O
program	O
for	O
the	O
class	O
neural	O
neural	O
contains	O
a	O
class	O
for	O
simulating	O
a	O
neural	B
network	I
with	O
two	O
hidden	O
neuron	B
layers	O
neural	O
momentum	O
java	O
contains	O
a	O
class	O
for	O
simulating	O
a	O
neural	B
network	I
with	O
two	O
hidden	O
neuron	B
layers	O
and	O
implements	O
momentum	O
learning	O
in	O
section	O
test	O
a	O
text-based	O
test	O
program	O
for	O
the	O
class	O
neural	O
guitest	O
a	O
gui-based	O
test	O
program	O
for	O
the	O
class	O
neural	O
guitest	O
momentum	O
java	O
a	O
gui-based	O
test	O
program	O
for	O
the	O
class	O
neural	O
momentum	O
that	O
uses	O
momentum	O
learning	O
in	O
section	O
a	O
java	O
jfc	O
graphics	O
panel	O
for	O
the	O
values	O
of	O
a	O
one-dimensional	O
array	O
of	O
floating	O
point	O
values	O
a	O
java	O
jfc	O
graphics	O
panel	O
for	O
the	O
values	O
of	O
a	O
two-dimensional	O
array	O
of	O
floating	O
point	O
values	O
the	O
gui	O
files	O
are	O
for	O
demonstration	O
purposes	O
only	O
and	O
we	O
will	O
not	O
discuss	O
the	O
code	O
for	O
these	O
classes	O
if	O
you	O
are	O
interested	O
in	O
the	O
demo	O
graphics	O
code	O
and	O
do	O
not	O
know	O
jfc	O
java	O
programming	O
there	O
are	O
a	O
few	O
good	O
jfc	O
tutorials	O
at	O
the	O
web	O
site	O
java	O
sun	O
com	O
it	O
is	O
common	O
to	O
implement	O
back-prop	O
libraries	O
to	O
handle	O
either	O
zero	O
one	O
or	O
two	O
hidden	O
layers	O
in	O
the	O
same	O
code	O
base	O
at	O
the	O
risk	O
of	O
having	O
to	O
repeat	O
similar	O
code	O
in	O
two	O
different	O
classes	O
i	O
decided	O
to	O
make	O
the	O
n	O
eural	O
and	O
n	O
eural	O
classes	O
distinct	O
i	O
think	O
that	O
this	O
makes	O
the	O
code	O
a	O
little	O
easier	O
for	O
you	O
to	O
understand	O
as	O
a	O
practical	O
point	O
you	O
will	O
almost	O
always	O
start	O
solving	O
a	O
neural	B
network	I
problem	O
using	O
only	O
one	O
hidden	O
layer	O
and	O
only	O
progress	O
to	O
trying	O
two	O
hidden	O
layers	O
if	O
you	O
cannot	O
train	O
a	O
one	O
hidden	O
layer	O
network	O
to	O
solve	O
the	O
problem	O
at-hand	O
with	O
sufficiently	O
small	O
error	O
when	O
tested	O
with	O
data	O
that	O
is	O
different	O
than	O
the	O
original	O
training	O
data	O
one	O
hidden	O
layer	O
networks	O
require	O
less	O
storage	O
space	O
and	O
run	O
faster	O
in	O
simulation	O
than	O
two	O
hidden	O
layer	O
networks	O
in	O
this	O
section	O
we	O
will	O
only	O
look	O
at	O
the	O
implementation	O
of	O
the	O
class	O
n	O
eural	O
neural	O
networks	O
n	O
eural	O
is	O
simpler	O
and	O
when	O
you	O
understand	O
how	O
n	O
eural	O
works	O
the	O
simpler	O
class	O
is	O
easy	O
to	O
understand	O
also	O
this	O
class	O
implements	O
the	O
serializable	O
interface	O
and	O
contains	O
a	O
utility	O
method	O
save	O
to	O
write	O
a	O
trained	O
network	O
to	O
a	O
disk	O
file	O
class	O
implements	O
serializable	O
there	O
is	O
a	O
static	O
factory	O
method	O
that	O
reads	O
a	O
saved	O
network	O
file	O
from	O
disk	O
and	O
builds	O
an	O
instance	O
of	O
n	O
eural	O
and	O
there	O
is	O
a	O
class	O
constructor	O
that	O
builds	O
a	O
new	O
untrained	O
network	O
in	O
memory	O
given	O
the	O
number	O
of	O
neurons	O
in	O
each	O
layer	O
public	O
static	O
factorystring	O
serialized	O
file	O
name	O
public	O
num	O
in	O
int	O
int	O
int	O
num	O
output	O
an	O
instance	O
of	O
n	O
eural	O
contains	O
training	O
data	O
as	O
transient	O
data	O
that	O
is	O
not	O
saved	O
by	O
method	O
save	O
transient	O
protected	O
arraylist	O
inputtraining	O
new	O
vector	O
transient	O
protected	O
arraylist	O
outputtraining	O
new	O
vector	O
i	O
want	O
the	O
training	O
examples	O
to	O
be	O
native	O
float	O
arrays	O
so	O
i	O
used	O
generic	O
arraylist	O
containers	O
you	O
will	O
usually	O
need	O
to	O
experiment	O
with	O
training	O
parameters	O
in	O
order	O
to	O
solve	O
difficult	O
problems	O
the	O
learning	O
rate	O
not	O
only	O
controls	O
how	O
large	O
the	O
weight	O
corrections	O
we	O
make	O
each	O
learning	O
cycle	O
but	O
this	O
parameter	O
also	O
affects	O
whether	O
we	O
can	O
break	O
out	O
of	O
local	O
minimum	O
other	O
parameters	O
that	O
affect	O
learning	O
are	O
the	O
ranges	O
of	O
initial	O
random	O
weight	O
values	O
that	O
are	O
hardwired	O
in	O
the	O
method	O
randomizew	O
eights	O
and	O
the	O
small	O
random	O
values	O
that	O
we	O
add	O
to	O
weights	O
during	O
the	O
training	O
cycles	O
these	O
values	O
are	O
set	O
in	O
in	O
slightlyrandomizew	O
eights	O
i	O
usually	O
only	O
need	O
to	O
adjust	O
the	O
learning	O
rate	O
when	O
training	O
back-prop	O
networks	O
public	O
float	O
training	O
rate	O
i	O
often	O
decrease	O
the	O
learning	O
rate	O
during	O
training	O
that	O
is	O
i	O
start	O
with	O
a	O
large	O
learning	O
rate	O
and	O
gradually	O
reduce	O
it	O
during	O
training	O
the	O
calculation	O
for	O
output	O
neuron	B
values	O
given	O
a	O
set	O
of	O
inputs	O
and	O
the	O
current	O
weight	O
values	O
is	O
simple	O
i	O
placed	O
the	O
code	O
for	O
calculating	O
a	O
forward	O
pass	O
through	O
the	O
network	O
in	O
a	O
separate	O
method	O
f	O
orwardp	O
ass	O
because	O
it	O
is	O
also	O
used	O
later	O
in	O
the	O
method	O
training	O
a	O
java	O
class	O
library	O
for	O
back	B
propagation	I
public	O
float	O
recallfloat	O
in	O
for	O
i	O
i	O
numinputs	O
i	O
inputsi	O
ini	O
forwardpass	O
float	O
ret	O
new	O
floatnumoutputs	O
for	O
i	O
i	O
numoutputs	O
i	O
reti	O
outputsi	O
return	O
ret	O
public	O
void	O
forwardpass	O
for	O
h	O
h	O
h	O
for	O
h	O
h	O
h	O
for	O
i	O
i	O
numinputs	O
i	O
for	O
h	O
h	O
h	O
inputsi	O
for	O
i	O
i	O
i	O
for	O
h	O
h	O
h	O
for	O
o	O
o	O
numoutputs	O
o	O
outputso	O
for	O
h	O
h	O
h	O
for	O
o	O
o	O
numoutputs	O
o	O
outputso	O
while	O
the	O
code	O
for	O
recall	O
and	O
f	O
orwardp	O
ass	O
is	O
almost	O
trivial	O
the	O
training	O
code	O
in	O
method	O
train	O
is	O
more	O
complex	O
and	O
we	O
will	O
go	O
through	O
it	O
in	O
some	O
detail	O
before	O
we	O
get	O
to	O
the	O
code	O
i	O
want	O
to	O
mention	O
that	O
there	O
are	O
two	O
primary	O
techniques	O
for	O
training	O
back-prop	O
networks	O
the	O
technique	O
that	O
i	O
use	O
is	O
to	O
update	O
the	O
weight	O
arrays	O
after	O
each	O
individual	O
training	O
example	O
the	O
other	O
technique	O
is	O
to	O
sum	O
all	O
output	O
errors	O
neural	O
networks	O
over	O
the	O
entire	O
training	O
set	O
part	O
of	O
the	O
training	O
set	O
and	O
then	O
calculate	O
weight	O
updates	O
in	O
the	O
following	O
discussion	O
i	O
am	O
going	O
to	O
weave	O
my	O
comments	O
on	O
the	O
code	O
into	O
the	O
listing	O
the	O
private	O
member	O
variable	O
current	O
example	O
is	O
used	O
to	O
cycle	O
through	O
the	O
training	O
examples	O
one	O
training	O
example	O
is	O
processed	O
each	O
time	O
that	O
the	O
train	O
method	O
is	O
called	O
private	O
int	O
current	O
example	O
public	O
float	O
trainarraylist	O
ins	O
arraylist	O
v	O
outs	O
before	O
starting	O
a	O
training	O
cycle	O
for	O
one	O
example	O
we	O
zero	O
out	O
the	O
arrays	O
used	O
to	O
hold	O
the	O
output	O
layer	O
errors	O
and	O
the	O
errors	O
that	O
are	O
back	O
propagated	O
to	O
the	O
hidden	O
layers	O
we	O
also	O
need	O
to	O
copy	O
the	O
training	O
example	O
input	O
values	O
and	O
output	O
values	O
int	O
i	O
h	O
o	O
float	O
error	O
int	O
num	O
cases	O
ins	O
size	O
examplenum	O
cases	O
example	O
zero	O
out	O
error	O
arrays	O
for	O
h	O
h	O
for	O
h	O
h	O
for	O
o	O
numoutputs	O
o	O
output	O
errorso	O
copy	O
the	O
input	O
values	O
for	O
i	O
numinputs	O
i	O
inputsi	O
ins	O
getcurrent	O
examplei	O
copy	O
the	O
output	O
values	O
float	O
outs	O
v	O
outs	O
getcurrent	O
example	O
we	O
need	O
to	O
propagate	O
the	O
training	O
example	O
input	O
values	O
through	O
the	O
hidden	O
layers	O
to	O
the	O
output	O
layers	O
we	O
use	O
the	O
current	O
values	O
of	O
the	O
weights	O
forwardpass	O
after	O
propagating	O
the	O
input	O
values	O
to	O
the	O
output	O
layer	O
we	O
need	O
to	O
calculate	O
the	O
output	O
error	O
for	O
each	O
output	O
neuron	B
this	O
error	O
is	O
the	O
difference	O
between	O
the	O
desired	O
output	O
and	O
the	O
calculated	O
output	O
this	O
difference	O
is	O
multiplied	O
by	O
the	O
value	O
of	O
the	O
calculated	O
a	O
java	O
class	O
library	O
for	O
back	B
propagation	I
output	O
neuron	B
value	O
that	O
is	O
first	O
modified	O
by	O
the	O
sigmoid	O
function	O
that	O
we	O
saw	O
in	O
figure	O
the	O
sigmoid	O
function	O
is	O
to	O
clamp	O
the	O
calculated	O
output	O
value	O
to	O
a	O
reasonable	O
range	O
for	O
o	O
numoutputs	O
o	O
output	O
errorso	O
outputso	O
sigmoidpoutputso	O
the	O
errors	O
for	O
the	O
neuron	B
activation	O
values	O
in	O
the	O
second	O
hidden	O
layer	O
hidden	O
layer	O
connected	O
to	O
the	O
output	O
layer	O
are	O
estimated	O
by	O
summing	O
for	O
each	O
hidden	O
neuron	B
its	O
contribution	O
to	O
the	O
errors	O
of	O
the	O
output	O
layer	O
neurons	O
the	O
thing	O
to	O
notice	O
is	O
that	O
if	O
the	O
connection	O
weight	O
value	O
between	O
hidden	O
neuron	B
h	O
and	O
output	O
neuron	B
o	O
is	O
large	O
then	O
hidden	O
neuron	B
h	O
is	O
contributing	O
more	O
to	O
the	O
error	O
of	O
output	O
neuron	B
o	O
than	O
other	O
neurons	O
with	O
smaller	O
connecting	O
weight	O
values	O
for	O
h	O
h	O
for	O
o	O
numoutputs	O
o	O
output	O
errorso	O
we	O
estimate	O
the	O
errors	O
in	O
activation	O
energy	O
for	O
the	O
first	O
hidden	O
layer	O
neurons	O
by	O
using	O
the	O
estimated	O
errors	O
for	O
the	O
second	O
hidden	O
layers	O
that	O
we	O
calculated	O
in	O
the	O
last	O
code	O
snippet	O
for	O
h	O
h	O
for	O
o	O
o	O
after	O
we	O
have	O
scaled	O
estimates	O
for	O
the	O
activation	O
energy	O
errors	O
for	O
both	O
hidden	O
layers	O
we	O
then	O
want	O
to	O
scale	O
the	O
error	O
estimates	O
using	O
the	O
derivative	O
of	O
the	O
sigmoid	O
function	O
s	O
value	O
of	O
each	O
hidden	O
neuron	B
s	O
activation	O
energy	O
neural	O
networks	O
for	O
h	O
h	O
for	O
h	O
h	O
now	O
that	O
we	O
have	O
estimates	O
for	O
the	O
hidden	O
layer	O
neuron	B
errors	O
we	O
update	O
the	O
weights	O
connecting	O
to	O
the	O
output	O
layer	O
and	O
each	O
hidden	O
layer	O
by	O
adding	O
the	O
product	O
of	O
the	O
current	O
learning	O
rate	O
the	O
estimated	O
error	O
of	O
each	O
weight	O
s	O
target	O
neuron	B
and	O
the	O
value	O
of	O
the	O
weight	O
s	O
source	O
neuron	B
update	O
the	O
to	O
output	O
weights	O
for	O
o	O
numoutputs	O
o	O
for	O
h	O
h	O
training	O
rate	O
output	O
errorso	O
update	O
the	O
to	O
weights	O
for	O
o	O
o	O
for	O
h	O
h	O
training	O
rate	O
update	O
the	O
input	O
to	O
weights	O
for	O
h	O
h	O
for	O
i	O
numinputs	O
i	O
training	O
rate	O
inputsi	O
for	O
o	O
numoutputs	O
o	O
error	O
math	O
absoutso	O
outputso	O
the	O
last	O
step	O
in	O
this	O
code	O
snippet	O
was	O
to	O
calculate	O
an	O
average	O
error	O
over	O
all	O
output	O
neurons	O
for	O
this	O
training	O
example	O
this	O
is	O
important	O
so	O
that	O
we	O
can	O
track	O
the	O
training	O
adding	O
momentum	O
to	O
speed	O
up	O
back-prop	O
training	O
status	O
in	O
real	O
time	O
for	O
very	O
long	O
running	O
back-prop	O
training	O
experiments	O
i	O
like	O
to	O
be	O
able	O
to	O
see	O
this	O
error	O
graphed	O
in	O
real	O
time	O
to	O
help	O
decide	O
when	O
to	O
stop	O
a	O
training	O
run	O
this	O
allows	O
me	O
to	O
experiment	O
with	O
the	O
learning	O
rate	O
initial	O
value	O
and	O
see	O
how	O
fast	O
it	O
decays	O
the	O
last	O
thing	O
that	O
method	O
train	O
needs	O
to	O
do	O
is	O
to	O
update	O
the	O
training	O
example	O
counter	O
so	O
that	O
the	O
next	O
example	O
is	O
used	O
the	O
next	O
time	O
that	O
train	O
is	O
called	O
current	O
example	O
if	O
num	O
cases	O
current	O
example	O
return	O
error	O
you	O
can	O
look	O
at	O
the	O
implementation	O
of	O
the	O
swing	O
gui	O
test	O
class	O
gu	O
t	O
est	O
to	O
see	O
how	O
i	O
decrease	O
the	O
training	O
rate	O
during	O
training	O
i	O
also	O
monitor	O
the	O
summed	O
error	O
rate	O
over	O
all	O
output	O
neurons	O
and	O
occasionally	O
randomize	O
the	O
weights	O
if	O
the	O
network	O
is	O
not	O
converging	O
to	O
a	O
solution	O
to	O
the	O
current	O
problem	O
adding	O
momentum	O
to	O
speed	O
up	O
back-prop	O
training	O
we	O
did	O
not	O
use	O
a	O
momentum	O
term	O
in	O
the	O
java	O
code	O
in	O
section	O
for	O
difficult	O
to	O
train	O
problems	O
adding	O
a	O
momentum	O
term	O
can	O
drastically	O
reduce	O
the	O
training	O
time	O
at	O
a	O
cost	O
of	O
doubling	O
the	O
weight	O
storage	O
requirements	O
to	O
implement	O
momentum	O
we	O
remember	O
how	O
much	O
each	O
weight	O
was	O
changed	O
in	O
the	O
previous	O
learning	O
cycle	O
and	O
make	O
the	O
weight	O
change	O
larger	O
if	O
the	O
current	O
change	O
in	O
direction	O
is	O
the	O
same	O
as	O
the	O
last	O
learning	O
cycle	O
for	O
example	O
if	O
the	O
change	O
to	O
weight	O
wij	O
had	O
a	O
large	O
positive	O
value	O
in	O
the	O
last	O
learning	O
cycle	O
and	O
the	O
calculated	O
weight	O
change	O
for	O
wij	O
is	O
also	O
a	O
large	O
positive	O
value	O
in	O
the	O
current	O
learning	O
cycle	O
then	O
make	O
the	O
current	O
weight	O
change	O
even	O
larger	O
adding	O
a	O
momentum	O
term	O
not	O
only	O
makes	O
learning	O
faster	O
but	O
also	O
increases	O
the	O
chances	O
of	O
sucessfully	O
learning	O
more	O
difficult	O
problems	O
i	O
modified	O
two	O
of	O
the	O
classes	O
from	O
section	O
to	O
use	O
momentum	O
neural	O
momentum	O
java	O
training	O
and	O
recall	O
for	O
two	O
hidden	O
layer	O
backprop	O
networks	O
the	O
constructor	O
has	O
an	O
extra	O
argument	O
alpha	O
that	O
is	O
a	O
scaling	O
factor	O
for	O
how	O
much	O
of	O
the	O
previous	O
cycle	O
s	O
weight	O
change	O
to	O
add	O
to	O
the	O
new	O
calculated	O
delta	O
weight	O
values	O
guitest	O
momentum	O
java	O
a	O
gui	O
test	O
application	O
that	O
tests	O
the	O
new	O
class	O
n	O
eural	O
momentum	O
the	O
code	O
for	O
class	O
n	O
eural	O
momentum	O
is	O
similar	O
to	O
the	O
code	O
for	O
n	O
eural	O
that	O
we	O
saw	O
in	O
the	O
last	O
section	O
so	O
here	O
we	O
will	O
just	O
look	O
at	O
the	O
differences	O
the	O
neural	O
networks	O
class	O
constructor	O
now	O
takes	O
another	O
parameter	O
alpha	O
that	O
determines	O
how	O
strong	O
the	O
momentum	O
correction	O
is	O
when	O
we	O
modify	O
weight	O
values	O
momentum	O
scaling	O
term	O
that	O
is	O
applied	O
to	O
last	O
delta	O
weight	O
private	O
float	O
alpha	O
while	O
this	O
alpha	O
term	O
is	O
used	O
three	O
times	O
in	O
the	O
training	O
code	O
it	O
suffices	O
to	O
just	O
look	O
at	O
one	O
of	O
these	O
uses	O
in	O
detail	O
when	O
we	O
allocated	O
the	O
three	O
weight	O
arrays	O
w	O
w	O
and	O
w	O
we	O
also	O
now	O
allocate	O
three	O
additional	O
arrays	O
of	O
corresponding	O
same	O
size	O
w	O
last	O
delta	O
w	O
last	O
delta	O
and	O
w	O
last	O
delta	O
these	O
three	O
new	O
arrays	O
are	O
used	O
to	O
store	O
the	O
weight	O
changes	O
for	O
use	O
in	O
the	O
next	O
training	O
cycle	O
here	O
is	O
the	O
original	O
code	O
to	O
update	O
w	O
from	O
the	O
last	O
section	O
training	O
rate	O
output	O
errorso	O
the	O
following	O
code	O
snippet	O
shows	O
the	O
additions	O
required	O
to	O
use	O
momentum	O
training	O
rate	O
output	O
errorso	O
apply	O
the	O
momentum	O
term	O
alpha	O
training	O
rate	O
output	O
errorso	O
i	O
mentioned	O
in	O
the	O
last	O
section	O
that	O
there	O
are	O
two	O
techniques	O
for	O
training	O
back-prop	O
networks	O
updating	O
the	O
weights	O
after	O
processing	O
each	O
training	O
example	O
or	O
waiting	O
to	O
update	O
weights	O
until	O
all	O
training	O
examples	O
are	O
processed	O
i	O
always	O
use	O
the	O
first	O
method	O
when	O
i	O
don	O
t	O
use	O
momentum	O
in	O
many	O
cases	O
it	O
is	O
best	O
to	O
use	O
the	O
second	O
method	O
when	O
using	O
momentum	O
machine	B
learning	I
with	O
weka	B
weka	B
is	O
a	O
standard	O
java	O
tool	O
for	O
performing	O
both	O
machine	B
learning	I
experiments	O
and	O
for	O
embedding	O
trained	O
models	O
in	O
java	O
applications	O
i	O
have	O
used	O
weka	B
since	O
and	O
it	O
is	O
usually	O
my	O
tool	O
of	O
choice	O
on	O
machine	B
learning	I
projects	O
that	O
are	O
compatible	O
with	O
weka	B
s	O
use	O
of	O
the	O
gpl	O
license	O
in	O
addition	O
to	O
the	O
material	O
in	O
this	O
chapter	O
you	O
should	O
visit	O
the	O
primary	O
weka	B
web	O
site	O
www	O
cs	O
waikato	O
ac	O
nzmlweka	O
for	O
more	O
examples	O
and	O
tutorials	O
good	O
online	O
documentation	O
can	O
also	O
be	O
found	O
at	O
weka	B
sourceforge	O
netwekadoc	O
weka	B
can	O
be	O
run	O
both	O
as	O
a	O
gui	O
application	O
and	O
for	O
using	O
a	O
command	O
line	O
interface	O
for	O
running	O
experiments	O
while	O
the	O
techniques	O
of	O
machine	B
learning	I
have	O
many	O
practical	O
applications	O
the	O
example	O
used	O
in	O
this	O
chapter	O
is	O
simple	O
and	O
is	O
mostly	O
intended	O
to	O
show	O
you	O
the	O
techniques	O
for	O
running	O
weka	B
and	O
techniques	O
for	O
embedding	O
weka	B
in	O
your	O
java	O
applications	O
full	O
documentation	O
of	O
the	O
many	O
machine	B
learning	I
algorithms	O
is	O
outside	O
the	O
scope	O
of	O
this	O
chapter	O
in	O
addition	O
to	O
data	O
cleansing	O
and	O
preprocessing	O
utilities	O
for	O
data	O
normalization	O
resampling	O
transformations	O
etc	O
weka	B
supports	O
most	O
machine-learning	O
techniques	O
for	O
automatically	O
calculating	O
classification	O
systems	O
i	O
have	O
used	O
the	O
following	O
weka	B
learning	O
modules	O
in	O
my	O
own	O
work	O
nave	B
bayes	I
uses	O
bayes	O
s	O
rule	O
for	O
probability	O
of	O
a	O
hypothesis	O
given	O
evidence	O
instance-based	O
learner	O
stores	O
all	O
training	O
examples	O
and	O
use	O
a	O
learning	O
scheme	O
by	O
j	O
ross	O
quinlan	O
that	O
calculates	O
decision	O
trees	O
from	O
training	O
data	O
we	O
will	O
use	O
the	O
algorithm	O
in	O
this	O
chapter	O
weka	B
can	O
be	O
used	O
for	O
both	O
unsupervised	O
and	O
supervised	O
learning	O
an	O
example	O
of	O
unsupervised	O
learning	O
is	O
processing	O
a	O
set	O
of	O
unlabeled	O
data	O
and	O
automatically	O
clustering	O
the	O
data	O
into	O
smaller	O
sets	O
containing	O
similar	O
items	O
we	O
will	O
use	O
supervised	O
learning	O
as	O
the	O
example	O
in	O
this	O
chapter	O
data	O
on	O
daily	O
stock	O
prices	O
is	O
labeled	O
as	O
buy	O
sell	O
or	O
hold	O
we	O
will	O
use	O
the	O
algorithm	O
to	O
automatically	O
build	O
a	O
decision	O
tree	O
for	O
deciding	O
on	O
how	O
to	O
process	O
a	O
stock	O
given	O
its	O
cost	O
data	O
this	O
example	O
is	O
simplistic	O
and	O
should	O
not	O
be	O
used	O
to	O
actually	O
trade	O
stocks	O
it	O
is	O
also	O
possible	O
to	O
induce	O
rules	O
from	O
training	O
data	O
that	O
are	O
equivalent	O
to	O
decision	O
trees	O
for	O
the	O
same	O
training	O
data	O
the	O
learned	O
model	O
uses	O
linear	O
combinations	O
of	O
attribute	O
values	O
for	O
classification	O
we	O
are	O
going	O
to	O
use	O
a	O
simple	O
example	O
to	O
learn	O
how	O
to	O
use	O
weka	B
interactively	O
and	O
machine	B
learning	I
with	O
weka	B
embedded	O
in	O
applications	O
in	O
the	O
next	O
two	O
sections	O
weka	B
uses	O
a	O
data	O
file	O
format	O
call	O
arff	O
the	O
following	O
listing	O
shows	O
the	O
sample	O
arff	O
input	O
file	O
that	O
we	O
will	O
use	O
in	O
the	O
next	O
two	O
sections	O
stock	O
percent	O
change	O
since	O
open	O
real	O
percent	O
change	O
from	O
day	O
low	O
real	O
percent	O
change	O
from	O
day	O
high	O
real	O
action	O
sell	O
hold	O
here	O
the	O
concept	O
of	O
a	O
relation	O
is	O
similar	O
to	O
a	O
relation	O
in	O
powerloom	B
as	O
we	O
saw	O
in	O
chapter	O
a	O
relation	O
has	O
a	O
name	O
and	O
a	O
list	O
of	O
attributes	O
each	O
with	O
an	O
allowed	O
data	O
type	O
here	O
the	O
relation	O
name	O
is	O
stock	O
and	O
we	O
have	O
three	O
attributes	O
that	O
have	O
floating	O
point	O
values	O
and	O
a	O
fourth	O
attribute	O
that	O
has	O
an	O
enumeration	O
of	O
discrete	O
allowed	O
values	O
the	O
section	O
defines	O
data	O
for	O
initializing	O
nine	O
stock	O
relations	O
using	O
weka	B
s	O
interactive	O
gui	O
application	O
the	O
weka	B
jar	O
file	O
is	O
included	O
with	O
the	O
zip	O
file	O
for	O
this	O
book	O
to	O
run	O
the	O
weka	B
gui	O
application	O
change	O
directory	O
to	O
test	O
data	O
and	O
type	O
java	O
once	O
you	O
have	O
loaded	O
possibly	O
browsed	O
the	O
data	O
as	O
seen	O
in	O
figure	O
you	O
can	O
then	O
select	O
the	O
classifier	O
tab	O
and	O
using	O
the	O
choose	O
classifier	O
option	O
find	O
under	O
the	O
trees	O
submenu	O
and	O
click	O
the	O
start	O
button	O
the	O
results	O
can	O
be	O
seen	O
in	O
figure	O
using	O
weka	B
s	O
interactive	O
gui	O
application	O
figure	O
running	O
the	O
weka	B
data	O
explorer	O
figure	O
running	O
the	O
weka	B
data	O
explorer	O
machine	B
learning	I
with	O
weka	B
the	O
decision	O
tree	O
is	O
displayed	O
in	O
the	O
classifier	O
output	O
window	O
pane	O
we	O
will	O
run	O
this	O
same	O
problem	O
from	O
the	O
command	O
line	O
in	O
the	O
next	O
section	O
and	O
then	O
discuss	O
the	O
generated	O
decision	O
tree	O
seen	O
in	O
the	O
lower	O
right	O
panel	O
of	O
the	O
gui	O
display	O
seen	O
in	O
figure	O
interactive	O
command	O
line	O
use	O
of	O
weka	B
we	O
will	O
run	O
the	O
same	O
problem	O
as	O
in	O
the	O
previous	O
section	O
and	O
discuss	O
the	O
sections	O
of	O
the	O
output	O
report	O
java	O
stock	O
training	O
data	O
arff	O
pruned	O
tree	O
percent	O
change	O
from	O
day	O
low	O
percent	O
change	O
since	O
open	O
sell	O
percent	O
change	O
since	O
open	O
hold	O
percent	O
change	O
from	O
day	O
low	O
buy	O
number	O
of	O
leaves	O
size	O
of	O
the	O
tree	O
the	O
generated	O
decision	O
tree	O
can	O
be	O
described	O
in	O
english	O
as	O
if	O
the	O
percent	O
change	O
of	O
a	O
stock	O
from	O
the	O
day	O
low	O
is	O
less	O
than	O
or	O
equal	O
to	O
then	O
if	O
the	O
percent	O
change	O
since	O
the	O
open	O
is	O
less	O
than	O
then	O
sell	O
the	O
stock	O
otherwise	O
keep	O
it	O
if	O
the	O
percent	O
change	O
from	O
the	O
day	O
low	O
is	O
greater	O
than	O
then	O
purchase	O
more	O
shares	O
time	O
taken	O
to	O
build	O
model	O
seconds	O
time	O
taken	O
to	O
test	O
model	O
on	O
training	O
data	O
seconds	O
error	O
on	O
training	O
data	O
correctly	O
classified	O
instances	O
incorrectly	O
classified	O
instances	O
kappa	O
statistic	O
mean	O
absolute	O
error	O
root	O
mean	O
squared	O
error	O
interactive	O
command	O
line	O
use	O
of	O
weka	B
relative	O
absolute	O
error	O
root	O
relative	O
squared	O
error	O
total	O
number	O
of	O
instances	O
this	O
output	O
shows	O
results	O
for	O
testing	O
on	O
the	O
original	O
training	O
data	O
so	O
the	O
classification	O
is	O
perfect	O
in	O
practice	O
you	O
will	O
test	O
on	O
separate	O
data	O
sets	O
confusion	O
matrix	O
classified	O
as	O
a	O
b	O
c	O
a	O
buy	O
b	O
sell	O
c	O
hold	O
the	O
confusion	O
matrix	O
shows	O
the	O
prediction	O
for	O
each	O
data	O
sample	O
here	O
we	O
see	O
the	O
original	O
data	O
buy	O
three	O
sell	O
and	O
three	O
hold	O
samples	O
the	O
following	O
output	O
shows	O
random	O
sampling	O
testing	O
stratified	O
cross-validation	O
correctly	O
classified	O
instances	O
incorrectly	O
classified	O
instances	O
kappa	O
statistic	O
mean	O
absolute	O
error	O
root	O
mean	O
squared	O
error	O
relative	O
absolute	O
error	O
root	O
relative	O
squared	O
error	O
total	O
number	O
of	O
instances	O
with	O
random	O
sampling	O
we	O
see	O
in	O
the	O
confusion	O
matrix	O
that	O
the	O
three	O
buy	O
recommendations	O
are	O
still	O
perfect	O
but	O
that	O
both	O
of	O
the	O
sell	O
recommendations	O
are	O
wrong	O
one	O
buy	O
and	O
two	O
holds	O
and	O
that	O
two	O
of	O
what	O
should	O
have	O
been	O
hold	O
recommendations	O
are	O
buy	O
recommendations	O
confusion	O
matrix	O
classified	O
as	O
a	O
b	O
c	O
a	O
buy	O
b	O
sell	O
c	O
hold	O
machine	B
learning	I
with	O
weka	B
embedding	O
weka	B
in	O
a	O
java	O
application	O
the	O
example	O
in	O
this	O
section	O
is	O
partially	O
derived	O
from	O
documentation	O
at	O
the	O
web	O
site	O
httpweka	O
sourceforge	O
netwiki	O
this	O
example	O
loads	O
the	O
training	O
arff	O
data	O
file	O
seen	O
at	O
the	O
beginning	O
of	O
this	O
chapter	O
and	O
loads	O
a	O
similar	O
arff	O
file	O
for	O
testing	O
that	O
is	O
equivalent	O
to	O
the	O
original	O
training	O
file	O
except	O
that	O
small	O
random	O
changes	O
have	O
been	O
made	O
to	O
the	O
numeric	O
attribute	O
values	O
in	O
all	O
samples	O
a	O
decision	O
tree	O
model	O
is	O
trained	O
and	O
tested	O
on	O
the	O
new	O
test	O
arff	O
data	O
import	O
weka	B
classifiers	O
meta	O
filteredclassifier	O
import	O
import	O
weka	B
core	O
instances	O
import	O
weka	B
filters	O
unsupervised	O
attribute	O
remove	O
import	O
java	O
io	O
bufferedreader	O
import	O
java	O
io	O
filenotfoundexception	O
import	O
java	O
io	O
filereader	O
import	O
java	O
io	O
ioexception	O
public	O
class	O
wekastocks	O
public	O
static	O
void	O
mainstring	O
args	O
throws	O
exception	O
we	O
start	O
by	O
creating	O
a	O
new	O
training	O
instance	O
by	O
supplying	O
a	O
reader	O
for	O
the	O
stock	O
training	O
arff	O
file	O
and	O
setting	O
the	O
number	O
of	O
attributes	O
to	O
use	O
instances	O
training	O
data	O
new	O
instances	O
new	O
bufferedreader	O
new	O
filereader	O
training	O
data	O
setclassindex	O
training	O
data	O
numattributes	O
we	O
want	O
to	O
test	O
with	O
separate	O
data	O
so	O
we	O
open	O
a	O
separate	O
examples	O
arff	O
file	O
to	O
test	O
against	O
instances	O
testing	O
data	O
new	O
instances	O
new	O
bufferedreader	O
new	O
filereader	O
testing	O
data	O
setclassindex	O
training	O
data	O
numattributes	O
embedding	O
weka	B
in	O
a	O
java	O
application	O
the	O
method	O
tosummarystring	O
prints	O
a	O
summary	O
of	O
a	O
set	O
of	O
training	O
or	O
testing	O
instances	O
string	O
summary	O
training	O
data	O
tosummarystring	O
int	O
number	O
samples	O
training	O
data	O
numinstances	O
int	O
number	O
attributes	O
per	O
sample	O
training	O
data	O
numattributes	O
system	O
out	O
println	O
of	O
attributes	O
in	O
model	O
number	O
attributes	O
per	O
sample	O
system	O
out	O
println	O
of	O
samples	O
number	O
samples	O
system	O
out	O
printlnsummary	O
summary	O
system	O
out	O
println	O
now	O
we	O
create	O
a	O
new	O
classifier	O
classifier	O
in	O
this	O
case	O
and	O
we	O
see	O
how	O
to	O
optionally	O
filter	O
samples	O
we	O
build	O
a	O
classifier	O
using	O
the	O
training	O
data	O
and	O
then	O
test	O
it	O
using	O
the	O
separate	O
test	O
data	O
set	O
a	O
classifier	O
for	O
decision	O
trees	O
new	O
filter	O
for	O
removing	O
samples	O
remove	O
rm	O
new	O
remove	O
remove	O
first	O
attribute	O
filtered	O
classifier	O
filteredclassifier	O
fc	O
new	O
filteredclassifier	O
fc	O
setfilterrm	O
train	O
using	O
stock	O
training	O
data	O
arff	O
fc	O
buildclassifiertraining	O
data	O
test	O
using	O
stock	O
testing	O
data	O
arff	O
for	O
i	O
i	O
testing	O
data	O
numinstances	O
i	O
double	O
pred	O
fc	O
classifyinstancetesting	O
data	O
instancei	O
system	O
out	O
printgiven	O
value	O
testing	O
data	O
classattribute	O
valueinttesting	O
data	O
instancei	O
classvalue	O
system	O
out	O
println	O
predicted	O
value	O
machine	B
learning	I
with	O
weka	B
testing	O
data	O
classattribute	O
valueintpred	O
this	O
example	O
program	O
produces	O
the	O
following	O
output	O
output	O
not	O
shown	O
due	O
to	O
page	O
width	O
limits	O
number	O
of	O
attributes	O
in	O
model	O
number	O
of	O
samples	O
summary	O
relation	O
name	O
stock	O
num	O
instances	O
num	O
attributes	O
name	O
type	O
percent	O
change	O
since	O
open	O
num	O
percent	O
change	O
from	O
day	O
l	O
num	O
percent	O
change	O
from	O
day	O
h	O
num	O
action	O
nom	O
nom	O
int	O
real	O
given	O
value	O
hold	O
predicted	O
value	O
hold	O
given	O
value	O
sell	O
predicted	O
value	O
sell	O
given	O
value	O
buy	O
predicted	O
value	O
buy	O
given	O
value	O
hold	O
predicted	O
value	O
buy	O
given	O
value	O
sell	O
predicted	O
value	O
sell	O
given	O
value	O
buy	O
predicted	O
value	O
buy	O
given	O
value	O
hold	O
predicted	O
value	O
hold	O
given	O
value	O
sell	O
predicted	O
value	O
buy	O
given	O
value	O
buy	O
predicted	O
value	O
buy	O
suggestions	O
for	O
further	O
study	O
weka	B
is	O
well	O
documented	O
in	O
the	O
book	O
data	O
mining	O
practical	O
machine	B
learning	I
tools	O
and	O
techniques	O
second	O
edition	O
h	O
witten	O
eibe	O
frank	O
additional	O
documentation	O
can	O
be	O
found	O
at	O
weka	B
sourceforge	O
netwikiindex	O
php	O
statistical	O
natural	O
language	O
processing	O
we	O
will	O
cover	O
a	O
wide	O
variety	O
of	O
techniques	O
for	O
processing	O
text	O
in	O
this	O
chapter	O
the	O
part	O
of	O
speech	O
tagger	O
text	O
categorization	O
clustering	O
spelling	B
and	O
entity	O
extraction	O
examples	O
are	O
all	O
derived	O
from	O
either	O
my	O
open	O
source	O
projects	O
or	O
my	O
commercial	O
projects	O
i	O
wrote	O
the	O
markov	O
model	O
example	O
code	O
for	O
an	O
earlier	O
edition	O
of	O
this	O
book	O
i	O
am	O
not	O
offering	O
you	O
a	O
very	O
formal	O
view	O
of	O
statistical	O
natural	O
language	O
processing	O
in	O
this	O
chapter	O
rather	O
i	O
collected	O
java	O
code	O
that	O
i	O
have	O
been	O
using	O
for	O
years	O
on	O
various	O
projects	O
and	O
simplified	O
it	O
to	O
make	O
it	O
easier	O
for	O
you	O
to	O
understand	O
and	O
modify	O
for	O
your	O
own	O
use	O
the	O
web	O
site	O
httpnlp	O
stanford	O
edulinksstatnlp	O
html	O
is	O
an	O
excellent	O
resource	O
for	O
both	O
papers	O
when	O
you	O
need	O
more	O
theory	O
and	O
additional	O
software	O
for	O
statistical	O
natural	O
language	O
processing	O
for	O
python	O
programmers	O
i	O
can	O
recommend	O
the	O
statistical	B
nlp	I
toolkit	O
nltk	O
that	O
includes	O
an	O
online	O
book	O
and	O
is	O
licensed	O
using	O
the	O
gpl	O
tokenizing	O
stemming	O
and	O
part	O
of	O
speech	O
tagging	B
text	O
tokenizing	O
text	O
is	O
the	O
process	O
of	O
splitting	O
a	O
string	O
containing	O
text	O
into	O
individual	O
tokens	O
stemming	O
is	O
the	O
reduction	O
of	O
words	O
to	O
abbreviated	O
word	O
roots	O
that	O
allow	O
for	O
easy	O
comparison	O
for	O
equality	O
of	O
similar	O
words	O
tagging	B
is	O
identifying	O
what	O
part	O
of	O
speech	O
each	O
word	O
is	O
in	O
input	O
text	O
tagging	B
is	O
complicated	O
by	O
many	O
words	O
having	O
different	O
parts	O
of	O
speech	O
depending	O
on	O
context	O
bank	O
the	O
airplane	O
the	O
river	O
bank	O
etc	O
you	O
can	O
find	O
the	O
code	O
in	O
this	O
section	O
in	O
the	O
code	O
zip	O
file	O
for	O
this	O
book	O
in	O
the	O
files	O
srccomknowledgebooksnlpfasttagfasttag	O
java	O
and	O
srccomknowledgebooksnlputiltokenizer	O
java	O
the	O
required	O
data	O
files	O
are	O
in	O
the	O
directory	O
test	O
data	O
in	O
the	O
files	O
lexicon	O
txt	O
processing	O
english	O
text	O
and	O
lexicon	O
medpost	O
txt	O
processing	O
medical	O
text	O
the	O
fasttag	O
project	O
can	O
also	O
be	O
found	O
on	O
my	O
open	O
source	O
web	O
page	O
httpwww	O
markwatson	O
comopensource	O
we	O
will	O
also	O
look	O
at	O
a	O
public	O
domain	O
word	O
stemmer	O
that	O
i	O
frequently	O
use	O
in	O
this	O
statistical	O
natural	O
language	O
processing	O
section	O
before	O
we	O
can	O
process	O
any	O
text	O
we	O
need	O
to	O
break	O
text	O
into	O
individual	O
tokens	O
tokens	O
can	O
be	O
words	O
numbers	O
and	O
punctuation	O
symbols	O
the	O
class	O
t	O
okenizer	O
has	O
two	O
static	O
methods	O
both	O
take	O
an	O
input	O
string	O
to	O
tokenize	B
and	O
return	O
a	O
list	O
of	O
token	O
strings	O
the	O
second	O
method	O
has	O
an	O
extra	O
argument	O
to	O
specify	O
the	O
maximum	O
number	O
of	O
tokens	O
that	O
you	O
want	O
returned	O
static	O
public	O
liststring	O
wordstoliststring	O
s	O
static	O
public	O
liststring	O
wordstoliststring	O
s	O
int	O
maxr	O
the	O
following	O
listing	O
shows	O
a	O
fragment	O
of	O
example	O
code	O
using	O
this	O
class	O
with	O
the	O
output	O
string	O
text	O
ball	O
rolling	O
quickly	O
went	O
down	O
the	O
hill	O
liststring	O
tokens	O
tokenizer	O
wordstolisttext	O
system	O
out	O
printlntext	O
for	O
token	O
tokens	O
system	O
out	O
printtoken	O
system	O
out	O
println	O
this	O
code	O
fragment	O
produces	O
the	O
following	O
output	O
the	O
ball	O
rolling	O
quickly	O
went	O
down	O
the	O
hill	O
for	O
many	O
applications	O
it	O
is	O
better	O
to	O
stem	O
word	O
tokens	O
to	O
simplify	O
comparison	O
of	O
similar	O
words	O
for	O
example	O
run	O
runs	O
and	O
running	O
all	O
stem	O
to	O
run	O
the	O
stemmer	O
that	O
we	O
will	O
use	O
which	O
i	O
believe	O
to	O
be	O
in	O
the	O
public	O
domain	O
is	O
in	O
the	O
file	O
srcpublic	O
domainstemmer	O
java	O
there	O
are	O
two	O
convenient	O
apis	O
defined	O
at	O
the	O
end	O
of	O
the	O
class	O
one	O
to	O
stem	O
a	O
string	O
of	O
multiple	O
words	O
and	O
one	O
to	O
stem	O
a	O
single	O
word	O
token	O
public	O
liststring	O
stemstringstring	O
str	O
public	O
string	O
stemonewordstring	O
word	O
we	O
will	O
use	O
both	O
the	O
f	O
astt	O
ag	O
and	O
stemmer	O
classes	O
often	O
in	O
the	O
remainder	O
of	O
this	O
chapter	O
tokenizing	O
stemming	O
and	O
part	O
of	O
speech	O
tagging	B
text	O
the	O
fasttag	O
project	O
resulted	O
from	O
my	O
using	O
the	O
excellent	O
tagger	O
written	O
by	O
eric	O
brill	O
while	O
he	O
was	O
at	O
the	O
university	O
of	O
pennsylvania	O
he	O
used	O
machine	B
learning	I
techniques	O
to	O
learn	O
transition	O
rules	O
for	O
tagging	B
text	O
using	O
manually	O
tagged	O
text	O
as	O
training	O
examples	O
in	O
reading	O
through	O
his	O
doctoral	O
thesis	O
i	O
noticed	O
that	O
there	O
were	O
a	O
few	O
transition	O
rules	O
that	O
covered	O
most	O
of	O
the	O
cases	O
and	O
i	O
implemented	O
a	O
simple	O
fast	O
tagger	O
in	O
common	O
lisp	O
ruby	O
scheme	O
and	O
java	O
the	O
java	O
version	O
is	O
in	O
the	O
file	O
srccomknowledgebooksnlpfasttagfasttag	O
java	O
the	O
file	O
srccomknowledgebooksnlpfasttagreadme	O
txt	O
contains	O
information	O
on	O
where	O
to	O
obtain	O
eric	O
brill	O
s	O
original	O
tagging	B
system	O
and	O
also	O
defines	O
the	O
tags	O
for	O
both	O
his	O
english	O
language	O
lexicon	O
and	O
the	O
medpost	O
lexicon	O
table	O
shows	O
the	O
most	O
commonly	O
used	O
tags	O
the	O
readme	O
txt	O
file	O
for	O
a	O
complete	O
description	O
tag	O
nn	O
nns	O
nnp	O
nnps	O
cc	O
cd	O
dt	O
in	O
jj	O
jjr	O
jjs	O
pp	O
rb	O
rbr	O
rp	O
vb	O
vbn	O
vbg	O
vbz	O
wp	O
wdt	O
description	O
singular	O
noun	O
plural	O
noun	O
singular	O
proper	O
noun	O
plural	O
proper	O
noun	O
conjunction	O
cardinal	O
number	O
determiner	O
preposition	O
adjective	O
comparative	O
adjective	O
superlative	O
adjective	O
proper	O
pronoun	O
adverb	O
comparative	O
adverb	O
particle	O
verb	O
past	O
participle	O
verb	O
gerund	O
verb	O
present	O
verb	O
wh	O
pronoun	O
wh	O
determiner	O
examples	O
dog	O
dogs	O
california	O
watsons	O
and	O
but	O
or	O
one	O
two	O
the	O
some	O
of	O
in	O
by	O
large	O
small	O
green	O
bigger	O
biggest	O
i	O
he	O
you	O
slowly	O
slowest	O
up	O
off	O
eat	O
eaten	O
eating	O
eats	O
who	O
what	O
which	O
that	O
table	O
most	O
commonly	O
used	O
part	O
of	O
speech	O
tags	O
brill	O
s	O
system	O
worked	O
by	O
processing	O
manually	O
tagged	O
text	O
and	O
then	O
creating	O
a	O
list	O
of	O
words	O
followed	O
by	O
the	O
tags	O
found	O
for	O
each	O
word	O
here	O
are	O
a	O
few	O
random	O
lines	O
selected	O
from	O
the	O
test	O
datalexicon	O
txt	O
file	O
arco	O
nnp	O
arctic	O
nnp	O
jj	O
fair	O
jj	O
nn	O
rb	O
statistical	O
natural	O
language	O
processing	O
here	O
arco	O
is	O
a	O
proper	O
noun	O
because	O
it	O
is	O
the	O
name	O
of	O
a	O
corporation	O
the	O
word	O
arctic	O
can	O
be	O
either	O
a	O
proper	O
noun	O
or	O
an	O
adjective	O
it	O
is	O
used	O
most	O
frequently	O
as	O
a	O
proper	O
noun	O
so	O
the	O
tag	O
nnp	O
is	O
listed	O
before	O
jj	O
the	O
word	O
fair	O
can	O
be	O
an	O
adjective	O
singular	O
noun	O
or	O
an	O
adverb	O
the	O
class	O
t	O
agger	O
reads	O
the	O
file	O
lexicon	O
either	O
as	O
a	O
resource	O
stream	O
for	O
example	O
you	O
put	O
lexicon	O
txt	O
in	O
the	O
same	O
jar	O
file	O
as	O
the	O
compiled	O
t	O
agger	O
and	O
t	O
okenizer	O
class	O
files	O
or	O
as	O
a	O
local	O
file	O
each	O
line	O
in	O
the	O
lexicon	O
txt	O
file	O
is	O
passed	O
through	O
the	O
utility	O
method	O
parseline	O
that	O
processes	O
an	O
input	O
string	O
using	O
the	O
first	O
token	O
in	O
the	O
line	O
as	O
a	O
hash	O
key	O
and	O
places	O
the	O
remaining	O
tokens	O
in	O
an	O
array	O
that	O
is	O
the	O
hash	O
value	O
so	O
we	O
would	O
process	O
the	O
line	O
fair	O
jj	O
nn	O
rb	O
as	O
a	O
hash	O
key	O
of	O
fair	O
and	O
the	O
hash	O
value	O
would	O
be	O
the	O
array	O
of	O
strings	O
the	O
first	O
value	O
is	O
currently	O
used	O
but	O
i	O
keep	O
the	O
other	O
values	O
for	O
future	O
use	O
when	O
the	O
tagger	O
is	O
processing	O
a	O
list	O
of	O
word	O
tokens	O
it	O
looks	O
each	O
token	O
up	O
in	O
the	O
hash	O
table	O
and	O
stores	O
the	O
first	O
possible	O
tag	O
type	O
for	O
the	O
word	O
in	O
our	O
example	O
the	O
word	O
fair	O
would	O
be	O
assigned	O
temporarily	O
the	O
tag	O
jj	O
we	O
now	O
have	O
a	O
list	O
of	O
word	O
tokens	O
and	O
an	O
associated	O
list	O
of	O
possible	O
tag	O
types	O
we	O
now	O
loop	O
through	O
all	O
of	O
the	O
word	O
tokens	O
applying	O
eight	O
transition	O
rules	O
that	O
eric	O
brill	O
s	O
system	O
learned	O
we	O
will	O
look	O
at	O
the	O
first	O
rule	O
in	O
some	O
detail	O
i	O
is	O
the	O
loop	O
variable	O
in	O
the	O
range	O
number	O
of	O
word	O
tokens	O
and	O
word	O
is	O
the	O
current	O
word	O
at	O
index	O
i	O
rule	O
dt	O
vbp	O
dt	O
nn	O
if	O
ret	O
geti	O
if	O
word	O
equalsvbp	O
word	O
equalsvb	O
ret	O
seti	O
in	O
english	O
this	O
rule	O
states	O
that	O
if	O
a	O
determiner	O
at	O
word	O
token	O
index	O
i	O
is	O
followed	O
by	O
either	O
a	O
past	O
tense	O
verb	O
or	O
a	O
present	O
tense	O
verb	O
then	O
replace	O
the	O
tag	O
type	O
at	O
index	O
i	O
with	O
nn	O
i	O
list	O
the	O
remaining	O
seven	O
rules	O
in	O
a	O
short	O
syntax	O
here	O
and	O
you	O
can	O
look	O
at	O
the	O
java	O
source	O
code	O
to	O
see	O
how	O
they	O
are	O
implemented	O
rule	O
convert	O
a	O
noun	O
to	O
a	O
number	O
if	O
appears	O
in	O
the	O
word	O
rule	O
convert	O
a	O
noun	O
to	O
a	O
past	O
participle	O
if	O
named	B
entity	I
extraction	I
from	O
text	O
words	O
geti	O
ends	O
with	O
rule	O
convert	O
any	O
type	O
to	O
adverb	O
if	O
it	O
ends	O
in	O
rule	O
convert	O
a	O
common	O
noun	O
or	O
nns	O
to	O
an	O
adjective	O
if	O
it	O
ends	O
with	O
rule	O
convert	O
a	O
noun	O
to	O
a	O
verb	O
if	O
the	O
preceding	O
work	O
is	O
rule	O
if	O
a	O
word	O
has	O
been	O
categorized	O
as	O
a	O
common	O
anoun	O
nd	O
it	O
ends	O
with	O
then	O
set	O
its	O
type	O
to	O
plural	O
common	O
noun	O
rule	O
convert	O
a	O
common	O
noun	O
to	O
a	O
present	O
participle	O
verb	O
a	O
gerund	O
my	O
fasttag	O
tagger	O
is	O
not	O
quite	O
as	O
accurate	O
as	O
brill	O
s	O
original	O
tagger	O
so	O
you	O
might	O
want	O
to	O
use	O
his	O
system	O
written	O
in	O
c	O
but	O
which	O
can	O
be	O
executed	O
from	O
java	O
as	O
an	O
external	O
process	O
or	O
with	O
a	O
jni	O
interface	O
in	O
the	O
next	O
section	O
we	O
will	O
use	O
the	O
tokenizer	O
stemmer	O
and	O
tagger	O
from	O
this	O
section	O
to	O
develop	O
a	O
system	O
for	O
identifying	O
named	O
entities	O
in	O
text	O
named	B
entity	I
extraction	I
from	O
text	O
in	O
this	O
section	O
we	O
will	O
look	O
at	O
identifying	O
names	O
of	O
people	O
and	O
places	O
in	O
text	O
this	O
can	O
be	O
useful	O
for	O
automatically	O
tagging	B
news	O
articles	O
with	O
the	O
people	O
and	O
place	O
names	O
that	O
occur	O
in	O
the	O
articles	O
the	O
secret	O
sauce	O
for	O
identifying	O
names	O
and	O
places	O
in	O
text	O
is	O
the	O
data	O
in	O
the	O
file	O
test	O
datapropername	O
ser	O
a	O
serialized	O
java	O
data	O
file	O
containing	O
hash	O
tables	O
for	O
human	O
and	O
place	O
names	O
this	O
data	O
is	O
read	O
in	O
the	O
constructor	O
for	O
the	O
class	O
n	O
ames	O
it	O
is	O
worthwhile	O
looking	O
at	O
the	O
code	O
if	O
you	O
have	O
not	O
used	O
the	O
java	O
serialization	O
apis	O
before	O
objectinputstream	O
p	O
new	O
objectinputstreamins	O
hashtable	O
lastnamehash	O
p	O
readobject	O
hashtable	O
firstnamehash	O
p	O
readobject	O
hashtable	O
placenamehash	O
p	O
readobject	O
hashtable	O
prefixhash	O
p	O
readobject	O
if	O
you	O
want	O
to	O
see	O
these	O
data	O
values	O
use	O
code	O
like	O
while	O
object	O
key	O
keyse	O
nextelement	O
system	O
out	O
printlnkey	O
placenamehash	O
getkey	O
statistical	O
natural	O
language	O
processing	O
to	O
see	O
data	O
values	O
like	O
the	O
following	O
mauritius	O
country	O
port-vila	O
country	O
capital	O
hutchinson	O
us	O
city	O
mississippi	O
us	O
state	O
lithuania	O
country	O
before	O
we	O
look	O
at	O
the	O
entity	O
extraction	O
code	O
and	O
how	O
it	O
works	O
we	O
will	O
first	O
look	O
at	O
an	O
example	O
of	O
using	O
the	O
main	O
apis	O
for	O
the	O
n	O
ames	O
class	O
the	O
following	O
example	O
uses	O
the	O
methods	O
isp	O
lacen	O
ame	O
ishumann	O
ame	O
and	O
getp	O
ropern	O
ames	O
system	O
out	O
printlnlos	O
angeles	O
names	O
isplacenamelos	O
angeles	O
system	O
out	O
printlnpresident	O
bush	O
names	O
ishumannamepresident	O
bush	O
system	O
out	O
printlnpresident	O
george	O
bush	O
names	O
ishumannamepresident	O
george	O
bush	O
system	O
out	O
printlnpresident	O
george	O
w	O
bush	O
names	O
ishumannamepresident	O
george	O
w	O
bush	O
scoredlist	O
ret	O
names	O
getpropernames	O
bush	O
played	O
golf	O
president	O
george	O
w	O
bush	O
went	O
to	O
london	O
england	O
and	O
mexico	O
to	O
see	O
mary	O
smith	O
in	O
moscow	O
president	O
bush	O
will	O
return	O
home	O
monday	O
system	O
out	O
printlnhuman	O
names	O
system	O
out	O
printlnplace	O
names	O
the	O
output	O
from	O
running	O
this	O
example	O
is	O
los	O
angeles	O
true	O
president	O
bush	O
true	O
president	O
george	O
bush	O
true	O
president	O
george	O
w	O
bush	O
true	O
place	O
name	O
london	O
placenamehash	O
getname	O
country	O
capital	O
place	O
name	O
mexico	O
placenamehash	O
getname	O
country	O
capital	O
place	O
name	O
moscow	O
named	B
entity	I
extraction	I
from	O
text	O
placenamehash	O
getname	O
country	O
capital	O
human	O
names	O
george	O
president	O
george	O
w	O
mary	O
president	O
place	O
names	O
the	O
complete	O
implementation	O
that	O
you	O
can	O
read	O
through	O
in	O
the	O
source	O
file	O
extractnames	O
java	O
is	O
reasonably	O
simple	O
the	O
methods	O
ishumann	O
ame	O
and	O
isp	O
lacen	O
ame	O
simply	O
look	O
up	O
a	O
string	O
in	O
either	O
of	O
the	O
human	O
or	O
place	O
name	O
hash	O
tables	O
for	O
testing	O
a	O
single	O
word	O
this	O
is	O
very	O
easy	O
for	O
example	O
public	O
boolean	O
isplacenamestring	O
name	O
return	O
placenamehash	O
getname	O
null	O
the	O
versions	O
of	O
these	O
apis	O
that	O
handle	O
names	O
containing	O
multiple	O
words	O
are	O
just	O
a	O
little	O
more	O
complicated	O
we	O
need	O
to	O
construct	O
a	O
string	O
from	O
the	O
words	O
between	O
the	O
starting	O
and	O
ending	O
indices	O
and	O
test	O
to	O
see	O
if	O
this	O
new	O
string	O
value	O
is	O
a	O
valid	O
key	O
in	O
the	O
human	O
names	O
or	O
place	O
names	O
hash	O
tables	O
here	O
is	O
the	O
code	O
for	O
finding	O
multi-word	O
place	O
names	O
public	O
boolean	O
isplacenameliststring	O
words	O
if	O
numwords	O
words	O
size	O
int	O
startindex	O
int	O
numwords	O
return	O
false	O
if	O
return	O
isplacenamewords	O
getstartindex	O
string	O
s	O
for	O
istartindex	O
istartindex	O
numwords	O
i	O
if	O
numwords	O
s	O
s	O
words	O
getstartindex	O
else	O
s	O
s	O
words	O
getstartindex	O
return	O
isplacenames	O
statistical	O
natural	O
language	O
processing	O
this	O
same	O
scheme	O
is	O
used	O
to	O
test	O
for	O
multi-word	O
human	O
names	O
the	O
top-level	O
utility	O
method	O
getp	O
ropern	O
ames	O
is	O
used	O
to	O
find	O
human	O
and	O
place	O
names	O
in	O
text	O
the	O
code	O
in	O
getp	O
ropern	O
ames	O
is	O
intentionally	O
easy	O
to	O
understand	O
but	O
not	O
very	O
efficient	O
because	O
of	O
all	O
of	O
the	O
temporary	O
test	O
strings	O
that	O
need	O
to	O
be	O
constructed	O
using	O
the	O
wordnet	B
linguistic	O
database	O
the	O
home	O
page	O
for	O
the	O
wordnet	B
project	O
is	O
httpwordnet	O
princeton	O
edu	O
and	O
you	O
will	O
need	O
to	O
download	O
version	O
and	O
install	O
it	O
on	O
your	O
computer	O
to	O
use	O
the	O
example	O
programs	O
in	O
this	O
section	O
and	O
in	O
chapter	O
as	O
you	O
can	O
see	O
on	O
the	O
wordnet	B
web	O
site	O
there	O
are	O
several	O
java	O
libraries	O
for	O
accessing	O
the	O
wordnet	B
data	O
files	O
we	O
will	O
use	O
the	O
jaws	O
library	O
written	O
by	O
brett	O
spell	O
as	O
a	O
student	O
project	O
at	O
the	O
southern	O
methodist	O
university	O
i	O
include	O
brett	O
s	O
library	O
and	O
the	O
example	O
programs	O
for	O
this	O
section	O
in	O
the	O
directory	O
src-jaws-wordnet	O
in	O
the	O
zip	O
file	O
for	O
this	O
book	O
tutorial	O
on	O
wordnet	B
the	O
wordnet	B
lexical	O
database	O
is	O
an	O
ongoing	O
research	O
project	O
that	O
includes	O
many	O
man	O
years	O
of	O
effort	O
by	O
professional	O
linguists	O
my	O
own	O
use	O
of	O
wordnet	B
over	O
the	O
last	O
ten	O
years	O
has	O
been	O
simple	O
mainly	O
using	O
the	O
database	O
to	O
determine	O
synonyms	O
synsets	O
in	O
wordnet	B
and	O
looking	O
at	O
the	O
possible	O
parts	O
of	O
speech	O
of	O
words	O
for	O
reference	O
taken	O
from	O
the	O
wikipedia	O
article	O
on	O
wordnet	B
here	O
is	O
a	O
small	O
subset	O
of	O
the	O
type	O
of	O
relationships	O
contained	O
in	O
wordnet	B
for	O
verbs	O
shown	O
by	O
examples	O
from	O
the	O
wikipedia	O
article	O
hypernym	O
travel	O
general	O
is	O
an	O
hypernym	O
of	O
movement	O
general	O
entailment	O
to	O
sleep	O
is	O
entailed	O
by	O
to	O
snore	O
because	O
you	O
must	O
be	O
asleep	O
to	O
snore	O
here	O
are	O
a	O
few	O
of	O
the	O
relations	O
supported	O
for	O
nouns	O
hypernyms	O
canine	O
is	O
a	O
hypernym	O
of	O
dog	O
since	O
every	O
dog	O
is	O
of	O
type	O
canine	O
hyponyms	O
dog	O
general	O
is	O
a	O
hyponym	O
of	O
canine	O
general	O
holonym	O
building	O
is	O
a	O
holonym	O
of	O
window	O
because	O
a	O
window	O
is	O
part	O
of	O
a	O
building	O
meronym	O
window	O
is	O
a	O
meronym	O
of	O
building	O
because	O
a	O
window	O
is	O
part	O
of	O
a	O
building	O
some	O
of	O
the	O
related	O
information	O
maintained	O
for	O
adjectives	O
is	O
related	O
nouns	O
similar	O
to	O
using	O
the	O
wordnet	B
linguistic	O
database	O
i	O
find	O
the	O
wordnet	B
book	O
an	O
electronic	O
lexical	O
database	O
speech	O
and	O
communication	O
by	O
christiane	O
fellbaum	O
to	O
be	O
a	O
detailed	O
reference	O
for	O
wordnet	B
but	O
there	O
have	O
been	O
several	O
new	O
releases	O
of	O
wordnet	B
since	O
the	O
book	O
was	O
published	O
the	O
wordnet	B
site	O
and	O
the	O
wikipedia	O
article	O
on	O
wordnet	B
are	O
also	O
good	O
sources	O
of	O
information	O
if	O
you	O
decide	O
to	O
make	O
wordnet	B
part	O
of	O
your	O
toolkit	O
httpwordnet	O
princeton	O
edu	O
httpen	O
wikipedia	O
orgwikiwordnet	O
we	O
will	O
brett	O
s	O
open	O
source	O
java	O
wordnet	B
utility	O
library	O
in	O
the	O
next	O
section	O
to	O
experiment	O
with	O
wordnet	B
there	O
are	O
also	O
good	O
open	O
source	O
client	O
applications	O
for	O
browsing	O
the	O
wordnet	B
lexical	O
database	O
that	O
are	O
linked	O
on	O
the	O
wordnet	B
web	O
site	O
example	O
use	O
of	O
the	O
jaws	O
wordnet	B
library	O
assuming	O
that	O
you	O
have	O
downloaded	O
and	O
installed	O
wordnet	B
on	O
your	O
computer	O
if	O
you	O
look	O
at	O
the	O
data	O
files	O
themselves	O
you	O
will	O
notice	O
that	O
the	O
data	O
is	O
divided	O
into	O
index	O
and	O
data	O
files	O
for	O
different	O
data	O
types	O
the	O
jaws	O
library	O
other	O
wordnet	B
client	O
libraries	O
for	O
many	O
programming	O
languages	O
provides	O
a	O
useful	O
view	O
and	O
convenient	O
access	O
to	O
the	O
wordnet	B
data	O
you	O
will	O
need	O
to	O
define	O
a	O
java	O
property	O
for	O
the	O
location	O
of	O
the	O
raw	O
wordnet	B
data	O
files	O
in	O
order	O
to	O
use	O
jaws	O
on	O
my	O
system	O
i	O
set	O
the	O
example	O
class	O
w	O
ordn	O
ett	O
est	O
finds	O
the	O
different	O
word	O
senses	O
for	O
a	O
given	O
word	O
and	O
prints	O
this	O
data	O
to	O
standard	O
output	O
we	O
will	O
tweak	O
this	O
code	O
slightly	O
in	O
the	O
next	O
section	O
where	O
we	O
will	O
be	O
combining	O
wordnet	B
with	O
a	O
part	O
of	O
speech	O
tagger	O
in	O
another	O
example	O
program	O
accessing	O
wordnet	B
data	O
using	O
brett	O
s	O
library	O
is	O
easy	O
so	O
we	O
will	O
spend	O
more	O
time	O
actually	O
looking	O
at	O
the	O
wordnet	B
data	O
itself	O
here	O
is	O
a	O
sample	O
program	O
that	O
shows	O
how	O
to	O
use	O
the	O
apis	O
the	O
class	O
constructor	O
makes	O
a	O
connection	O
to	O
the	O
wordnet	B
data	O
files	O
for	O
reuse	O
public	O
class	O
wordnettest	O
public	O
wordnettest	O
database	O
wordnetdatabase	O
getfileinstance	O
here	O
i	O
wrap	O
a	O
jaws	O
utility	O
method	O
to	O
return	O
lists	O
of	O
synsets	O
instead	O
of	O
raw	O
java	O
arrays	O
statistical	O
natural	O
language	O
processing	O
public	O
listsynset	O
getsynsetsstring	O
word	O
return	O
arrays	O
aslistdatabase	O
getsynsetsword	O
public	O
static	O
void	O
mainstring	O
args	O
the	O
constant	O
p	O
ropertyn	O
ames	O
dat	O
abase	O
direct	O
ory	O
is	O
equal	O
to	O
wordnet	B
database	O
dir	O
it	O
is	O
a	O
good	O
idea	O
to	O
make	O
sure	O
that	O
you	O
have	O
this	O
java	O
property	O
set	O
if	O
the	O
value	O
prints	O
as	O
null	O
then	O
either	O
fix	O
the	O
way	O
you	O
set	O
java	O
properties	O
or	O
just	O
set	O
it	O
explicitly	O
system	O
setpropertypropertynames	O
database	O
directory	O
wordnettest	O
tester	O
new	O
wordnettest	O
string	O
word	O
listsynset	O
synset	O
list	O
tester	O
getsynsetsword	O
system	O
out	O
printlnnn	O
process	O
word	O
word	O
for	O
synset	O
synset	O
list	O
system	O
out	O
printlnnsynset	O
type	O
synset	O
typessynset	O
gettype	O
getcode	O
system	O
out	O
println	O
definition	O
synset	O
getdefinition	O
word	O
forms	O
are	O
synonyms	O
for	O
wordform	O
synset	O
getwordforms	O
if	O
system	O
out	O
println	O
synonym	O
wordform	O
antonyms	O
are	O
the	O
opposites	O
to	O
synonyms	O
notice	O
that	O
antonyms	O
are	O
specific	O
to	O
individual	O
senses	O
for	O
a	O
word	O
this	O
is	O
why	O
i	O
have	O
the	O
following	O
code	O
to	O
display	O
antonyms	O
inside	O
the	O
loop	O
over	O
word	O
forms	O
for	O
each	O
word	O
sense	O
for	O
bank	O
antonyms	O
mean	O
the	O
opposite	O
for	O
antonym	O
synset	O
getantonymswordform	O
for	O
opposite	O
antonym	O
getsynset	O
getwordforms	O
system	O
out	O
println	O
wordform	O
opposite	O
antonym	O
using	O
the	O
wordnet	B
linguistic	O
database	O
system	O
out	O
printlnn	O
private	O
wordnetdatabase	O
database	O
private	O
final	O
static	O
string	O
synset	O
types	O
using	O
this	O
example	O
program	O
we	O
can	O
see	O
the	O
word	O
bank	O
has	O
different	O
senses	O
noun	O
and	O
verb	O
senses	O
process	O
word	O
bank	O
synset	O
type	O
noun	O
definition	O
sloping	O
land	O
the	O
slope	O
synset	O
type	O
beside	O
a	O
body	O
of	O
water	O
noun	O
definition	O
a	O
financial	O
institution	O
that	O
accepts	O
deposits	O
and	O
channels	O
the	O
money	O
into	O
lending	O
activities	O
depository	O
financial	O
institution	O
banking	O
concern	O
banking	O
company	O
noun	O
synonym	O
synonym	O
synonym	O
synset	O
type	O
definition	O
a	O
long	O
ridge	O
or	O
pile	O
synset	O
type	O
noun	O
definition	O
an	O
arrangement	O
of	O
similar	O
objects	O
synset	O
type	O
in	O
a	O
row	O
or	O
in	O
tiers	O
noun	O
definition	O
a	O
supply	O
or	O
stock	O
held	O
in	O
reserve	O
synset	O
type	O
for	O
future	O
use	O
in	O
emergencies	O
noun	O
definition	O
the	O
funds	O
held	O
by	O
a	O
gambling	O
house	O
synset	O
type	O
or	O
the	O
dealer	O
in	O
some	O
gambling	O
games	O
noun	O
definition	O
a	O
slope	O
in	O
the	O
turn	O
of	O
a	O
road	O
or	O
synonym	O
synonym	O
synset	O
type	O
track	O
the	O
outside	O
is	O
higher	O
than	O
the	O
inside	O
in	O
order	O
to	O
reduce	O
the	O
effects	O
of	O
centrifugal	O
force	O
cant	O
camber	O
noun	O
definition	O
a	O
container	O
with	O
a	O
slot	O
statistical	O
natural	O
language	O
processing	O
synonym	O
synonym	O
synonym	O
synset	O
type	O
in	O
the	O
top	O
for	O
keeping	O
money	O
at	O
home	O
savings	O
bank	O
coin	O
bank	O
money	O
box	O
noun	O
definition	O
a	O
building	O
in	O
which	O
the	O
business	O
synonym	O
synset	O
type	O
of	O
banking	O
transacted	O
bank	O
building	O
noun	O
definition	O
a	O
flight	O
maneuver	O
aircraft	O
synset	O
type	O
tips	O
laterally	O
about	O
its	O
longitudinal	O
axis	O
in	O
turning	O
verb	O
definition	O
tip	O
laterally	O
synset	O
type	O
verb	O
definition	O
enclose	O
with	O
a	O
bank	O
synset	O
type	O
verb	O
definition	O
do	O
business	O
with	O
a	O
bank	O
or	O
synset	O
type	O
keep	O
an	O
account	O
at	O
a	O
bank	O
verb	O
definition	O
act	O
as	O
the	O
banker	O
in	O
a	O
game	O
synset	O
type	O
or	O
in	O
gambling	O
verb	O
definition	O
be	O
in	O
the	O
banking	O
business	O
synset	O
type	O
verb	O
definition	O
put	O
into	O
a	O
bank	O
account	O
synonym	O
deposit	O
antonym	O
deposit	O
withdraw	O
antonym	O
deposit	O
draw	O
antonym	O
deposit	O
take	O
out	O
antonym	O
deposit	O
draw	O
off	O
synset	O
type	O
verb	O
definition	O
cover	O
with	O
ashes	O
so	O
to	O
control	O
synset	O
type	O
the	O
rate	O
of	O
burning	O
verb	O
definition	O
have	O
confidence	O
or	O
faith	O
in	O
synonym	O
trust	O
antonym	O
trust	O
distrust	O
antonym	O
trust	O
mistrust	O
antonym	O
trust	O
suspect	O
antonym	O
trust	O
distrust	O
antonym	O
trust	O
mistrust	O
antonym	O
trust	O
suspect	O
using	O
the	O
wordnet	B
linguistic	O
database	O
synonym	O
synonym	O
swear	O
rely	O
wordnet	B
provides	O
a	O
rich	O
linguistic	O
database	O
for	O
human	O
linguists	O
but	O
although	O
i	O
have	O
been	O
using	O
wordnet	B
since	O
i	O
do	O
not	O
often	O
use	O
it	O
in	O
automated	O
systems	O
i	O
tend	O
to	O
use	O
it	O
for	O
manual	O
reference	O
and	O
sometimes	O
for	O
simple	O
tasks	O
like	O
augmenting	O
a	O
list	O
of	O
terms	O
with	O
synonyms	O
in	O
the	O
next	O
two	O
sub-sections	O
i	O
suggest	O
two	O
possible	O
projects	O
both	O
involving	O
use	O
of	O
synsets	O
i	O
have	O
used	O
both	O
of	O
these	O
suggested	O
ideas	O
in	O
my	O
own	O
projects	O
with	O
some	O
success	O
suggested	O
project	O
using	O
a	O
part	O
of	O
speech	O
tagger	O
to	O
use	O
the	O
correct	O
wordnet	B
synonyms	O
we	O
saw	O
in	O
section	O
that	O
wordnet	B
will	O
give	O
us	O
both	O
synonyms	O
and	O
antonyms	O
meaning	O
of	O
words	O
the	O
problem	O
is	O
that	O
we	O
can	O
only	O
get	O
words	O
with	O
similar	O
and	O
opposite	O
meanings	O
for	O
specific	O
senses	O
of	O
a	O
word	O
using	O
the	O
example	O
in	O
section	O
synonyms	O
of	O
the	O
word	O
bank	O
in	O
the	O
sense	O
of	O
a	O
verb	O
meaning	O
have	O
confidence	O
or	O
faith	O
in	O
are	O
trust	O
swear	O
rely	O
while	O
synonyms	O
for	O
bank	O
in	O
the	O
sense	O
of	O
a	O
noun	O
meaning	O
a	O
financial	O
institution	O
that	O
accepts	O
deposits	O
and	O
channels	O
the	O
money	O
into	O
lending	O
activities	O
are	O
depository	O
financial	O
institution	O
banking	O
concern	O
banking	O
company	O
so	O
it	O
does	O
not	O
make	O
too	O
much	O
sense	O
to	O
try	O
to	O
maintain	O
a	O
data	O
map	O
of	O
synonyms	O
for	O
a	O
given	O
word	O
it	O
does	O
make	O
some	O
sense	O
to	O
try	O
to	O
use	O
some	O
information	O
about	O
the	O
context	O
of	O
a	O
word	O
we	O
can	O
do	O
this	O
with	O
some	O
degree	O
of	O
accuracy	O
by	O
using	O
the	O
part	O
of	O
speech	O
tagger	O
from	O
section	O
to	O
at	O
least	O
determine	O
that	O
a	O
word	O
in	O
a	O
sentence	O
is	O
a	O
noun	O
or	O
a	O
verb	O
and	O
thus	O
limit	O
the	O
mapping	O
of	O
possible	O
synonyms	O
for	O
the	O
word	O
in	O
its	O
current	O
context	O
statistical	O
natural	O
language	O
processing	O
suggested	O
project	O
using	O
wordnet	B
synonyms	O
to	O
improve	O
document	O
clustering	O
another	O
suggestion	O
for	O
a	O
wordnet-based	O
project	O
is	O
to	O
use	O
the	O
tagger	O
to	O
identify	O
the	O
probable	O
part	O
of	O
speech	O
for	O
each	O
word	O
in	O
all	O
text	O
documents	O
that	O
you	O
want	O
to	O
cluster	O
and	O
augment	O
the	O
documents	O
with	O
sysnset	O
data	O
you	O
can	O
then	O
cluster	O
the	O
documents	O
similarly	O
to	O
how	O
we	O
will	O
calculate	O
document	O
similarity	O
in	O
section	O
automatically	O
assigning	O
tags	O
to	O
text	O
by	O
tagging	B
i	O
mean	O
assigning	O
zero	O
or	O
more	O
categories	O
like	O
politics	O
economy	O
etc	O
to	O
text	O
based	O
on	O
the	O
words	O
contained	O
in	O
the	O
text	O
while	O
the	O
code	O
for	O
doing	O
this	O
is	O
simple	O
there	O
is	O
usually	O
much	O
work	O
to	O
do	O
to	O
build	O
a	O
word	O
count	O
database	O
for	O
different	O
classifications	O
i	O
have	O
been	O
working	O
on	O
commercial	O
products	O
for	O
automatic	O
tagging	B
and	O
semantic	O
extraction	O
for	O
about	O
ten	O
years	O
www	O
knowledgebooks	O
com	O
if	O
you	O
are	O
interested	O
in	O
this	O
section	O
i	O
will	O
show	O
you	O
some	O
simple	O
techniques	O
for	O
automatically	O
assigning	O
tags	O
or	O
categories	O
to	O
text	O
using	O
some	O
code	O
snippets	O
from	O
my	O
own	O
commercial	O
product	O
we	O
will	O
use	O
a	O
set	O
of	O
tags	O
for	O
which	O
i	O
have	O
collected	O
word	O
frequency	O
statistics	O
for	O
example	O
a	O
tag	O
of	O
java	O
might	O
be	O
associated	O
with	O
the	O
use	O
of	O
the	O
words	O
java	O
jvm	O
sun	O
etc	O
you	O
can	O
find	O
my	O
pre-trained	O
tag	O
data	O
in	O
the	O
file	O
test	O
dataclassification	O
tags	O
xml	O
the	O
java	O
source	O
code	O
for	O
the	O
class	O
autot	O
agger	O
is	O
in	O
the	O
file	O
src-statistical-nlp	O
comknowledgebooksnlpautotagger	O
java	O
the	O
autot	O
agger	O
class	O
uses	O
a	O
few	O
data	O
structures	O
to	O
keep	O
track	O
of	O
both	O
the	O
names	O
of	O
tags	O
and	O
the	O
word	O
count	O
statistics	O
for	O
words	O
associated	O
with	O
each	O
tag	O
name	O
i	O
use	O
a	O
temporary	O
hash	O
table	O
for	O
processing	O
the	O
xml	O
input	O
data	O
private	O
static	O
hashtablestring	O
hashtablestring	O
float	O
tagclasses	O
the	O
names	O
of	O
tags	O
used	O
are	O
defined	O
in	O
the	O
xml	O
tag	O
data	O
file	O
change	O
this	O
file	O
and	O
you	O
alter	O
both	O
the	O
tags	O
and	O
behavior	O
of	O
this	O
utility	O
class	O
here	O
is	O
a	O
snippet	O
of	O
data	O
automatically	O
assigning	O
tags	O
to	O
text	O
defined	O
in	O
the	O
xml	O
tag	O
data	O
file	O
describing	O
some	O
words	O
their	O
scores	O
associated	O
with	O
the	O
tag	O
religion	O
buddhism	O
namereligion	O
buddhism	O
namebuddhism	O
namebuddhist	O
namemind	O
namemedit	O
namebuddha	O
namepractic	O
nameteach	O
namepath	O
namemantra	O
namethought	O
nameschool	O
namezen	O
namemahayana	O
namesuffer	O
namedharma	O
nametibetan	O
notice	O
that	O
the	O
term	O
names	O
are	O
stemmed	O
words	O
and	O
all	O
lower	O
case	O
there	O
are	O
tags	O
defined	O
in	O
the	O
input	O
xml	O
file	O
included	O
in	O
the	O
zip	O
file	O
for	O
this	O
book	O
for	O
data	O
access	O
i	O
also	O
maintain	O
an	O
array	O
of	O
tag	O
names	O
and	O
an	O
associated	O
list	O
of	O
the	O
word	O
frequency	O
hash	O
tables	O
for	O
each	O
tag	O
name	O
private	O
static	O
string	O
tagclassnames	O
private	O
static	O
listhashtablestring	O
float	O
hashes	O
new	O
arraylisthashtablestring	O
float	O
the	O
xml	O
data	O
is	O
read	O
and	O
these	O
data	O
structures	O
are	O
filled	O
during	O
static	O
class	O
load	O
time	O
so	O
creating	O
multiple	O
instances	O
of	O
the	O
class	O
autot	O
agger	O
has	O
no	O
performance	O
penalty	O
in	O
either	O
memory	O
use	O
or	O
processing	O
time	O
except	O
for	O
an	O
empty	O
default	O
class	O
constructor	O
there	O
is	O
only	O
one	O
public	O
api	O
for	O
this	O
class	O
the	O
method	O
gett	O
ags	O
public	O
listnamevaluestring	O
float	O
gettagsstring	O
text	O
statistical	O
natural	O
language	O
processing	O
the	O
utility	O
class	O
n	O
amev	O
alue	O
is	O
defined	O
in	O
the	O
file	O
src-statistical-nlp	O
comknowledgebooksnlputilnamevalue	O
java	O
to	O
determine	O
the	O
tags	O
for	O
input	O
text	O
we	O
keep	O
a	O
running	O
score	O
for	O
each	O
defined	O
tag	O
type	O
i	O
use	O
the	O
internal	O
class	O
sf	O
triple	O
to	O
hold	O
triple	O
values	O
of	O
word	O
score	O
and	O
tag	O
index	O
i	O
choose	O
the	O
tags	O
with	O
the	O
highest	O
scores	O
as	O
the	O
automatically	O
assigned	O
tags	O
for	O
the	O
input	O
text	O
scores	O
for	O
each	O
tag	O
are	O
calculated	O
by	O
taking	O
each	O
word	O
in	O
the	O
input	O
text	O
stemming	O
it	O
and	O
if	O
the	O
stem	O
is	O
in	O
the	O
word	O
frequency	O
hash	O
table	O
for	O
the	O
tag	O
then	O
add	O
the	O
score	O
value	O
in	O
the	O
hash	O
table	O
to	O
the	O
running	O
sum	O
for	O
the	O
tag	O
you	O
can	O
refer	O
to	O
the	O
autotagger	O
java	O
source	O
code	O
for	O
details	O
here	O
is	O
an	O
example	O
use	O
of	O
class	O
autot	O
agger	O
autotagger	O
test	O
new	O
autotagger	O
string	O
s	O
president	O
went	O
to	O
congress	O
to	O
argue	O
for	O
his	O
tax	O
bill	O
before	O
leaving	O
on	O
a	O
vacation	O
to	O
las	O
vegas	O
to	O
see	O
some	O
shows	O
and	O
gamble	O
listnamevaluestring	O
float	O
results	O
for	O
float	O
result	O
results	O
system	O
out	O
printlnresult	O
test	O
gettagss	O
the	O
output	O
looks	O
like	O
news	O
economy	O
news	O
politics	O
text	B
clustering	I
the	O
text	B
clustering	I
system	O
that	O
i	O
have	O
written	O
for	O
my	O
own	O
projects	O
in	O
simplified	O
form	O
will	O
be	O
used	O
in	O
the	O
section	O
it	O
is	O
inherently	O
inefficient	O
when	O
clustering	O
a	O
large	O
number	O
of	O
text	O
documents	O
because	O
i	O
perform	O
significant	O
semantic	O
processing	O
on	O
each	O
text	O
document	O
and	O
then	O
compare	O
all	O
combinations	O
of	O
documents	O
the	O
runtime	O
performance	O
is	O
on	O
where	O
n	O
is	O
the	O
number	O
of	O
text	O
documents	O
if	O
you	O
need	O
to	O
cluster	O
or	O
compare	O
a	O
very	O
large	O
number	O
of	O
documents	O
you	O
will	O
probably	O
want	O
to	O
use	O
a	O
k-mean	O
clustering	O
algorithm	O
for	O
k-mean	O
clustering	O
java	O
for	O
some	O
open	O
source	O
projects	O
text	B
clustering	I
i	O
use	O
a	O
few	O
different	O
algorithms	O
to	O
rate	O
the	O
similarity	O
of	O
any	O
two	O
text	O
documents	O
and	O
i	O
will	O
combine	O
these	O
depending	O
on	O
the	O
requirements	O
of	O
the	O
project	O
that	O
i	O
am	O
working	O
on	O
calculate	O
the	O
intersection	O
of	O
common	O
words	O
in	O
the	O
two	O
documents	O
calculate	O
the	O
intersection	O
of	O
common	O
word	O
stems	O
in	O
the	O
two	O
documents	O
calculate	O
the	O
intersection	O
of	O
tags	O
assigned	O
to	O
the	O
two	O
documents	O
calculate	O
the	O
intersection	O
of	O
human	O
and	O
place	O
names	O
in	O
the	O
two	O
documents	O
in	O
this	O
section	O
we	O
will	O
implement	O
the	O
second	O
option	O
calculate	O
the	O
intersection	O
of	O
word	O
stems	O
in	O
two	O
documents	O
without	O
showing	O
the	O
package	O
and	O
import	O
statements	O
it	O
takes	O
just	O
a	O
few	O
lines	O
of	O
code	O
to	O
implement	O
this	O
algorithm	O
when	O
we	O
use	O
the	O
stemmer	O
class	O
the	O
following	O
listing	O
shows	O
the	O
implementation	O
of	O
class	O
comparabledocument	O
with	O
comments	O
we	O
start	O
by	O
defining	O
constructors	O
for	O
documents	O
defined	O
by	O
a	O
f	O
ile	O
object	O
and	O
a	O
string	O
object	O
public	O
class	O
comparabledocument	O
disable	O
default	O
constructor	O
calls	O
private	O
comparabledocument	O
public	O
comparabledocumentfile	O
document	O
throws	O
filenotfoundexception	O
thisnew	O
scannerdocument	O
usedelimiterz	O
next	O
public	O
comparabledocumentstring	O
text	O
liststring	O
stems	O
new	O
stemmer	O
stemstringtext	O
for	O
stem	O
stems	O
stem	O
count	O
if	O
integer	O
count	O
stemcountmap	O
getstem	O
stemcountmap	O
putstem	O
count	O
else	O
stemcountmap	O
putstem	O
in	O
the	O
last	O
constructor	O
i	O
simply	O
create	O
a	O
count	O
of	O
how	O
many	O
times	O
each	O
stem	O
occurs	O
in	O
the	O
document	O
statistical	O
natural	O
language	O
processing	O
the	O
public	O
api	O
allows	O
us	O
to	O
get	O
the	O
stem	O
count	O
hash	O
table	O
the	O
number	O
of	O
stems	O
in	O
the	O
original	O
document	O
and	O
a	O
numeric	O
comparison	O
value	O
for	O
comparing	O
this	O
document	O
with	O
another	O
is	O
the	O
first	O
version	O
we	O
will	O
add	O
an	O
improvement	O
later	O
public	O
mapstring	O
integer	O
getstemmap	O
return	O
stemcountmap	O
public	O
int	O
getstemcount	O
return	O
stem	O
count	O
public	O
float	O
comparetocomparabledocument	O
otherdocument	O
long	O
count	O
mapstringinteger	O
otherdocument	O
getstemmap	O
iterator	O
iter	O
stemcountmap	O
keyset	O
iterator	O
while	O
object	O
key	O
iter	O
next	O
integer	O
stemcountmap	O
getkey	O
integer	O
if	O
count	O
return	O
math	O
sqrt	O
otherdocument	O
getstemcount	O
private	O
mapstring	O
integer	O
stemcountmap	O
new	O
hashmapstring	O
integer	O
private	O
int	O
stem	O
count	O
i	O
normalize	O
the	O
return	O
value	O
for	O
the	O
method	O
comparet	O
o	O
to	O
return	O
a	O
value	O
of	O
if	O
compared	O
documents	O
are	O
identical	O
stemming	O
and	O
if	O
they	O
contain	O
no	O
common	O
stems	O
there	O
are	O
four	O
test	O
text	O
documents	O
in	O
the	O
test	O
data	O
directory	O
and	O
the	O
following	O
test	O
code	O
compares	O
various	O
combinations	O
note	O
that	O
i	O
am	O
careful	O
to	O
test	O
the	O
case	O
of	O
comparing	O
identical	O
documents	O
comparabledocument	O
new	O
comparabledocument	O
text	B
clustering	I
new	O
comparabledocument	O
new	O
comparabledocument	O
new	O
system	O
out	O
printlnnews	O
system	O
out	O
printlnnews	O
system	O
out	O
printlnnews	O
system	O
out	O
printlnnews	O
system	O
out	O
printlnecon	O
system	O
out	O
printlnnews	O
system	O
out	O
printlnecon	O
system	O
out	O
printlnecon	O
the	O
following	O
listing	O
shows	O
output	O
that	O
indicates	O
mediocre	O
results	O
we	O
will	O
soon	O
make	O
an	O
improvement	O
that	O
makes	O
the	O
results	O
better	O
the	O
output	O
for	O
this	O
test	O
code	O
is	O
news	O
news	O
news	O
news	O
econ	O
news	O
econ	O
econ	O
there	O
is	O
not	O
as	O
much	O
differentiation	O
in	O
comparison	O
scores	O
between	O
political	O
news	O
stories	O
and	O
economic	O
news	O
stories	O
what	O
is	O
up	O
here	O
the	O
problem	O
is	O
that	O
i	O
did	O
not	O
remove	O
common	O
words	O
therefore	O
common	O
word	O
stems	O
when	O
creating	O
stem	O
counts	O
for	O
each	O
document	O
i	O
wrote	O
a	O
utility	O
class	O
n	O
oisew	O
ords	O
for	O
identifying	O
both	O
common	O
words	O
and	O
their	O
stems	O
you	O
can	O
see	O
the	O
implementation	O
in	O
the	O
file	O
noisewords	O
java	O
removing	O
noise	O
words	O
improves	O
the	O
comparison	O
results	O
added	O
a	O
few	O
tests	O
since	O
the	O
last	O
printout	O
news	O
statistical	O
natural	O
language	O
processing	O
news	O
news	O
news	O
econ	O
news	O
econ	O
much	O
better	O
results	O
the	O
api	O
for	O
com	O
knowledgebooks	O
nlp	O
util	O
noisewords	O
is	O
public	O
static	O
boolean	O
checkforstring	O
stem	O
you	O
can	O
add	O
additional	O
noise	O
words	O
to	O
the	O
data	O
section	O
in	O
the	O
file	O
noisewords	O
java	O
depending	O
on	O
your	O
application	O
spelling	B
correction	O
automating	O
spelling	B
correction	O
is	O
a	O
task	O
that	O
you	O
may	O
use	O
for	O
many	O
types	O
of	O
projects	O
this	O
includes	O
both	O
programs	O
that	O
involve	O
users	O
entering	O
text	O
that	O
will	O
be	O
automatically	O
processed	O
with	O
no	O
further	O
interaction	O
with	O
the	O
user	O
and	O
for	O
programs	O
that	O
keep	O
the	O
user	O
in	O
the	O
loop	O
by	O
offering	O
them	O
possible	O
spelling	B
choices	O
that	O
they	O
can	O
select	O
i	O
have	O
used	O
five	O
different	O
approaches	O
in	O
my	O
own	O
work	O
for	O
automating	O
spelling	B
correction	O
and	O
getting	O
spelling	B
suggestions	O
an	O
old	O
project	O
of	O
mine	O
complex	O
but	O
with	O
good	O
accuracy	O
embedding	O
the	O
gnu	O
aspell	O
utility	O
use	O
the	O
lgpl	O
licensed	O
jazzy	O
spelling	B
checker	O
port	O
of	O
the	O
gnu	O
aspell	O
spelling	B
system	O
to	O
java	O
using	O
peter	O
norvig	O
s	O
statistical	O
spelling	B
correction	O
algorithm	O
using	O
norvig	O
s	O
algorithm	O
adding	O
word	O
pair	O
statistics	O
we	O
will	O
use	O
the	O
last	O
three	O
options	O
in	O
the	O
next	O
sections	O
and	O
in	O
section	O
where	O
we	O
will	O
extend	O
norvig	O
s	O
algorithm	O
by	O
also	O
using	O
word	O
pair	O
statistics	O
this	O
last	O
approach	O
is	O
computationally	O
expensive	O
and	O
is	O
best	O
used	O
in	O
applications	O
with	O
a	O
highly	O
specialized	O
domain	O
of	O
discourse	O
systems	O
dealing	O
just	O
with	O
boats	O
sports	O
etc	O
section	O
also	O
provides	O
a	O
good	O
lead	O
in	O
to	O
section	O
dealing	O
with	O
a	O
similar	O
but	O
more	O
general	O
technique	O
covered	O
later	O
in	O
this	O
chapter	O
markov	B
models	I
spelling	B
correction	O
gnu	O
aspell	O
library	O
and	O
jazzy	O
the	O
gnu	O
aspell	O
system	O
is	O
a	O
hybrid	O
system	O
combining	O
letter	O
substitution	O
and	O
addition	O
we	O
will	O
implement	O
as	O
a	O
short	O
example	O
program	O
in	O
section	O
the	O
soundex	O
algorithm	O
and	O
dynamic	O
programming	O
i	O
consider	O
aspell	O
to	O
be	O
a	O
best	O
of	O
breed	O
spelling	B
utility	O
and	O
i	O
use	O
it	O
fairly	O
frequently	O
with	O
scripting	O
languages	O
like	O
ruby	O
where	O
it	O
is	O
simple	O
to	O
shell	O
out	O
and	O
run	O
external	O
programs	O
you	O
can	O
also	O
shell	O
out	O
external	O
commands	O
to	O
new	O
processes	O
in	O
java	O
but	O
there	O
is	O
no	O
need	O
to	O
do	O
this	O
if	O
we	O
use	O
the	O
lgpled	O
jazzy	O
library	O
that	O
is	O
similar	O
to	O
aspell	O
and	O
written	O
in	O
pure	O
java	O
for	O
the	O
sake	O
of	O
completeness	O
here	O
is	O
a	O
simple	O
example	O
of	O
how	O
you	O
would	O
use	O
aspell	O
as	O
an	O
external	O
program	O
first	O
we	O
will	O
run	O
aspell	O
on	O
in	O
a	O
command	O
shell	O
all	O
output	O
is	O
shown	O
markw	O
echo	O
doog	O
international	O
ispell	O
really	O
aspell	O
ths	O
th	O
s	O
this	O
thus	O
th	O
doog	O
dog	O
doug	O
dong	O
door	O
list	O
this	O
output	O
is	O
easy	O
enough	O
to	O
parse	O
here	O
is	O
an	O
example	O
in	O
ruby	O
perl	O
or	O
java	O
would	O
be	O
similar	O
def	O
aspell	O
text	O
s	O
echo	O
list	O
s	O
s	O
splitn	O
s	O
shift	O
results	O
s	O
each	O
tokens	O
line	O
split	O
header	O
results	O
tokens	O
collect	O
tt	O
strip	O
if	O
results	O
end	O
i	O
include	O
the	O
source	O
code	O
to	O
the	O
lgpled	O
jazzy	O
library	O
and	O
a	O
test	O
class	O
in	O
the	O
directory	O
src-spelling-jazzy	O
the	O
jazzy	O
library	O
source	O
code	O
is	O
in	O
the	O
sub-directory	O
comswabunga	O
we	O
will	O
spend	O
no	O
time	O
looking	O
at	O
the	O
implementation	O
of	O
the	O
jazzy	O
library	O
this	O
short	O
section	O
is	O
simply	O
meant	O
to	O
get	O
you	O
started	O
quickly	O
using	O
jazzy	O
here	O
is	O
the	O
test	O
code	O
from	O
the	O
file	O
spellingjazzytester	O
java	O
statistical	O
natural	O
language	O
processing	O
file	O
dict	O
new	O
spellchecker	O
checker	O
new	O
spellcheckernew	O
spelldictionaryhashmapdict	O
int	O
threshold	O
computational	O
cost	O
threshold	O
system	O
out	O
printlnchecker	O
getsuggestionsrunnng	O
system	O
out	O
printlnchecker	O
getsuggestionsseason	O
system	O
out	O
printlnchecker	O
getsuggestions	O
threshold	O
threshold	O
threshold	O
the	O
method	O
getsuggestions	O
returns	O
an	O
arraylist	O
of	O
spelling	B
suggestions	O
this	O
example	O
code	O
produces	O
the	O
following	O
output	O
seasons	O
reason	O
advantages	O
the	O
file	O
test	O
contains	O
an	O
alphabetically	O
ordered	O
list	O
of	O
words	O
one	O
per	O
line	O
you	O
may	O
want	O
to	O
add	O
words	O
appropriate	O
for	O
the	O
type	O
of	O
text	O
that	O
your	O
applications	O
use	O
for	O
example	O
if	O
you	O
were	O
adding	O
spelling	B
correction	O
to	O
a	O
web	O
site	O
for	O
selling	O
sailboats	O
then	O
you	O
would	O
want	O
to	O
insert	O
manufacturer	O
and	O
product	O
names	O
to	O
this	O
word	O
list	O
in	O
the	O
correct	O
alphabetical	O
order	O
the	O
title	O
of	O
this	O
book	O
contains	O
the	O
word	O
practical	O
so	O
i	O
feel	O
fine	O
about	O
showing	O
you	O
how	O
to	O
use	O
a	O
useful	O
open	O
source	O
package	O
like	O
jazzy	O
without	O
digging	O
into	O
its	O
implementation	O
or	O
apsell	O
s	O
implementation	O
the	O
next	O
section	O
contains	O
the	O
implementation	O
of	O
a	O
simple	O
algorithm	O
and	O
we	O
will	O
study	O
its	O
implementation	O
some	O
detail	O
peter	O
norvig	O
s	O
spelling	B
algorithm	O
peter	O
norvig	O
designed	O
and	O
implemented	O
a	O
spelling	B
corrector	O
in	O
about	O
lines	O
of	O
python	O
code	O
i	O
will	O
implement	O
his	O
algorithm	O
in	O
java	O
in	O
this	O
section	O
and	O
in	O
section	O
i	O
will	O
extend	O
my	O
implementation	O
to	O
also	O
use	O
word	O
pair	O
statistics	O
the	O
class	O
spellingsuggestions	O
uses	O
static	O
data	O
to	O
create	O
an	O
in-memory	O
spelling	B
dictionary	O
this	O
initialization	O
will	O
be	O
done	O
at	O
class	O
load	O
time	O
so	O
creating	O
instances	O
of	O
this	O
class	O
will	O
be	O
inexpensive	O
here	O
is	O
the	O
static	O
initialization	O
code	O
with	O
error	O
handling	O
removed	O
for	O
brevity	O
private	O
static	O
mapstring	O
integer	O
wordcounts	O
spelling	B
correction	O
new	O
hashmapstring	O
integer	O
static	O
use	O
peter	O
norvig	O
s	O
training	O
file	O
big	O
txt	O
httpwww	O
norvig	O
comspell-correct	O
html	O
fileinputstream	O
fstream	O
new	O
fileinputstreamtmpbig	O
txt	O
datainputstream	O
in	O
new	O
datainputstreamfstream	O
bufferedreader	O
br	O
new	O
bufferedreadernew	O
inputstreamreaderin	O
string	O
line	O
while	O
br	O
readline	O
null	O
liststring	O
words	O
tokenizer	O
wordstolistline	O
for	O
word	O
words	O
if	O
integer	O
count	O
wordcounts	O
getword	O
wordcounts	O
putword	O
count	O
else	O
wordcounts	O
putword	O
in	O
close	O
the	O
class	O
has	O
two	O
static	O
methods	O
that	O
implement	O
the	O
algorithm	O
the	O
first	O
method	O
edits	O
seen	O
in	O
the	O
following	O
listing	O
is	O
private	O
and	O
returns	O
a	O
list	O
of	O
permutations	O
for	O
a	O
string	O
containing	O
a	O
word	O
permutations	O
are	O
created	O
by	O
removing	O
characters	O
by	O
reversing	O
the	O
order	O
of	O
two	O
adjacent	O
characters	O
by	O
replacing	O
single	O
characters	O
with	O
all	O
other	O
characters	O
and	O
by	O
adding	O
all	O
possible	O
letters	O
to	O
each	O
space	O
between	O
characters	O
in	O
the	O
word	O
private	O
static	O
liststring	O
editsstring	O
word	O
int	O
wordl	O
word	O
length	O
wordl	O
liststring	O
possible	O
new	O
arrayliststring	O
drop	O
a	O
character	O
for	O
i	O
wordl	O
i	O
reverse	O
order	O
of	O
characters	O
for	O
i	O
i	O
word	O
substringi	O
statistical	O
natural	O
language	O
processing	O
replace	O
a	O
character	O
in	O
each	O
location	O
in	O
the	O
word	O
for	O
i	O
wordl	O
for	O
ch	O
a	O
ch	O
z	O
i	O
ch	O
add	O
in	O
a	O
character	O
in	O
each	O
location	O
in	O
the	O
word	O
for	O
i	O
wordl	O
for	O
ch	O
a	O
ch	O
z	O
i	O
ch	O
word	O
substringi	O
return	O
possible	O
here	O
is	O
a	O
sample	O
test	O
case	O
for	O
the	O
method	O
edits	O
where	O
we	O
call	O
it	O
with	O
the	O
word	O
cat	O
and	O
get	O
a	O
list	O
of	O
permutations	O
ct	O
ca	O
act	O
cta	O
aat	O
bat	O
cat	O
fat	O
cct	O
cdt	O
cet	O
caty	O
catz	O
the	O
public	O
static	O
method	O
correct	O
has	O
four	O
possible	O
return	O
values	O
if	O
the	O
word	O
is	O
in	O
the	O
spelling	B
hash	O
table	O
simply	O
return	O
the	O
word	O
generate	O
a	O
permutation	O
list	O
of	O
the	O
input	O
word	O
using	O
the	O
method	O
edits	O
build	O
a	O
hash	O
table	O
candidates	O
from	O
the	O
permutation	O
list	O
with	O
keys	O
being	O
the	O
word	O
count	O
in	O
the	O
main	O
hashtable	O
wordcounts	O
with	O
values	O
of	O
the	O
words	O
in	O
the	O
permutation	O
list	O
if	O
the	O
hash	O
table	O
candidates	O
is	O
not	O
empty	O
then	O
return	O
the	O
permutation	O
with	O
the	O
best	O
key	O
count	O
value	O
for	O
each	O
new	O
word	O
in	O
the	O
permutation	O
list	O
call	O
the	O
method	O
edits	O
with	O
the	O
word	O
creating	O
a	O
new	O
candidates	O
hash	O
table	O
with	O
permutations	O
of	O
permutations	O
if	O
candidates	O
is	O
not	O
empty	O
then	O
return	O
the	O
word	O
with	O
the	O
highest	O
score	O
return	O
the	O
value	O
of	O
the	O
original	O
word	O
suggestions	O
public	O
static	O
string	O
correctstring	O
word	O
ifwordcounts	O
containskeyword	O
return	O
word	O
liststring	O
list	O
editsword	O
spelling	B
correction	O
candidate	O
hash	O
has	O
word	O
counts	O
as	O
keys	O
word	O
as	O
value	O
hashmapinteger	O
string	O
candidates	O
new	O
hashmapinteger	O
string	O
for	O
testword	O
list	O
ifwordcounts	O
containskeytestword	O
candidates	O
putwordcounts	O
gettestword	O
testword	O
if	O
candidates	O
is	O
not	O
empty	O
then	O
return	O
the	O
word	O
with	O
the	O
largest	O
key	O
count	O
value	O
ifcandidates	O
size	O
return	O
candidates	O
get	O
collections	O
maxcandidates	O
keyset	O
if	O
the	O
edits	O
method	O
does	O
not	O
provide	O
a	O
candidate	O
word	O
that	O
matches	O
then	O
we	O
will	O
call	O
edits	O
again	O
with	O
each	O
previous	O
permutation	O
words	O
note	O
this	O
case	O
occurs	O
only	O
about	O
candidates	O
clear	O
for	O
editwords	O
list	O
of	O
the	O
time	O
and	O
obviously	O
increases	O
the	O
runtime	O
of	O
method	O
correct	O
for	O
wrd	O
editseditwords	O
ifwordcounts	O
containskeywrd	O
candidates	O
putwordcounts	O
getwrdwrd	O
if	O
return	O
candidates	O
get	O
collections	O
maxcandidates	O
keyset	O
return	O
word	O
statistical	O
natural	O
language	O
processing	O
although	O
peter	O
norvig	O
s	O
spelling	B
algorithm	O
is	O
much	O
simpler	O
than	O
the	O
algorithm	O
used	O
in	O
aspell	O
it	O
works	O
well	O
i	O
have	O
used	O
norvig	O
s	O
spelling	B
algorithm	O
for	O
one	O
customer	O
project	O
that	O
had	O
a	O
small	O
specific	O
vocabulary	O
instead	O
of	O
using	O
aspell	O
we	O
will	O
extend	O
norvig	O
s	O
spelling	B
algorithm	O
in	O
the	O
next	O
section	O
to	O
also	O
take	O
advantage	O
of	O
word	O
pair	O
statistics	O
extending	O
the	O
norvig	O
algorithm	O
by	O
using	O
word	O
pair	O
statistics	O
it	O
is	O
possible	O
to	O
use	O
statistics	O
for	O
which	O
words	O
commonly	O
appear	O
together	O
to	O
improve	O
spelling	B
suggestions	O
in	O
my	O
experience	O
this	O
is	O
only	O
worthwhile	O
when	O
applications	O
have	O
two	O
traits	O
the	O
vocabulary	O
for	O
the	O
application	O
is	O
specialized	O
for	O
example	O
a	O
social	O
networking	O
site	O
for	O
people	O
interested	O
in	O
boating	O
might	O
want	O
a	O
more	O
accurate	O
spelling	B
system	O
than	O
one	O
that	O
has	O
to	O
handle	O
more	O
general	O
english	O
text	O
in	O
this	O
example	O
common	O
word	O
pairs	O
might	O
be	O
multi-word	O
boat	O
and	O
manufacturer	O
names	O
boating	O
locations	O
etc	O
there	O
is	O
a	O
very	O
large	O
amount	O
of	O
text	O
in	O
this	O
limited	O
subject	O
area	O
to	O
use	O
for	O
training	O
this	O
is	O
because	O
there	O
will	O
be	O
many	O
more	O
combinations	O
of	O
word	O
pairs	O
than	O
words	O
and	O
a	O
very	O
large	O
training	O
set	O
helps	O
to	O
determine	O
which	O
pairs	O
are	O
most	O
common	O
rather	O
than	O
just	O
coincidental	O
we	O
will	O
proceed	O
in	O
a	O
similar	O
fashion	O
to	O
the	O
implementation	O
in	O
the	O
last	O
section	O
but	O
we	O
will	O
also	O
keep	O
an	O
additional	O
hash	O
table	O
containing	O
counts	O
for	O
word	O
pairs	O
since	O
there	O
will	O
be	O
many	O
more	O
word	O
pair	O
combinations	O
than	O
single	O
words	O
you	O
should	O
expect	O
both	O
the	O
memory	O
requirements	O
and	O
cpu	O
time	O
for	O
training	O
to	O
be	O
much	O
larger	O
for	O
one	O
project	O
there	O
was	O
so	O
much	O
training	O
data	O
that	O
i	O
ended	O
up	O
having	O
to	O
use	O
diskbased	O
hash	O
tables	O
to	O
store	O
word	O
pair	O
counts	O
to	O
make	O
this	O
training	O
process	O
take	O
less	O
training	O
time	O
and	O
less	O
memory	O
to	O
hold	O
the	O
large	O
word	O
combination	O
hash	O
table	O
we	O
will	O
edit	O
the	O
input	O
file	O
big	O
txt	O
from	O
the	O
last	O
section	O
deleting	O
the	O
lines	O
that	O
contain	O
random	O
words	O
added	O
to	O
the	O
end	O
of	O
the	O
project	O
gutenberg	O
texts	O
furthermore	O
we	O
will	O
experiment	O
with	O
an	O
even	O
smaller	O
version	O
of	O
this	O
file	O
small	O
txt	O
that	O
is	O
about	O
ten	O
percent	O
of	O
the	O
size	O
of	O
the	O
original	O
training	O
file	O
because	O
we	O
are	O
using	O
a	O
smaller	O
training	O
set	O
we	O
should	O
expect	O
marginal	O
results	O
for	O
your	O
own	O
projects	O
you	O
should	O
use	O
as	O
much	O
data	O
as	O
possible	O
in	O
principle	O
when	O
we	O
collect	O
a	O
word	O
pair	O
hash	O
table	O
where	O
the	O
hash	O
values	O
are	O
the	O
number	O
of	O
times	O
a	O
word	O
pair	O
occurs	O
in	O
the	O
training	O
test	O
we	O
would	O
want	O
to	O
be	O
sure	O
that	O
we	O
do	O
not	O
collect	O
word	O
pairs	O
across	O
sentence	O
boundaries	O
and	O
separate	O
phrases	O
occurring	O
inside	O
of	O
parenthesis	O
etc	O
for	O
example	O
consider	O
the	O
following	O
text	O
fragment	O
spelling	B
correction	O
he	O
went	O
to	O
paris	O
the	O
weather	O
was	O
warm	O
optimally	O
we	O
would	O
not	O
want	O
to	O
collect	O
statistics	O
on	O
word	O
token	O
pairs	O
like	O
paris	O
or	O
paris	O
the	O
that	O
include	O
the	O
final	O
period	O
in	O
a	O
sentence	O
or	O
span	O
a	O
sentence	O
in	O
a	O
practical	O
sense	O
since	O
we	O
will	O
be	O
discarding	O
seldom	O
occurring	O
word	O
pairs	O
it	O
does	O
not	O
matter	O
too	O
much	O
so	O
in	O
our	O
example	O
we	O
will	O
collect	O
all	O
tokenized	O
word	O
pairs	O
at	O
the	O
same	O
time	O
that	O
we	O
collect	O
single	O
word	O
frequency	O
statistics	O
pattern	O
p	O
pattern	O
compile	O
scanner	O
scanner	O
new	O
scannernew	O
filetmpsmall	O
txt	O
scanner	O
usedelimiterp	O
string	O
last	O
while	O
string	O
word	O
scanner	O
next	O
if	O
integer	O
count	O
wordcounts	O
getword	O
wordcounts	O
putword	O
count	O
else	O
wordcounts	O
putword	O
string	O
pair	O
last	O
word	O
if	O
integer	O
count	O
wordpaircounts	O
getpair	O
wordpaircounts	O
putpair	O
count	O
else	O
wordpaircounts	O
putpair	O
last	O
word	O
scanner	O
close	O
for	O
the	O
first	O
page	O
of	O
text	O
in	O
the	O
test	O
file	O
if	O
we	O
print	O
out	O
word	O
pairs	O
that	O
occur	O
at	O
least	O
two	O
times	O
using	O
this	O
code	O
for	O
pair	O
wordpaircounts	O
keyset	O
if	O
system	O
out	O
printlnpair	O
wordpaircounts	O
getpair	O
then	O
we	O
get	O
this	O
output	O
statistical	O
natural	O
language	O
processing	O
arthur	O
conan	O
by	O
sir	O
of	O
sherlock	O
project	O
gutenberg	O
how	O
to	O
the	O
adventures	O
sherlock	O
holmes	O
sir	O
arthur	O
adventures	O
of	O
information	O
about	O
conan	O
doyle	O
the	O
words	O
conan	O
and	O
doyle	O
tend	O
to	O
appear	O
together	O
frequently	O
if	O
we	O
want	O
to	O
suggest	O
spelling	B
corrections	O
for	O
the	O
author	O
conan	O
doyyle	O
wrote	O
it	O
seems	O
intuitive	O
that	O
we	O
can	O
prefer	O
the	O
correction	O
doyle	O
since	O
if	O
we	O
take	O
the	O
possible	O
list	O
of	O
corrections	O
for	O
doyyle	O
and	O
combine	O
each	O
with	O
the	O
preceding	O
word	O
conan	O
in	O
the	O
text	O
then	O
we	O
notice	O
that	O
the	O
hash	O
table	O
wordp	O
aircounts	O
has	O
a	O
relatively	O
high	O
count	O
for	O
the	O
key	O
conan	O
doyle	O
that	O
is	O
a	O
single	O
string	O
containing	O
a	O
word	O
pair	O
in	O
theory	O
this	O
may	O
look	O
like	O
a	O
good	O
approach	O
but	O
there	O
are	O
a	O
few	O
things	O
that	O
keep	O
this	O
technique	O
from	O
being	O
generally	O
practical	O
it	O
is	O
computationally	O
expensive	O
to	O
train	O
the	O
system	O
for	O
large	O
training	O
text	O
it	O
is	O
more	O
expensive	O
computationally	O
to	O
perform	O
spelling	B
suggestions	O
the	O
results	O
are	O
not	O
likely	O
to	O
be	O
much	O
better	O
than	O
the	O
single	O
word	O
approach	O
unless	O
the	O
text	O
is	O
in	O
one	O
narrow	O
domain	O
and	O
you	O
have	O
a	O
lot	O
of	O
training	O
text	O
in	O
the	O
example	O
of	O
misspelling	O
doyyle	O
calling	O
the	O
method	O
edits	O
editsdoyyle	O
returns	O
a	O
list	O
with	O
elements	O
the	O
method	O
edits	O
is	O
identical	O
to	O
the	O
one	O
word	O
spelling	B
corrector	O
in	O
the	O
last	O
section	O
i	O
changed	O
the	O
method	O
correct	O
by	O
adding	O
an	O
argument	O
for	O
the	O
previous	O
word	O
factoring	O
in	O
statistics	O
from	O
the	O
word	O
pair	O
count	O
hash	O
table	O
and	O
for	O
this	O
example	O
by	O
not	O
calculating	O
edits	O
of	O
edits	O
as	O
we	O
did	O
in	O
the	O
last	O
section	O
here	O
is	O
the	O
modified	O
code	O
public	O
string	O
correctstring	O
word	O
ifwordcounts	O
containskeyword	O
return	O
word	O
liststring	O
list	O
editsword	O
string	O
previous	O
word	O
spelling	B
correction	O
candidate	O
hash	O
has	O
as	O
word	O
counts	O
as	O
keys	O
word	O
as	O
value	O
hashmapinteger	O
string	O
candidates	O
for	O
testword	O
list	O
new	O
hashmapinteger	O
string	O
look	O
for	O
word	O
pairs	O
with	O
testword	O
in	O
the	O
second	O
position	O
string	O
word	O
pair	O
previous	O
word	O
testword	O
int	O
int	O
count	O
from	O
word	O
pairs	O
ifwordcounts	O
containskeytestword	O
wordcounts	O
gettestword	O
candidates	O
putwordcounts	O
gettestword	O
testword	O
if	O
count	O
from	O
word	O
pairs	O
wordpaircounts	O
getword	O
pair	O
look	O
for	O
word	O
pairs	O
with	O
testword	O
in	O
the	O
first	O
position	O
word	O
pair	O
testword	O
previous	O
word	O
if	O
count	O
from	O
word	O
pairs	O
wordpaircounts	O
getword	O
pair	O
int	O
sum	O
count	O
from	O
word	O
pairs	O
if	O
candidates	O
putsum	O
testword	O
if	O
candidates	O
is	O
not	O
empty	O
then	O
return	O
the	O
word	O
with	O
the	O
largest	O
key	O
count	O
value	O
ifcandidates	O
size	O
return	O
candidates	O
get	O
collections	O
maxcandidates	O
keyset	O
return	O
word	O
statistical	O
natural	O
language	O
processing	O
using	O
word	O
pair	O
statistics	O
can	O
be	O
a	O
good	O
technique	O
if	O
you	O
need	O
to	O
build	O
an	O
automated	O
spelling	B
corrector	O
that	O
only	O
needs	O
to	O
work	O
on	O
text	O
in	O
one	O
subject	O
area	O
you	O
will	O
need	O
a	O
lot	O
of	O
training	O
text	O
in	O
your	O
subject	O
area	O
and	O
be	O
prepared	O
for	O
extra	O
work	O
performing	O
the	O
training	O
as	O
i	O
mentioned	O
before	O
for	O
one	O
customer	O
project	O
i	O
could	O
not	O
fit	O
the	O
word	O
pair	O
hash	O
table	O
in	O
memory	O
the	O
server	O
that	O
i	O
had	O
to	O
use	O
so	O
i	O
had	O
to	O
use	O
a	O
disk-based	O
hash	O
table	O
the	O
training	O
run	O
took	O
a	O
long	O
while	O
another	O
good	O
alternative	O
for	O
building	O
systems	O
for	O
handling	O
text	O
in	O
one	O
subject	O
area	O
is	O
to	O
augment	O
a	O
standard	O
spelling	B
library	O
like	O
aspell	O
or	O
jazzy	O
with	O
custom	O
word	O
dictionaries	O
hidden	O
markov	B
models	I
we	O
used	O
a	O
set	O
of	O
rules	O
in	O
section	O
to	O
assign	O
parts	O
of	O
speech	O
tags	O
to	O
words	O
in	O
english	O
text	O
the	O
rules	O
that	O
we	O
used	O
were	O
a	O
subset	O
of	O
the	O
automatically	O
generated	O
rules	O
that	O
eric	O
brill	O
s	O
machine	B
learning	I
thesis	O
project	O
produced	O
his	O
thesis	O
work	O
used	O
markov	O
modeling	O
to	O
calculate	O
the	O
most	O
likely	O
tag	O
of	O
words	O
given	O
precceding	O
words	O
he	O
then	O
generated	O
rules	O
for	O
taging	O
some	O
of	O
which	O
we	O
saw	O
in	O
section	O
where	O
we	O
saw	O
brill	O
s	O
published	O
results	O
of	O
the	O
most	O
useful	O
learned	O
rules	O
made	O
writing	O
a	O
fast	O
tagger	O
relatively	O
easy	O
in	O
this	O
section	O
we	O
will	O
use	O
word-use	O
statistics	O
to	O
assign	O
word	O
type	O
tags	O
to	O
each	O
word	O
in	O
input	O
text	O
we	O
will	O
look	O
in	O
some	O
detail	O
at	O
one	O
of	O
the	O
most	O
popular	O
approaches	O
to	O
tagging	B
text	O
building	O
hidden	O
markov	B
models	I
and	O
then	O
evaluating	O
these	O
models	O
against	O
input	O
text	O
to	O
assign	O
word	O
use	O
part	O
of	O
speech	O
tags	O
to	O
words	O
a	O
complete	O
coverage	O
of	O
the	O
commonly	O
used	O
techniques	O
for	O
training	O
and	O
using	O
hmm	O
is	O
beyond	O
the	O
scope	O
of	O
this	O
section	O
a	O
full	O
reference	O
for	O
these	O
training	O
techniques	O
is	O
foundations	O
of	O
statistical	O
natural	O
language	O
processing	O
schutze	O
we	O
will	O
discuss	O
the	O
training	O
algorithms	O
and	O
sample	O
java	O
code	O
that	O
implements	O
hmm	O
the	O
example	O
in	O
this	O
chapter	O
is	O
purposely	O
pedantic	O
the	O
example	O
code	O
is	O
intended	O
to	O
be	O
easy	O
to	O
understand	O
and	O
experiment	O
with	O
in	O
hidden	O
markov	B
models	I
we	O
speak	O
of	O
an	O
observable	O
sequence	O
of	O
events	O
that	O
moves	O
a	O
system	O
through	O
a	O
series	O
of	O
states	O
we	O
attempt	O
to	O
assign	O
transition	O
probabilities	O
based	O
on	O
the	O
recent	O
history	O
of	O
states	O
of	O
the	O
system	O
the	O
last	O
few	O
events	O
in	O
this	O
example	O
we	O
want	O
to	O
develop	O
an	O
hmm	O
that	O
attempts	O
to	O
assign	O
part	O
of	O
speech	O
tags	O
to	O
english	O
text	O
to	O
train	O
an	O
hmm	O
we	O
will	O
assume	O
that	O
we	O
have	O
a	O
large	O
set	O
of	O
training	O
data	O
that	O
is	O
a	O
sequence	O
of	O
words	O
and	O
a	O
parallel	O
sequence	O
of	O
manually	O
assigned	O
part	O
of	O
speech	O
tags	O
we	O
will	O
see	O
an	O
example	O
of	O
this	O
marked	O
up	O
training	O
text	O
that	O
looks	O
like	O
johnnnp	O
chasedvb	O
thedt	O
dognn	O
later	O
in	O
this	O
section	O
for	O
developing	O
a	O
sample	O
java	O
program	O
to	O
learn	O
how	O
to	O
train	O
a	O
hmm	O
we	O
assume	O
that	O
we	O
have	O
two	O
java	O
lists	O
words	O
and	O
tags	O
that	O
are	O
of	O
the	O
same	O
length	O
so	O
we	O
will	O
have	O
one	O
list	O
of	O
words	O
like	O
john	O
chased	O
the	O
dog	O
and	O
an	O
associated	O
list	O
of	O
part	O
hidden	O
markov	B
models	I
of	O
speech	O
tags	O
like	O
nnp	O
vb	O
dt	O
nn	O
once	O
the	O
hmm	O
is	O
trained	O
we	O
will	O
write	O
another	O
method	O
test	O
model	O
that	O
takes	O
as	O
input	O
a	O
java	O
vector	O
of	O
words	O
and	O
returns	O
a	O
java	O
vector	O
of	O
calculated	O
part	O
of	O
speech	O
tags	O
we	O
now	O
describe	O
the	O
assumptions	O
made	O
for	O
markov	B
models	I
and	O
hidden	O
markov	B
models	I
using	O
this	O
part	O
of	O
speech	O
tagging	B
problem	O
first	O
assume	O
that	O
the	O
desired	O
part	O
of	O
speech	O
tags	O
are	O
an	O
observable	O
sequence	O
like	O
tn	O
and	O
the	O
original	O
word	O
sequence	O
is	O
wn	O
we	O
will	O
also	O
assume	O
that	O
the	O
probability	O
of	O
tag	O
tm	O
having	O
a	O
specific	O
value	O
is	O
only	O
a	O
function	O
of	O
tm	O
and	O
wmandwm	O
here	O
we	O
are	O
only	O
using	O
the	O
last	O
state	O
in	O
some	O
applications	O
instead	O
of	O
using	O
the	O
last	O
observed	O
state	O
we	O
might	O
use	O
the	O
last	O
two	O
states	O
greatly	O
increasing	O
the	O
resources	O
time	O
and	O
memory	O
required	O
for	O
training	O
for	O
our	O
example	O
we	O
will	O
assume	O
that	O
we	O
have	O
a	O
finite	O
lexicon	O
of	O
words	O
we	O
will	O
use	O
a	O
hash	O
table	O
that	O
uses	O
the	O
words	O
in	O
the	O
lexicon	O
as	O
keys	O
and	O
the	O
values	O
are	O
the	O
possible	O
parts	O
of	O
speech	O
for	O
example	O
assuming	O
the	O
lexicon	O
hash	O
table	O
is	O
named	O
lexicon	O
we	O
use	O
the	O
notation	O
lexicon	O
a-word	O
list	O
of	O
possible	O
tags	O
table	O
shows	O
some	O
of	O
the	O
possible	O
tags	O
used	O
in	O
our	O
example	O
system	O
tag	O
name	O
part	O
of	O
speech	O
vb	O
nn	O
adj	O
adv	O
in	O
nnp	O
verb	O
noun	O
adjective	O
adverb	O
preposition	O
noun	O
table	O
sample	O
part	O
of	O
speech	O
tags	O
statistical	O
natural	O
language	O
processing	O
as	O
an	O
example	O
we	O
might	O
have	O
a	O
lexicon	O
entry	O
lexicon	O
bank	O
nn	O
vb	O
where	O
the	O
work	O
bank	O
could	O
be	O
a	O
noun	O
i	O
went	O
to	O
the	O
bank	O
or	O
a	O
verb	O
to	O
turn	O
bank	O
the	O
airplane	O
in	O
the	O
example	O
program	O
i	O
use	O
a	O
hash	O
table	O
to	O
hold	O
the	O
lexicon	O
in	O
the	O
file	O
markov	O
java	O
mapstringliststring	O
lexicon	O
new	O
hashtablestringliststring	O
another	O
hash	O
table	O
keeps	O
a	O
count	O
of	O
how	O
frequently	O
each	O
tag	O
is	O
used	O
mapstring	O
integer	O
tags	O
new	O
hashtablestring	O
integer	O
mapstring	O
integer	O
words	O
new	O
hashtablestring	O
integer	O
as	O
you	O
will	O
see	O
in	O
tables	O
and	O
we	O
will	O
be	O
operating	O
on	O
arrays	O
where	O
in	O
the	O
first	O
two	O
tables	O
the	O
rows	O
and	O
columns	O
represent	O
unique	O
tag	O
names	O
and	O
in	O
the	O
last	O
table	O
the	O
columns	O
represent	O
unique	O
words	O
and	O
the	O
columns	O
represent	O
unique	O
tag	O
names	O
we	O
use	O
the	O
following	O
data	O
structures	O
to	O
keep	O
a	O
list	O
of	O
unique	O
tags	O
and	O
words	O
hash	O
table	O
will	O
not	O
work	O
since	O
we	O
need	O
an	O
ordered	O
sequence	O
liststring	O
uniquetags	O
new	O
arrayliststring	O
liststring	O
uniquewords	O
new	O
arrayliststring	O
we	O
will	O
look	O
at	O
the	O
training	O
algorithm	O
and	O
implementation	O
in	O
the	O
next	O
section	O
training	O
hidden	O
markov	B
models	I
we	O
will	O
be	O
using	O
code	O
in	O
the	O
file	O
markov	O
java	O
and	O
i	O
will	O
show	O
snippets	O
of	O
this	O
file	O
with	O
comments	O
in	O
this	O
section	O
you	O
can	O
refer	O
to	O
the	O
source	O
code	O
for	O
the	O
complete	O
implementation	O
there	O
are	O
four	O
main	O
methods	O
in	O
the	O
class	O
m	O
arkov	O
build	O
words	O
and	O
tags	O
print	O
statistics	O
train	O
model	O
test	O
model	O
hidden	O
markov	B
models	I
jj	O
jj	O
in	O
vb	O
vbn	O
to	O
nnp	O
prp	O
nn	O
rb	O
vbg	O
dt	O
in	O
vb	O
vbn	O
to	O
nnp	O
prp	O
nn	O
rb	O
vbg	O
dt	O
table	O
transition	O
counts	O
from	O
the	O
first	O
tag	O
in	O
row	O
to	O
the	O
second	O
tag	O
in	O
column	O
we	O
see	O
that	O
the	O
transition	O
from	O
nnp	O
to	O
vb	O
is	O
common	O
in	O
order	O
to	O
train	O
a	O
markov	O
model	O
to	O
tag	O
parts	O
of	O
speech	O
we	O
start	O
by	O
building	O
a	O
twodimensional	O
array	O
using	O
the	O
method	O
build	O
words	O
and	O
tags	O
that	O
uses	O
the	O
following	O
array	O
to	O
count	O
transitions	O
part	O
of	O
this	O
array	O
was	O
seen	O
in	O
figure	O
tagt	O
ot	O
agt	O
ransitioncountuniquet	O
agcountuniquet	O
agcount	O
where	O
the	O
first	O
index	O
is	O
the	O
index	O
of	O
tagn	O
and	O
the	O
second	O
index	O
is	O
the	O
index	O
of	O
we	O
will	O
see	O
later	O
how	O
to	O
calculate	O
the	O
values	O
in	O
this	O
array	O
and	O
then	O
how	O
the	O
values	O
in	O
this	O
two-dimensional	O
array	O
will	O
be	O
used	O
to	O
calculate	O
the	O
probabilities	O
of	O
transitioning	O
from	O
one	O
tag	O
to	O
another	O
first	O
however	O
we	O
simply	O
use	O
this	O
array	O
for	O
counting	O
transitions	O
between	O
pairs	O
of	O
tags	O
the	O
purpose	O
of	O
the	O
training	O
process	O
is	O
to	O
fill	O
this	O
array	O
with	O
values	O
based	O
on	O
the	O
hand-tagged	O
training	O
file	O
training	O
datamarkovtagged	O
text	O
txt	O
that	O
looks	O
like	O
this	O
johnnnp	O
chasedvb	O
thedt	O
dognn	O
downrp	O
thedt	O
streetnn	O
iprp	O
sawvb	O
johnnnp	O
dogvb	O
marynnp	O
andcc	O
laterrb	O
marynnp	O
throwvb	O
thedt	O
ballnn	O
toto	O
johnnnp	O
onin	O
thedt	O
streetnn	O
the	O
method	O
build	O
words	O
and	O
tags	O
parses	O
this	O
text	O
file	O
and	O
fills	O
the	O
uniquet	O
ags	O
and	O
uniquew	O
ords	O
collections	O
the	O
method	O
train	O
model	O
starts	O
by	O
filling	O
the	O
tag	O
to	O
tag	O
transition	O
count	O
arraysee	O
table	O
statistical	O
natural	O
language	O
processing	O
tagt	O
ot	O
agt	O
ransitioncount	O
the	O
element	O
tagt	O
ot	O
agt	O
ransitioncountindext	O
is	O
incremented	O
whenever	O
we	O
find	O
a	O
transition	O
of	O
tagn	O
to	O
in	O
the	O
input	O
training	O
text	O
the	O
example	O
program	O
writes	O
a	O
spreadsheet	O
style	O
csv	O
file	O
for	O
this	O
and	O
other	O
two-dimensional	O
arrays	O
that	O
are	O
useful	O
for	O
viewing	O
intermediate	O
training	O
results	O
in	O
any	O
spreadsheet	O
program	O
we	O
normalized	O
the	O
data	O
seen	O
in	O
table	O
by	O
dividing	O
each	O
element	O
by	O
the	O
count	O
of	O
the	O
total	O
number	O
of	O
tags	O
this	O
normalized	O
data	O
can	O
be	O
seen	O
in	O
table	O
the	O
code	O
for	O
this	O
first	O
step	O
is	O
start	O
by	O
filling	O
in	O
the	O
tag	O
to	O
tag	O
transition	O
count	O
matrix	O
tagtotagtransitioncount	O
new	O
floatuniquetagcountuniquetagcount	O
ptagcounttagcount	O
puniquetagcountuniquetagcount	O
for	O
i	O
i	O
uniquetagcount	O
i	O
for	O
j	O
j	O
uniquetagcount	O
j	O
tagtotagtransitioncountij	O
string	O
int	O
inefficient	O
int	O
for	O
i	O
wordlist	O
size	O
i	O
i	O
taglist	O
geti	O
inefficient	O
writecsvfileuniquetags	O
uniquetags	O
tagtotagtransitioncount	O
note	O
that	O
all	O
calls	O
to	O
the	O
utility	O
method	O
w	O
ritecsv	O
f	O
ile	O
are	O
for	O
debug	O
only	O
if	O
you	O
use	O
this	O
example	O
on	O
a	O
large	O
training	O
set	O
a	O
large	O
text	O
corpus	O
like	O
treebank	O
of	O
hand-tagged	O
text	O
then	O
these	O
arrays	O
containing	O
transition	O
and	O
probability	O
values	O
will	O
be	O
very	O
large	O
so	O
viewing	O
them	O
with	O
a	O
spreadsheet	O
is	O
convenient	O
then	O
the	O
method	O
train	O
model	O
calculates	O
the	O
probabilities	O
of	O
transitioning	O
from	O
tagn	O
to	O
tagm	O
table	O
here	O
is	O
the	O
code	O
for	O
calculating	O
these	O
transition	O
probabilities	O
now	O
calculate	O
the	O
probabilities	O
of	O
transitioning	O
hidden	O
markov	B
models	I
jj	O
jj	O
in	O
vb	O
vbn	O
to	O
nnp	O
prp	O
nn	O
rb	O
vbg	O
dt	O
in	O
vb	O
vbn	O
to	O
nnp	O
prp	O
nn	O
rb	O
vbg	O
dt	O
table	O
normalize	O
data	O
in	O
table	O
to	O
get	O
probability	O
of	O
one	O
tag	O
in	O
row	O
transitioning	O
to	O
another	O
tag	O
in	O
column	O
from	O
tagn	O
to	O
tagm	O
new	O
floatuniquetagcountuniquetagcount	O
for	O
i	O
i	O
uniquetagcount	O
i	O
int	O
count	O
ptag	O
uniquetags	O
geti	O
countcount	O
for	O
j	O
j	O
uniquetagcount	O
j	O
tagtotagtransitioncountij	O
writecsvfileuniquetags	O
uniquetags	O
finally	O
in	O
the	O
method	O
train	O
model	O
we	O
complete	O
the	O
training	O
by	O
defining	O
the	O
array	O
probabilityw	O
ordgivent	O
aguniquew	O
ordcountuniquet	O
agcount	O
which	O
shows	O
the	O
probability	O
of	O
a	O
tag	O
at	O
index	O
n	O
producing	O
a	O
word	O
at	O
index	O
n	O
in	O
the	O
input	O
training	O
text	O
here	O
is	O
the	O
code	O
for	O
this	O
last	O
training	O
step	O
now	O
calculate	O
the	O
probability	O
of	O
a	O
word	O
given	O
statistical	O
natural	O
language	O
processing	O
went	O
mary	O
played	O
river	O
leave	O
dog	O
away	O
chased	O
at	O
tired	O
good	O
had	O
throw	O
from	O
so	O
stayed	O
absense	O
street	O
john	O
ball	O
on	O
cat	O
later	O
she	O
of	O
with	O
saw	O
jj	O
in	O
vb	O
vbn	O
to	O
nnp	O
prp	O
nn	O
rb	O
table	O
probabilities	O
of	O
words	O
having	O
specific	O
tags	O
only	O
a	O
few	O
tags	O
are	O
shown	O
in	O
this	O
table	O
hidden	O
markov	B
models	I
a	O
proceeding	O
tag	O
probabilitywordgiventag	O
new	O
floatuniquewordcountuniquetagcount	O
for	O
i	O
i	O
uniquewordcount	O
i	O
string	O
tag	O
uniquetags	O
getj	O
for	O
j	O
j	O
uniquetagcount	O
j	O
string	O
tag	O
uniquetags	O
getj	O
note	O
index	O
of	O
tag	O
is	O
one	O
less	O
than	O
index	O
of	O
emitted	O
word	O
we	O
are	O
testing	O
int	O
counttagoccurence	O
tags	O
gettag	O
float	O
wordwithtagoccurence	O
for	O
n	O
string	O
testword	O
wordlist	O
getn	O
string	O
testtag	O
taglist	O
getn	O
if	O
testtag	O
equalstag	O
wordwithtagoccurence	O
probabilitywordgiventagij	O
wordwithtagoccurence	O
writecsvfileuniquewords	O
uniquetags	O
probabilitywordgiventag	O
using	O
the	O
trained	O
markov	O
model	O
to	O
tag	O
text	O
from	O
section	O
we	O
have	O
the	O
probabilities	O
of	O
a	O
given	O
tag	O
being	O
assigned	O
to	O
words	O
in	O
the	O
lexicon	O
and	O
we	O
have	O
the	O
probability	O
of	O
a	O
given	O
tag	O
given	O
the	O
preceding	O
tag	O
we	O
will	O
use	O
this	O
information	O
in	O
a	O
brute	O
force	O
way	O
in	O
the	O
method	O
test	O
model	O
we	O
will	O
iterate	O
through	O
all	O
possible	O
tagging	B
possibilities	O
and	O
rate	O
them	O
using	O
the	O
formula	O
from	O
foundations	O
of	O
statistical	O
natural	O
language	O
processing	O
page	O
rating	O
p	O
p	O
p	O
is	O
the	O
probability	O
of	O
word	O
having	O
a	O
tag	O
value	O
tag	O
and	O
p	O
is	O
the	O
probability	O
of	O
tagi	O
following	O
tagi	O
we	O
can	O
simply	O
implement	O
two	O
nested	O
loops	O
over	O
all	O
possible	O
tags	O
for	O
each	O
input	O
word	O
and	O
use	O
the	O
tag	O
for	O
each	O
word	O
with	O
the	O
highest	O
rating	O
statistical	O
natural	O
language	O
processing	O
the	O
arrays	O
for	O
these	O
probabilities	O
in	O
markov	O
java	O
are	O
probabilityw	O
ordgivent	O
ag	O
and	O
probabilityt	O
ot	O
the	O
logic	B
for	O
scoring	O
a	O
specific	O
tagging	B
possibility	O
for	O
a	O
sequence	O
of	O
words	O
in	O
the	O
method	O
score	O
the	O
method	O
exponential	O
tagging	B
algorithm	O
is	O
the	O
top	O
level	O
api	O
for	O
tagging	B
words	O
please	O
note	O
that	O
the	O
word	O
sequence	O
that	O
you	O
pass	O
to	O
exponential	O
tagging	B
algorithm	O
must	O
not	O
contain	O
any	O
words	O
that	O
were	O
not	O
in	O
the	O
original	O
training	O
data	O
in	O
the	O
file	O
tagged	O
text	O
txt	O
public	O
liststring	O
exponential	O
tagging	B
algorithmliststring	O
words	O
possibletags	O
new	O
arraylistarrayliststring	O
int	O
num	O
words	O
size	O
indices	O
new	O
intnum	O
counts	O
new	O
intnum	O
int	O
best	O
indices	O
new	O
intnum	O
for	O
inum	O
i	O
indicesi	O
countsi	O
for	O
inum	O
i	O
string	O
word	O
words	O
geti	O
liststring	O
v	O
lexicon	O
getword	O
possible	O
tags	O
at	O
index	O
i	O
arrayliststring	O
new	O
arrayliststring	O
for	O
jv	O
size	O
j	O
string	O
tag	O
v	O
getj	O
if	O
false	O
countsi	O
possible	O
tags	O
at	O
index	O
i	O
system	O
out	O
print	O
word	O
word	O
tag	O
count	O
countsi	O
tags	O
for	O
j	O
system	O
out	O
print	O
system	O
out	O
println	O
float	O
best	O
score	O
do	O
system	O
out	O
printcurrent	O
indices	O
for	O
knum	O
k	O
system	O
out	O
print	O
indicesk	O
hidden	O
markov	B
models	I
system	O
out	O
println	O
float	O
score	O
scorewords	O
if	O
best	O
score	O
best	O
score	O
score	O
system	O
out	O
println	O
new	O
best	O
score	O
best	O
score	O
for	O
mnum	O
m	O
best	O
indicesm	O
indicesm	O
while	O
see	O
text	O
below	O
liststring	O
tags	O
new	O
arrayliststringnum	O
for	O
inum	O
i	O
liststring	O
v	O
possibletags	O
geti	O
tags	O
addv	O
getbest	O
indicesi	O
return	O
tags	O
the	O
method	O
incrementindices	O
is	O
responsible	O
for	O
generating	O
the	O
next	O
possible	O
tagging	B
for	O
a	O
sequence	O
of	O
words	O
each	O
word	O
in	O
a	O
sequence	O
can	O
have	O
one	O
or	O
more	O
possible	O
tags	O
the	O
method	O
incrementindices	O
counts	O
with	O
a	O
variable	O
base	O
per	O
digit	O
position	O
for	O
example	O
if	O
we	O
had	O
four	O
words	O
in	O
an	O
input	O
sequence	O
with	O
the	O
first	O
and	O
last	O
words	O
only	O
having	O
one	O
possible	O
tag	O
value	O
and	O
the	O
second	O
having	O
two	O
possible	O
tag	O
values	O
and	O
the	O
third	O
word	O
having	O
three	O
possible	O
tag	O
values	O
then	O
incrementindices	O
would	O
count	O
like	O
this	O
the	O
generated	O
indices	O
each	O
row	O
in	O
this	O
listing	O
are	O
stored	O
in	O
the	O
class	O
instance	O
variable	O
indices	O
which	O
is	O
used	O
in	O
method	O
score	O
increment	O
the	O
class	O
variable	O
indices	O
to	O
point	O
to	O
the	O
next	O
possible	O
set	O
of	O
tags	O
to	O
check	O
statistical	O
natural	O
language	O
processing	O
private	O
boolean	O
incrementindicesint	O
num	O
for	O
inum	O
i	O
if	O
indicesi	O
for	O
ji	O
j	O
indicesj	O
return	O
true	O
return	O
false	O
we	O
are	O
not	O
using	O
an	O
efficient	O
algorithm	O
if	O
the	O
word	O
sequence	O
is	O
long	O
in	O
practice	O
this	O
is	O
not	O
a	O
real	O
problem	O
because	O
you	O
can	O
break	O
up	O
long	O
texts	O
into	O
smaller	O
pieces	O
for	O
tagging	B
for	O
example	O
you	O
might	O
want	O
to	O
tag	O
just	O
one	O
sentence	O
at	O
a	O
time	O
information	O
gathering	O
we	O
saw	O
techniques	O
for	O
extracting	O
semantic	O
information	O
in	O
chapter	O
and	O
we	O
will	O
augment	O
that	O
material	O
with	O
the	O
use	O
of	O
reuters	O
open	B
calais	I
web	O
services	O
for	O
information	O
extraction	O
from	O
text	O
we	O
will	O
then	O
look	O
at	O
information	O
discovery	O
in	O
relational	B
database	I
indexing	B
and	O
search	B
tools	O
and	O
techniques	O
open	B
calais	I
the	O
open	B
calais	I
system	O
was	O
developed	O
by	O
clear	O
forest	O
acquired	O
by	O
reuters	O
reuters	O
allows	O
free	O
use	O
registration	O
of	O
their	O
named	B
entity	I
extraction	I
web	O
service	O
you	O
can	O
make	O
web	O
service	O
calls	O
a	O
day	O
you	O
need	O
to	O
sign	O
up	O
and	O
get	O
an	O
access	O
key	O
at	O
www	O
opencalais	O
com	O
starting	O
in	O
i	O
have	O
developed	O
a	O
similar	O
named	B
entity	I
extraction	I
system	O
www	O
knowledgebooks	O
com	O
and	O
i	O
sometimes	O
use	O
both	O
open	B
calais	I
and	O
my	O
own	O
system	O
together	O
the	O
example	O
program	O
in	O
this	O
section	O
expects	O
the	O
key	O
to	O
be	O
set	O
in	O
your	O
environment	O
on	O
my	O
macbook	O
i	O
set	O
i	O
show	O
a	O
fake	O
key	O
get	O
your	O
own	O
you	O
will	O
need	O
to	O
make	O
sure	O
that	O
this	O
value	O
can	O
be	O
obtained	O
from	O
a	O
system	O
getenv	O
call	O
the	O
open	B
calais	I
web	O
services	O
support	O
json	O
rest	O
and	O
soap	O
calls	O
i	O
will	O
use	O
the	O
rest	O
architectural	O
style	O
in	O
this	O
example	O
the	O
open	B
calais	I
server	O
returns	O
an	O
xml	O
rdf	B
payload	O
that	O
can	O
be	O
directly	O
loaded	O
into	O
rdf	B
data	O
stores	O
like	O
sesame	B
chapter	O
the	O
example	O
class	O
opencalaisclient	O
depends	O
on	O
a	O
trick	O
that	O
may	O
break	O
in	O
future	O
versions	O
of	O
the	O
open	B
calais	I
web	O
service	O
an	O
xml	O
comment	O
block	O
at	O
the	O
top	O
of	O
the	O
returned	O
rdf	B
payload	O
lists	O
the	O
types	O
of	O
entities	O
and	O
their	O
values	O
for	O
example	O
here	O
is	O
a	O
sample	O
of	O
the	O
header	O
comments	O
with	O
most	O
of	O
the	O
rdf	B
payload	O
removed	O
for	O
brevity	O
information	O
gathering	O
xmlnshttpclearforest	O
com	O
of	O
the	O
calais	O
web	O
service	O
is	O
governed	O
by	O
the	O
terms	O
of	O
service	O
located	O
at	O
httpwww	O
opencalais	O
com	O
by	O
using	O
this	O
service	O
or	O
the	O
results	O
of	O
the	O
service	O
you	O
agree	O
to	O
these	O
terms	O
of	O
service	O
country	O
france	O
united	O
states	O
spain	O
person	O
hillary	O
clinton	O
doug	O
hattaway	O
al	O
gore	O
city	O
san	O
francisco	O
provinceorstate	O
texas	O
here	O
we	O
will	O
simply	O
parse	O
out	O
the	O
relations	O
from	O
the	O
comment	O
block	O
if	O
you	O
want	O
to	O
use	O
sesame	B
to	O
parse	O
the	O
rdf	B
payload	O
and	O
load	O
it	O
into	O
a	O
local	O
rdf	B
repository	O
then	O
you	O
can	O
alternatively	O
load	O
the	O
returned	O
open	B
calais	I
response	O
by	O
modifying	O
the	O
example	O
code	O
from	O
chapter	O
using	O
stringreader	O
sr	O
new	O
stringreaderresult	O
repositoryconnection	O
connection	O
repository	O
getconnection	O
connection	O
addsr	O
rdfformat	O
rdfxml	O
here	O
are	O
a	O
few	O
code	O
snippets	O
code	O
please	O
see	O
the	O
java	O
source	O
file	O
for	O
more	O
details	O
from	O
the	O
file	O
opencalaisclient	O
java	O
public	O
hashtablestring	O
liststring	O
getpropertynamesandvaluesstring	O
text	O
throws	O
malformedurlexception	O
ioexception	O
hashtablestring	O
liststring	O
ret	O
new	O
hashtablestring	O
liststring	O
you	O
need	O
an	O
open	B
calais	I
license	O
key	O
the	O
following	O
code	O
sets	O
up	O
the	O
data	O
for	O
a	O
rest	O
style	O
web	O
service	O
call	O
and	O
opens	O
a	O
connection	O
to	O
the	O
server	O
makes	O
the	O
request	O
and	O
retrieves	O
the	O
response	O
in	O
the	O
string	O
variable	O
payload	O
the	O
java	O
libraries	O
for	O
handling	O
http	O
connections	O
make	O
it	O
simple	O
to	O
make	O
a	O
architecture	O
style	O
web	O
service	O
call	O
and	O
get	O
the	O
response	O
as	O
a	O
text	O
string	O
open	B
calais	I
string	O
licenseid	O
system	O
getenvopen	O
calais	O
key	O
string	O
content	O
text	O
string	O
paramsxml	O
stringbuilder	O
sb	O
new	O
stringbuildercontent	O
length	O
sb	O
appendlicenseid	O
appendlicenseid	O
sb	O
appendcontent	O
appendcontent	O
sb	O
appendparamsxml	O
appendparamsxml	O
string	O
payload	O
sb	O
tostring	O
urlconnection	O
connection	O
new	O
urlhttpapi	O
opencalais	O
com	O
openconnection	O
connection	O
addrequestpropertycontent-type	O
connection	O
addrequestpropertycontent-length	O
string	O
valueofpayload	O
length	O
connection	O
setdooutputtrue	O
outputstream	O
out	O
connection	O
getoutputstream	O
outputstreamwriter	O
writer	O
new	O
outputstreamwriterout	O
writer	O
writepayload	O
writer	O
flush	O
get	O
response	O
from	O
open	B
calais	I
server	O
string	O
result	O
new	O
scanner	O
connection	O
getinputstream	O
usedelimiterz	O
next	O
result	O
result	O
replacealllt	O
replaceallgt	O
the	O
text	O
that	O
we	O
are	O
parsing	O
looks	O
like	O
country	O
france	O
united	O
states	O
spain	O
person	O
hillary	O
clinton	O
doug	O
hattaway	O
al	O
gore	O
so	O
the	O
text	O
response	O
is	O
parsed	O
to	O
extract	O
a	O
list	O
of	O
values	O
for	O
each	O
property	O
name	O
contained	O
in	O
the	O
string	O
variable	O
result	O
int	O
result	O
indexofterms	O
of	O
service	O
--	O
information	O
gathering	O
result	O
indexof	O
--	O
int	O
result	O
indexof--	O
result	O
string	O
lines	O
result	O
splitn	O
for	O
line	O
lines	O
int	O
index	O
line	O
indexof	O
if	O
string	O
relation	O
index	O
trim	O
string	O
entities	O
line	O
substringindex	O
for	O
i	O
size	O
entities	O
length	O
i	O
size	O
i	O
entitiesi	O
entitiesi	O
trim	O
ret	O
putrelation	O
arrays	O
aslistentities	O
return	O
ret	O
again	O
i	O
want	O
to	O
point	O
out	O
that	O
the	O
above	O
code	O
depends	O
on	O
the	O
format	O
of	O
xml	O
comments	O
in	O
the	O
returned	O
xml	O
payload	O
so	O
this	O
code	O
may	O
break	O
in	O
the	O
future	O
and	O
require	O
modification	O
here	O
is	O
an	O
example	O
use	O
of	O
this	O
api	O
string	O
content	O
clinton	O
likes	O
to	O
remind	O
texans	O
that	O
mapstring	O
liststring	O
results	O
new	O
opencalaisclient	O
getpropertynamesandvaluescontent	O
for	O
key	O
results	O
keyset	O
system	O
out	O
println	O
key	O
results	O
getkey	O
in	O
this	O
example	O
the	O
string	O
value	O
assigned	O
to	O
the	O
variable	O
content	O
was	O
about	O
words	O
of	O
text	O
from	O
a	O
news	O
article	O
the	O
full	O
text	O
can	O
be	O
seen	O
in	O
the	O
example	O
data	O
files	O
the	O
output	O
of	O
this	O
example	O
code	O
is	O
person	O
clinton	O
doug	O
hattaway	O
al	O
gore	O
relations	O
city	O
francisco	O
country	O
united	O
states	O
spain	O
provinceorstate	O
information	O
discovery	O
in	O
relational	O
databases	O
there	O
are	O
several	O
ways	O
that	O
you	O
might	O
want	O
to	O
use	O
named	O
entity	O
identification	O
one	O
idea	O
is	O
to	O
create	O
a	O
search	B
engine	O
that	O
identifies	O
people	O
places	O
and	O
products	O
in	O
search	B
results	O
and	O
offers	O
users	O
a	O
linked	O
set	O
of	O
documents	O
or	O
web	O
pages	O
that	O
discuss	O
the	O
same	O
people	O
places	O
andor	O
products	O
another	O
idea	O
is	O
to	O
load	O
the	O
rdf	B
payload	O
returned	O
by	O
the	O
open	B
calais	I
web	O
service	O
calls	O
to	O
an	O
rdf	B
repository	O
and	O
support	O
sparql	B
queries	O
you	O
may	O
also	O
want	O
to	O
modify	O
any	O
content	O
management	O
systems	O
that	O
you	O
use	O
to	O
add	O
tags	O
for	O
documents	O
maintained	O
in	O
a	O
cms	O
using	O
open	B
calais	I
you	O
are	O
limited	O
to	O
the	O
types	O
of	O
entities	O
that	O
they	O
extract	O
this	O
limitation	O
is	O
one	O
reason	O
why	O
i	O
maintain	O
and	O
support	O
my	O
own	O
system	O
for	O
named	O
entity	O
and	O
classification	O
i	O
like	O
some	O
flexibility	O
in	O
the	O
type	O
of	O
semantic	O
information	O
that	O
i	O
extract	O
from	O
text	O
data	O
i	O
covered	O
some	O
of	O
the	O
techniques	O
that	O
i	O
use	O
in	O
my	O
own	O
work	O
in	O
section	O
if	O
you	O
decide	O
to	O
implement	O
your	O
own	O
system	O
to	O
replace	O
or	O
augment	O
open	B
calais	I
information	O
discovery	O
in	O
relational	O
databases	O
we	O
will	O
look	O
at	O
some	O
techniques	O
for	O
using	O
the	O
jdbc	B
meta-data	O
apis	O
to	O
explore	O
relational	B
database	I
resources	O
where	O
you	O
at	O
least	O
have	O
read	O
access	O
rights	O
in	O
order	O
to	O
make	O
installation	O
of	O
the	O
example	O
programs	O
easier	O
we	O
will	O
use	O
the	O
derby	B
pure	O
java	O
database	O
that	O
is	O
bundled	O
with	O
jdk	O
if	O
you	O
are	O
still	O
using	O
jdk	O
please	O
download	O
the	O
derby	B
jar	O
file	O
and	O
copy	O
it	O
to	O
the	O
lib	O
directory	O
for	O
the	O
java	O
book	O
examples	O
httpdb	O
apache	O
orgderby	O
there	O
are	O
small	O
differences	O
in	O
setting	O
up	O
a	O
jdbc	B
connection	O
to	O
an	O
embedded	O
derby	B
instance	O
rather	O
than	O
accessing	O
a	O
remote	O
server	O
these	O
differences	O
are	O
not	O
important	O
to	O
the	O
material	O
in	O
this	O
section	O
it	O
is	O
mostly	O
a	O
matter	O
of	O
changing	O
a	O
connection	O
call	O
i	O
will	O
use	O
two	O
xml	O
data	O
sources	O
on	O
us	O
states	O
and	O
the	O
cia	B
world	I
factbook	I
for	O
these	O
examples	O
and	O
start	O
with	O
the	O
program	O
to	O
insert	O
these	O
xml	O
data	O
files	O
into	O
the	O
relational	B
database	I
src-info-disc-rdbscreatesampledatabase	O
java	O
and	O
continue	O
with	O
a	O
program	O
to	O
print	O
out	O
all	O
metadata	O
that	O
is	O
implemented	O
in	O
the	O
files	O
src-info-disc-rdbsdumpmetadata	O
java	O
src-info-disc-rdbsdatabasediscovery	O
java	O
information	O
gathering	O
we	O
will	O
not	O
implement	O
any	O
specific	O
database	O
spidering	O
applications	O
but	O
i	O
will	O
provide	O
some	O
basic	O
access	O
techniques	O
and	O
give	O
you	O
some	O
ideas	O
for	O
using	O
database	O
meta	O
data	O
in	O
your	O
own	O
projects	O
creating	O
a	O
test	O
derby	B
database	O
using	O
the	O
cia	B
world	I
factbook	I
and	O
data	O
on	O
us	O
states	O
the	O
file	O
test	O
dataxmlfactbook	O
xml	O
contains	O
data	O
that	O
i	O
obtained	O
from	O
the	O
factbook	O
web	O
site	O
and	O
converted	O
to	O
xml	O
this	O
xml	O
file	O
contains	O
data	O
for	O
individual	O
countries	O
and	O
a	O
few	O
general	O
regions	O
namearuba	O
locationcaribbean	O
island	O
in	O
the	O
backgrounddiscovered	O
and	O
claimed	O
climatetropical	O
marine	O
little	O
seasonal	O
terrainflat	O
scant	O
vegetation	O
resourcesnegl	O
white	O
sandy	O
beaches	O
hazardslies	O
outside	O
the	O
caribbean	O
hurricane	O
belt	O
est	O
governmentparliamentary	O
democracy	O
economytourism	O
is	O
the	O
mainstay	O
of	O
the	O
aruban	O
est	O
languagesdutch	O
papiamento	O
religionsroman	O
catholic	O
protestant	O
capitaloranjestad	O
est	O
industriestourism	O
transshipment	O
facilities	O
agriculturealoes	O
livestock	O
fish	O
billion	O
oil	O
reexports	O
billion	O
est	O
million	O
million	O
note	O
the	O
netherlands	O
internet	O
code	O
aw	O
information	O
discovery	O
in	O
relational	O
databases	O
the	O
other	O
sample	O
xml	O
file	O
usstates	O
xml	O
contains	O
information	O
on	O
individual	O
states	O
namealabama	O
abbreval	O
capitalmontgomery	O
industrypaper	O
lumber	O
and	O
wood	O
products	O
agriculturepoultry	O
and	O
eggs	O
cattle	O
the	O
example	O
class	O
createsampledatabases	O
reads	O
both	O
the	O
files	O
factbook	O
xml	O
and	O
ussattes	O
xml	O
and	O
creates	O
two	O
tables	O
factbook	O
and	O
states	O
in	O
a	O
test	O
database	O
the	O
implementation	O
of	O
this	O
utility	O
class	O
is	O
simple	O
just	O
parsing	O
xml	O
data	O
and	O
making	O
jdbc	B
calls	O
to	O
create	O
and	O
populate	O
the	O
two	O
tables	O
you	O
can	O
look	O
at	O
the	O
java	O
source	O
file	O
for	O
details	O
using	O
the	O
jdbc	B
meta	O
data	O
apis	O
this	O
chapter	O
is	O
about	O
processing	O
and	O
using	O
data	O
from	O
multiple	O
sources	O
with	O
the	O
wealth	O
of	O
data	O
stored	O
in	O
relational	B
database	I
systems	O
it	O
is	O
important	O
to	O
know	O
how	O
to	O
spider	O
databases	O
much	O
as	O
you	O
might	O
need	O
to	O
spider	O
data	O
stored	O
on	O
specific	O
web	O
sites	O
the	O
example	O
class	O
dumpm	O
etadata	O
shows	O
you	O
how	O
to	O
discover	O
tables	O
information	O
about	O
table	O
columns	O
and	O
query	O
all	O
tables	O
in	O
a	O
specific	O
database	O
the	O
constructor	O
of	O
class	O
dumpm	O
etadata	O
is	O
called	O
with	O
a	O
database	O
uri	O
and	O
prints	O
meta	O
data	O
and	O
data	O
to	O
standard	O
output	O
this	O
code	O
should	O
be	O
portable	O
to	O
database	O
systems	O
other	O
than	O
derby	B
by	O
changing	O
the	O
driver	O
name	O
class	O
dumpmetadata	O
public	O
dumpmetadatastring	O
connectionurl	O
throws	O
sqlexception	O
classnotfoundexception	O
class	O
fornameorg	O
apache	O
derby	B
jdbc	B
embeddeddriver	O
connection	O
conn	O
drivermanager	O
getconnectionconnectionurl	O
system	O
out	O
printlnconn	O
conn	O
statement	O
s	O
conn	O
createstatement	O
databasemetadata	O
md	O
conn	O
getmetadata	O
discovery	O
all	O
table	O
names	O
in	O
this	O
database	O
liststring	O
tablenames	O
new	O
information	O
gathering	O
we	O
will	O
use	O
the	O
method	O
gett	O
ables	O
to	O
fetch	O
a	O
list	O
of	O
all	O
tables	O
in	O
the	O
database	O
the	O
four	O
arguments	O
are	O
string	O
catalog	O
can	O
be	O
used	O
when	O
database	O
systems	O
support	O
catalogs	O
we	O
will	O
use	O
null	O
to	O
act	O
as	O
a	O
wildcard	O
match	O
string	O
schemapattern	O
can	O
be	O
used	O
when	O
database	O
systems	O
support	O
schemas	O
we	O
will	O
use	O
null	O
to	O
act	O
as	O
a	O
wildcard	O
match	O
string	O
tablenamepattern	O
a	O
pattern	O
to	O
match	O
table	O
names	O
we	O
will	O
use	O
as	O
a	O
wildcard	O
match	O
string	O
types	O
the	O
types	O
of	O
table	O
names	O
to	O
return	O
possible	O
values	O
include	O
table	O
view	O
alias	O
synonym	O
and	O
system	O
table	O
the	O
method	O
gett	O
ables	O
returns	O
a	O
resultset	O
so	O
we	O
iterate	O
through	O
returned	O
values	O
just	O
as	O
you	O
would	O
in	O
a	O
regular	O
sql	O
query	O
using	O
the	O
jdbc	B
apis	O
resultset	O
table	O
rs	O
md	O
gettablesnull	O
null	O
new	O
stringtable	O
while	O
system	O
out	O
printlntable	O
loop	O
over	O
all	O
tables	O
printing	O
column	O
meta	O
data	O
and	O
the	O
first	O
row	O
for	O
tablename	O
tablenames	O
system	O
out	O
printlnnn	O
processing	O
table	O
tablename	O
string	O
query	O
from	O
tablename	O
system	O
out	O
printlnquery	O
resultset	O
rs	O
s	O
executequeryquery	O
resultsetmetadata	O
table	O
meta	O
rs	O
getmetadata	O
int	O
columncount	O
table	O
meta	O
getcolumncount	O
system	O
out	O
printlnncolumn	O
meta	O
data	O
for	O
table	O
liststring	O
columnnames	O
new	O
columnnames	O
add	O
for	O
colcolumncount	O
col	O
system	O
out	O
printlncolumn	O
col	O
name	O
table	O
meta	O
getcolumnlabelcol	O
system	O
out	O
println	O
column	O
data	O
type	O
columnnames	O
addtable	O
meta	O
getcolumnlabelcol	O
table	O
meta	O
getcolumntypenamecol	O
information	O
discovery	O
in	O
relational	O
databases	O
system	O
out	O
printlnnfirst	O
row	O
in	O
table	O
if	O
for	O
colcolumncount	O
col	O
system	O
out	O
println	O
columnnames	O
getcol	O
rs	O
getstringcol	O
output	O
looks	O
like	O
this	O
table	O
factbook	O
table	O
usstates	O
processing	O
table	O
factbook	O
select	O
from	O
factbook	O
column	O
meta	O
data	O
for	O
table	O
column	O
name	O
name	O
column	O
data	O
type	O
varchar	O
column	O
name	O
location	O
column	O
data	O
type	O
varchar	O
column	O
name	O
export	O
column	O
data	O
type	O
bigint	O
column	O
name	O
import	O
column	O
data	O
type	O
bigint	O
column	O
name	O
debt	O
column	O
data	O
type	O
bigint	O
column	O
name	O
aid	O
column	O
data	O
type	O
bigint	O
column	O
name	O
unemployment	O
percent	O
column	O
data	O
type	O
integer	O
column	O
name	O
inflation	O
percent	O
column	O
data	O
type	O
integer	O
first	O
row	O
in	O
table	O
name	O
aruba	O
location	O
caribbean	O
island	O
in	O
the	O
caribbean	O
sea	O
north	O
of	O
venezuela	O
export	O
information	O
gathering	O
import	O
debt	O
aid	O
unemployment	O
percent	O
inflation	O
percent	O
processing	O
table	O
usstates	O
select	O
from	O
usstates	O
column	O
meta	O
data	O
for	O
table	O
column	O
name	O
name	O
column	O
data	O
type	O
varchar	O
column	O
name	O
abbreviation	O
column	O
data	O
type	O
char	O
column	O
name	O
industry	O
column	O
data	O
type	O
varchar	O
column	O
name	O
agriculture	O
column	O
data	O
type	O
varchar	O
column	O
name	O
population	O
column	O
data	O
type	O
bigint	O
first	O
row	O
in	O
table	O
name	O
alabama	O
abbreviation	O
al	O
industry	O
paper	O
lumber	O
and	O
wood	O
products	O
mining	O
rubber	O
and	O
plastic	O
products	O
transportation	O
equipment	O
apparel	O
agriculture	O
poultry	O
and	O
eggs	O
cattle	O
nursery	O
stock	O
peanuts	O
cotton	O
vegetables	O
milk	O
soybeans	O
population	O
using	O
the	O
jdbc	B
meta	O
data	O
apis	O
is	O
a	O
simple	O
technique	O
but	O
can	O
be	O
very	O
useful	O
for	O
both	O
searching	O
many	O
tables	O
for	O
specific	O
column	O
names	O
and	O
for	O
pulling	O
meta	O
data	O
and	O
row	O
data	O
into	O
local	O
search	B
engines	O
while	O
most	O
relational	O
databases	O
provide	O
support	O
for	O
free	O
text	O
search	B
of	O
text	O
fields	O
in	O
a	O
database	O
it	O
is	O
often	O
better	O
to	O
export	O
specific	O
text	O
columns	O
in	O
a	O
table	O
to	O
an	O
external	O
search	B
engine	O
we	O
will	O
spend	O
the	O
rest	O
of	O
this	O
chapter	O
on	O
index	O
and	O
search	B
techniques	O
while	O
we	O
usually	O
index	O
web	O
pages	O
and	O
local	O
document	O
repositories	O
keep	O
in	O
mind	O
that	O
data	O
in	O
relational	O
databases	O
can	O
also	O
easily	O
be	O
indexed	O
either	O
with	O
hand	O
written	O
export	O
utilities	O
or	O
automated	O
techniques	O
using	O
the	O
jdbc	B
meta-data	O
apis	O
that	O
we	O
used	O
in	O
this	O
section	O
down	O
to	O
the	O
bare	O
metal	O
in-memory	O
index	O
and	O
search	B
using	O
the	O
meta	O
data	O
apis	O
to	O
discern	O
entity	O
relationships	O
when	O
database	O
schemas	O
are	O
defined	O
it	O
is	O
usually	O
a	O
top	O
down	O
approach	O
entities	O
and	O
their	O
relationships	O
are	O
modeled	O
and	O
then	O
represented	O
as	O
relational	B
database	I
tables	O
when	O
automatically	O
searching	O
remote	O
databases	O
for	O
information	O
we	O
might	O
need	O
to	O
discern	O
which	O
entities	O
and	O
their	O
relationships	O
exist	O
depending	O
on	O
table	O
and	O
column	O
names	O
this	O
is	O
likely	O
to	O
be	O
a	O
domain	O
specific	O
development	O
effort	O
while	O
it	O
is	O
feasible	O
and	O
probably	O
useful	O
to	O
build	O
a	O
database	O
spider	O
for	O
databases	O
in	O
a	O
limited	O
domain	O
example	O
car	O
parts	O
or	O
travel	O
destinations	O
to	O
discern	O
entity	O
models	O
and	O
their	O
relations	O
it	O
is	O
probably	O
not	O
possible	O
without	O
requiring	O
huge	O
resources	O
to	O
build	O
a	O
system	O
that	O
handles	O
multiple	O
data	O
domains	O
the	O
expression	O
dark	B
web	I
refers	O
to	O
information	O
on	O
the	O
web	O
that	O
is	O
usually	O
not	O
spidered	O
information	O
that	O
lives	O
mostly	O
in	O
relational	O
databases	O
and	O
often	O
behind	O
query	O
forms	O
while	O
there	O
are	O
current	O
efforts	O
by	O
search	B
engine	O
companies	O
to	O
determine	O
the	O
data	O
domains	O
of	O
databases	O
hidden	O
behind	O
user	O
entry	O
forms	O
using	O
surrounding	O
text	O
for	O
most	O
organizations	O
this	O
is	O
simply	O
too	O
large	O
a	O
problem	O
to	O
solve	O
on	O
the	O
other	O
hand	O
using	O
the	O
meta	O
data	O
of	O
databases	O
that	O
you	O
or	O
your	O
organization	O
have	O
read	O
access	O
to	O
for	O
database	O
spidering	O
is	O
a	O
more	O
tractable	O
problem	O
down	O
to	O
the	O
bare	O
metal	O
in-memory	O
index	O
and	O
search	B
indexing	B
and	O
search	B
technology	O
is	O
used	O
in	O
a	O
wide	O
range	O
of	O
applications	O
in	O
order	O
to	O
get	O
a	O
good	O
understanding	O
of	O
index	O
and	O
search	B
we	O
will	O
design	O
and	O
implement	O
an	O
in-memory	O
library	O
in	O
this	O
section	O
in	O
section	O
we	O
will	O
take	O
a	O
quick	O
look	O
at	O
the	O
lucene	B
library	O
and	O
in	O
section	O
we	O
will	O
look	O
at	O
client	O
programs	O
using	O
the	O
nutch	B
indexing	B
and	O
search	B
system	O
that	O
is	O
based	O
on	O
lucene	B
we	O
need	O
a	O
way	O
to	O
represent	O
data	O
to	O
be	O
indexed	O
we	O
will	O
use	O
a	O
simple	O
packagevisible	O
class	O
getterssetters	O
assumed	O
to	O
be	O
in	O
the	O
same	O
package	O
as	O
the	O
indexing	B
and	O
search	B
class	O
class	O
testdocument	O
int	O
id	O
string	O
text	O
static	O
int	O
count	O
testdocumentstring	O
text	O
this	O
text	O
text	O
information	O
gathering	O
id	O
count	O
public	O
string	O
tostring	O
int	O
len	O
text	O
length	O
if	O
len	O
return	O
id	O
id	O
we	O
will	O
write	O
a	O
class	O
inm	O
emorysearch	O
that	O
indexes	O
instances	O
of	O
the	O
t	O
estdocument	O
class	O
and	O
supplies	O
an	O
api	O
for	O
search	B
the	O
first	O
decision	O
to	O
make	O
is	O
how	O
to	O
store	O
the	O
index	O
that	O
maps	O
search	B
terms	O
to	O
documents	O
that	O
contain	O
the	O
search	B
terms	O
one	O
simple	O
idea	O
would	O
be	O
to	O
use	O
a	O
map	O
to	O
maintain	O
a	O
set	O
of	O
document	O
ids	O
for	O
each	O
search	B
term	O
something	O
like	O
mapstring	O
setinteger	O
index	O
this	O
would	O
be	O
easy	O
to	O
implement	O
but	O
leaves	O
much	O
to	O
be	O
desired	O
so	O
we	O
will	O
take	O
a	O
different	O
approach	O
we	O
would	O
like	O
to	O
rank	O
documents	O
by	O
relevance	O
but	O
a	O
relevance	O
measure	O
just	O
based	O
on	O
containing	O
all	O
most	O
of	O
the	O
search	B
terms	O
is	O
weak	O
we	O
will	O
improve	O
the	O
index	O
by	O
also	O
storing	O
a	O
score	O
of	O
how	O
many	O
times	O
a	O
search	B
term	O
occurs	O
in	O
a	O
document	O
scaled	O
by	O
the	O
number	O
of	O
words	O
in	O
a	O
document	O
since	O
our	O
document	O
model	O
does	O
not	O
contain	O
links	O
to	O
other	O
documents	O
we	O
will	O
not	O
use	O
a	O
google-like	O
page	O
ranking	O
algorithm	O
that	O
increases	O
the	O
relevance	O
of	O
search	B
results	O
based	O
on	O
the	O
number	O
of	O
incoming	O
links	O
to	O
matched	O
documents	O
we	O
will	O
use	O
a	O
utility	O
class	O
assuming	O
same	O
package	O
data	O
visibility	O
to	O
hold	O
a	O
document	O
id	O
and	O
a	O
search	B
term	O
count	O
i	O
used	O
generics	O
for	O
the	O
first	O
version	O
of	O
this	O
class	O
to	O
allow	O
alternative	O
types	O
for	O
counting	O
word	O
use	O
in	O
a	O
document	O
and	O
later	O
changed	O
the	O
code	O
to	O
hardwiring	O
the	O
types	O
for	O
id	O
and	O
word	O
count	O
to	O
native	O
integer	O
values	O
for	O
runtime	O
efficiency	O
and	O
to	O
use	O
less	O
memory	O
here	O
is	O
the	O
second	O
version	O
of	O
the	O
code	O
class	O
idcount	O
implements	O
comparableidcount	O
int	O
id	O
int	O
count	O
public	O
idcountint	O
k	O
int	O
v	O
this	O
id	O
k	O
this	O
count	O
v	O
public	O
string	O
tostring	O
return	O
id	O
count	O
down	O
to	O
the	O
bare	O
metal	O
in-memory	O
index	O
and	O
search	B
public	O
int	O
comparetoidcount	O
o	O
don	O
t	O
use	O
o	O
count	O
count	O
avoid	O
overflows	O
if	O
count	O
return	O
if	O
count	O
return	O
return	O
we	O
can	O
now	O
define	O
the	O
data	O
structure	O
for	O
our	O
index	O
mapstringtreesetidcount	O
index	O
new	O
hashtablestring	O
treesetidcount	O
the	O
following	O
code	O
is	O
used	O
to	O
add	O
documents	O
to	O
the	O
index	O
i	O
score	O
word	O
counts	O
by	O
dividing	O
by	O
the	O
maximum	O
word	O
size	O
i	O
expect	O
for	O
documents	O
in	O
principle	O
it	O
would	O
be	O
better	O
to	O
use	O
a	O
f	O
loat	O
value	O
but	O
i	O
prefer	O
working	O
with	O
and	O
debugging	O
code	O
using	O
integers	O
debug	O
output	O
is	O
more	O
readable	O
the	O
reason	O
why	O
the	O
number	O
of	O
times	O
a	O
word	O
appears	O
in	O
a	O
document	O
needs	O
to	O
be	O
scaled	O
by	O
the	O
the	O
size	O
of	O
the	O
document	O
is	O
fairly	O
obvious	O
if	O
a	O
given	O
word	O
appears	O
once	O
in	O
a	O
document	O
with	O
words	O
and	O
once	O
in	O
another	O
document	O
with	O
words	O
then	O
the	O
word	O
is	O
much	O
more	O
relevant	O
to	O
finding	O
the	O
first	O
document	O
public	O
void	O
addtestdocument	O
document	O
mapstringinteger	O
wcount	O
new	O
hashtablestringinteger	O
stringtokenizer	O
st	O
new	O
stringtokenizerdocument	O
text	O
tolowercase	O
int	O
num	O
words	O
st	O
counttokens	O
if	O
return	O
while	O
string	O
word	O
st	O
nexttoken	O
system	O
out	O
printlnword	O
if	O
wcount	O
putword	O
wcount	O
getword	O
num	O
words	O
else	O
wcount	O
putword	O
max	O
words	O
per	O
document	O
num	O
words	O
for	O
word	O
wcount	O
keyset	O
treesetidcount	O
ts	O
information	O
gathering	O
if	O
ts	O
index	O
getword	O
else	O
ts	O
new	O
treesetidcount	O
index	O
putword	O
ts	O
ts	O
addnew	O
idcountdocument	O
id	O
wcount	O
getword	O
max	O
words	O
per	O
document	O
num	O
words	O
if	O
a	O
word	O
is	O
in	O
the	O
index	O
hash	O
table	O
then	O
the	O
hash	O
value	O
will	O
be	O
a	O
sorted	O
t	O
reeset	O
of	O
idcount	O
objects	O
sort	O
order	O
is	O
in	O
decreasing	O
size	O
of	O
the	O
scaled	O
word	O
count	O
notice	O
that	O
i	O
converted	O
all	O
tokenized	O
words	O
in	O
document	O
text	O
to	O
lower	O
case	O
but	O
i	O
did	O
not	O
stem	O
the	O
words	O
for	O
some	O
applications	O
you	O
may	O
want	O
to	O
use	O
a	O
word	O
stemmer	O
as	O
we	O
did	O
in	O
section	O
i	O
used	O
the	O
temporary	O
hash	O
table	O
wcount	O
to	O
hold	O
word	O
counts	O
for	O
the	O
document	O
being	O
indexed	O
and	O
once	O
wcount	O
was	O
created	O
and	O
filled	O
then	O
looked	O
up	O
the	O
t	O
reeset	O
for	O
each	O
word	O
it	O
if	O
it	O
did	O
not	O
yet	O
exist	O
and	O
added	O
in	O
new	O
idcount	O
objects	O
to	O
represent	O
the	O
currently	O
indexed	O
document	O
and	O
the	O
scaled	O
number	O
of	O
occurrences	O
for	O
the	O
word	O
that	O
is	O
the	O
index	O
hash	O
table	O
key	O
for	O
development	O
it	O
is	O
good	O
to	O
have	O
a	O
method	O
that	O
prints	O
out	O
the	O
entire	O
index	O
the	O
following	O
method	O
serves	O
this	O
purpose	O
public	O
void	O
debug	O
system	O
out	O
println	O
debug	O
dump	O
of	O
search	B
indexn	O
for	O
word	O
index	O
keyset	O
system	O
out	O
printlnn	O
word	O
treesetidcount	O
ts	O
index	O
getword	O
iteratoridcount	O
iter	O
ts	O
iterator	O
while	O
system	O
out	O
println	O
iter	O
next	O
here	O
are	O
a	O
few	O
lines	O
of	O
example	O
code	O
to	O
create	O
an	O
index	O
and	O
add	O
three	O
test	O
documents	O
inmemorysearch	O
ims	O
new	O
inmemorysearch	O
testdocument	O
new	O
testdocumentthis	O
is	O
a	O
test	O
for	O
index	O
and	O
a	O
test	O
for	O
search	B
down	O
to	O
the	O
bare	O
metal	O
in-memory	O
index	O
and	O
search	B
testdocument	O
new	O
testdocumentplease	O
test	O
the	O
index	O
code	O
testdocument	O
new	O
testdocumentplease	O
test	O
the	O
index	O
code	O
before	O
tomorrow	O
ims	O
debug	O
the	O
method	O
debug	O
produces	O
the	O
following	O
output	O
is	O
not	O
shown	O
for	O
brevity	O
remember	O
that	O
the	O
variable	O
idcount	O
contains	O
a	O
data	O
pair	O
the	O
document	O
integer	O
id	O
and	O
a	O
scaled	O
integer	O
word	O
count	O
in	O
the	O
document	O
also	O
notice	O
that	O
the	O
t	O
reeset	O
is	O
sorted	O
in	O
descending	O
order	O
of	O
scaled	O
word	O
count	O
debug	O
dump	O
of	O
search	B
index	O
code	O
please	O
index	O
given	O
the	O
hash	O
table	O
index	O
it	O
is	O
simple	O
to	O
take	O
a	O
list	O
of	O
search	B
words	O
and	O
return	O
a	O
sorted	O
list	O
of	O
matching	O
documents	O
we	O
will	O
use	O
a	O
temporary	O
hash	O
table	O
ordered	O
results	O
that	O
maps	O
document	O
ids	O
to	O
the	O
current	O
search	B
result	O
score	O
for	O
that	O
document	O
we	O
tokenize	B
the	O
string	O
containing	O
search	B
terms	O
and	O
for	O
each	O
search	B
word	O
we	O
look	O
up	O
it	O
exists	O
a	O
score	O
count	O
in	O
the	O
temporary	O
map	O
ordered	O
results	O
a	O
new	O
idcount	O
object	O
otherwise	O
and	O
increment	O
the	O
score	O
count	O
note	O
that	O
the	O
map	O
ordered	O
results	O
is	O
ordered	O
later	O
by	O
sorting	O
the	O
keys	O
by	O
the	O
hash	O
table	O
value	O
public	O
listinteger	O
searchstring	O
search	B
terms	O
int	O
max	O
terms	O
listinteger	O
ret	O
new	O
arraylistintegermax	O
terms	O
information	O
gathering	O
temporary	O
tree	O
set	O
to	O
keep	O
ordered	O
search	B
results	O
final	O
mapintegerinteger	O
ordered	O
results	O
new	O
stringtokenizer	O
st	O
new	O
stringtokenizersearch	O
terms	O
tolowercase	O
while	O
string	O
word	O
st	O
nexttoken	O
iteratoridcount	O
word	O
counts	O
index	O
getword	O
iterator	O
while	O
idcount	O
ts	O
word	O
counts	O
next	O
integer	O
id	O
ts	O
id	O
if	O
ordered	O
results	O
putid	O
ordered	O
results	O
getid	O
ts	O
count	O
else	O
ordered	O
results	O
putid	O
ts	O
count	O
listinteger	O
keys	O
new	O
arraylistintegerordered	O
results	O
keyset	O
collections	O
sortkeys	O
new	O
comparatorinteger	O
public	O
int	O
compareinteger	O
a	O
integer	O
b	O
return	O
comparetoordered	O
results	O
getb	O
int	O
count	O
result	O
loop	O
for	O
id	O
keys	O
if	O
max	O
terms	O
break	O
result	O
loop	O
ret	O
addid	O
return	O
ret	O
for	O
the	O
previous	O
example	O
using	O
the	O
three	O
short	O
test	O
documents	O
we	O
can	O
search	B
the	O
index	O
in	O
this	O
case	O
for	O
a	O
maximum	O
of	O
results	O
using	O
listinteger	O
search	B
results	O
system	O
out	O
printlnresult	O
doc	O
ids	O
ims	O
searchtest	O
index	O
indexing	B
and	O
search	B
using	O
embedded	O
lucene	B
getting	O
the	O
results	O
result	O
doc	O
ids	O
if	O
you	O
want	O
to	O
use	O
this	O
bare	O
metal	O
indexing	B
and	O
search	B
library	O
there	O
are	O
a	O
few	O
details	O
that	O
still	O
need	O
to	O
be	O
implemented	O
you	O
will	O
probably	O
want	O
to	O
persist	O
the	O
t	O
estdocument	O
objects	O
and	O
this	O
can	O
be	O
done	O
simply	O
by	O
tagging	B
the	O
class	O
with	O
the	O
serializable	O
interface	O
and	O
writing	O
serialized	O
files	O
using	O
the	O
document	O
id	O
as	O
the	O
file	O
name	O
you	O
might	O
also	O
want	O
to	O
serialize	O
the	O
inm	O
emorysearch	O
class	O
while	O
i	O
sometimes	O
implement	O
custom	O
indexing	B
and	O
search	B
libraries	O
for	O
projects	O
that	O
require	O
a	O
lightweight	O
and	O
flexible	O
approach	O
to	O
indexing	B
and	O
search	B
as	O
we	O
did	O
in	O
this	O
section	O
i	O
usually	O
use	O
either	O
the	O
lucene	B
search	B
library	O
or	O
a	O
combination	O
of	O
the	O
hibernate	O
object	O
relational	O
mapping	O
library	O
with	O
lucene	B
search	B
we	O
will	O
look	O
at	O
lucene	B
in	O
section	O
indexing	B
and	O
search	B
using	O
embedded	O
lucene	B
books	O
have	O
been	O
written	O
on	O
the	O
lucene	B
indexing	B
and	O
search	B
library	O
and	O
in	O
this	O
short	O
section	O
we	O
will	O
look	O
at	O
a	O
brief	O
application	O
example	O
that	O
you	O
can	O
use	O
for	O
a	O
quick	O
reference	O
for	O
starting	O
lucene	B
based	O
projects	O
i	O
consider	O
lucene	B
to	O
be	O
an	O
important	O
tool	O
for	O
building	O
intelligent	O
text	O
processing	O
systems	O
lucene	B
supports	O
the	O
concept	O
of	O
a	O
document	O
with	O
one	O
or	O
more	O
fields	O
fields	O
can	O
either	O
be	O
indexed	O
or	O
not	O
and	O
optionally	O
stored	O
in	O
a	O
disk-based	O
index	O
searchable	O
fields	O
can	O
be	O
automatically	O
tokenized	O
using	O
either	O
one	O
of	O
lucene	B
s	O
built	O
in	O
text	O
tokenizers	O
or	O
you	O
can	O
supply	O
your	O
customized	O
tokenizer	O
when	O
i	O
am	O
starting	O
a	O
new	O
project	O
using	O
lucene	B
i	O
begin	O
by	O
using	O
a	O
template	O
class	O
lucenem	O
anager	O
that	O
you	O
can	O
find	O
in	O
the	O
file	O
src-index-searchlucenemanager	O
java	O
i	O
usually	O
clone	O
this	O
file	O
and	O
make	O
any	O
quick	O
changes	O
for	O
adding	O
fields	O
to	O
documents	O
etc	O
we	O
will	O
look	O
at	O
a	O
few	O
important	O
code	O
snippets	O
in	O
the	O
class	O
lucenem	O
anager	O
and	O
you	O
can	O
refer	O
to	O
the	O
source	O
code	O
for	O
more	O
details	O
we	O
will	O
start	O
by	O
looking	O
at	O
how	O
indices	O
are	O
stored	O
and	O
managed	O
on	O
disk	O
the	O
class	O
constructor	O
stores	O
the	O
file	O
path	O
to	O
the	O
lucene	B
disk	O
index	O
you	O
can	O
optionally	O
use	O
method	O
createandclearluceneindex	O
to	O
delete	O
an	O
existing	O
lucene	B
index	O
it	O
exists	O
and	O
creates	O
an	O
empty	O
index	O
public	O
lucenemanagerstring	O
data	O
store	O
file	O
root	O
this	O
data	O
store	O
file	O
root	O
data	O
store	O
file	O
root	O
information	O
gathering	O
public	O
void	O
createandclearluceneindex	O
throws	O
corruptindexexception	O
lockobtainfailedexception	O
ioexception	O
deletefilepathnew	O
filedata	O
store	O
file	O
root	O
file	O
index	O
dir	O
new	O
filedata	O
store	O
file	O
root	O
new	O
indexwriterindex	O
dir	O
new	O
standardanalyzer	O
true	O
close	O
if	O
you	O
are	O
using	O
an	O
existing	O
disk-based	O
index	O
that	O
you	O
want	O
to	O
reuse	O
then	O
do	O
not	O
call	O
method	O
createandclearluceneindex	O
the	O
last	O
argument	O
to	O
the	O
class	O
indexw	O
riter	O
constructor	O
is	O
a	O
flag	O
to	O
create	O
a	O
new	O
index	O
overwriting	O
any	O
existing	O
indices	O
i	O
use	O
the	O
utility	O
method	O
deletef	O
ilep	O
ath	O
to	O
make	O
sure	O
that	O
all	O
files	O
from	O
any	O
previous	O
indices	O
using	O
the	O
same	O
top	O
level	O
file	O
path	O
are	O
deleted	O
the	O
method	O
adddocumentt	O
oindex	O
is	O
used	O
to	O
add	O
new	O
documents	O
to	O
the	O
index	O
here	O
we	O
call	O
the	O
constructor	O
for	O
the	O
class	O
indexw	O
riter	O
with	O
a	O
value	O
of	O
false	O
for	O
the	O
last	O
argument	O
to	O
avoid	O
overwriting	O
the	O
index	O
each	O
time	O
method	O
adddocumentt	O
oindex	O
is	O
called	O
public	O
void	O
adddocumenttoindex	O
string	O
document	O
original	O
uri	O
string	O
document	O
plain	O
text	O
throws	O
corruptindexexception	O
ioexception	O
file	O
index	O
dir	O
new	O
filedata	O
store	O
file	O
root	O
writer	O
new	O
indexwriterindex	O
dir	O
new	O
standardanalyzer	O
false	O
document	O
doc	O
new	O
document	O
store	O
uri	O
in	O
index	O
do	O
not	O
index	O
doc	O
addnew	O
fielduri	O
document	O
original	O
uri	O
field	O
store	O
yes	O
field	O
index	O
no	O
store	O
text	O
in	O
index	O
index	O
doc	O
addnew	O
fieldtext	O
document	O
plain	O
text	O
field	O
store	O
yes	O
field	O
index	O
tokenized	O
writer	O
adddocumentdoc	O
writer	O
optimize	O
optional	O
writer	O
close	O
indexing	B
and	O
search	B
using	O
embedded	O
lucene	B
you	O
can	O
add	O
fields	O
as	O
needed	O
when	O
you	O
create	O
individual	O
lucene	B
document	O
objects	O
but	O
you	O
will	O
want	O
to	O
add	O
the	O
same	O
fields	O
in	O
your	O
application	O
it	O
is	O
not	O
good	O
to	O
have	O
different	O
documents	O
in	O
an	O
index	O
with	O
different	O
fields	O
there	O
are	O
a	O
few	O
things	O
that	O
you	O
may	O
want	O
to	O
change	O
if	O
you	O
use	O
this	O
class	O
as	O
an	O
implementation	O
example	O
in	O
your	O
own	O
projects	O
if	O
you	O
are	O
adding	O
many	O
documents	O
to	O
the	O
index	O
in	O
a	O
short	O
time	O
period	O
then	O
it	O
is	O
inefficient	O
to	O
open	O
the	O
index	O
add	O
one	O
document	O
and	O
then	O
optimize	O
and	O
close	O
the	O
index	O
you	O
might	O
want	O
to	O
add	O
a	O
method	O
that	O
passes	O
in	O
collections	O
of	O
uris	O
and	O
document	O
text	O
strings	O
for	O
batch	O
inserts	O
you	O
also	O
may	O
not	O
want	O
to	O
store	O
the	O
document	O
text	O
in	O
the	O
index	O
if	O
you	O
are	O
already	O
storing	O
document	O
text	O
somewhere	O
else	O
perhaps	O
in	O
a	O
database	O
there	O
are	O
two	O
search	B
methods	O
in	O
my	O
lucenem	O
anager	O
class	O
one	O
just	O
returns	O
the	O
document	O
uris	O
for	O
search	B
matches	O
and	O
the	O
other	O
returns	O
both	O
uris	O
and	O
the	O
original	O
document	O
text	O
both	O
of	O
these	O
methods	O
open	O
an	O
instance	O
of	O
indexreader	O
for	O
each	O
query	O
for	O
high	O
search	B
volume	O
operations	O
in	O
a	O
multi-threaded	O
environment	O
you	O
may	O
want	O
to	O
create	O
a	O
pool	O
of	O
indexreader	O
instances	O
and	O
reuse	O
them	O
there	O
are	O
several	O
text	O
analyzer	O
classes	O
in	O
lucene	B
and	O
you	O
should	O
use	O
the	O
same	O
analyzer	O
class	O
when	O
adding	O
indexed	O
text	O
fields	O
to	O
the	O
index	O
as	O
when	O
you	O
perform	O
queries	O
in	O
the	O
two	O
search	B
methods	O
i	O
use	O
the	O
same	O
standardanalyzer	O
class	O
that	O
i	O
used	O
when	O
adding	O
documents	O
to	O
the	O
index	O
the	O
following	O
method	O
returns	O
a	O
list	O
of	O
string	O
uris	O
for	O
matched	O
documents	O
public	O
liststring	O
searchindexforurisstring	O
search	B
query	O
throws	O
parseexception	O
ioexception	O
reader	O
indexreader	O
opendata	O
store	O
file	O
root	O
liststring	O
ret	O
new	O
arrayliststring	O
searcher	O
searcher	O
new	O
indexsearcherreader	O
analyzer	O
analyzer	O
new	O
standardanalyzer	O
queryparser	O
parser	O
new	O
queryparsertext	O
analyzer	O
query	O
query	O
parser	O
parsesearch	O
query	O
hits	O
hits	O
searcher	O
searchquery	O
for	O
i	O
i	O
hits	O
length	O
i	O
system	O
out	O
println	O
searchindexforuris	O
hit	O
hits	O
doci	O
document	O
doc	O
hits	O
doci	O
string	O
uri	O
doc	O
geturi	O
ret	O
adduri	O
reader	O
close	O
return	O
ret	O
information	O
gathering	O
the	O
lucene	B
class	O
hits	O
is	O
used	O
for	O
returned	O
search	B
matches	O
and	O
here	O
we	O
use	O
apis	O
to	O
get	O
the	O
number	O
of	O
hits	O
and	O
for	O
each	O
hit	O
get	O
back	O
an	O
instance	O
of	O
the	O
lucene	B
class	O
document	O
note	O
that	O
the	O
field	O
values	O
are	O
retrieved	O
by	O
name	O
in	O
this	O
case	O
uri	O
the	O
other	O
search	B
method	O
in	O
my	O
utility	O
class	O
searchindexf	O
oru	O
risanddoct	O
ext	O
is	O
almost	O
the	O
same	O
as	O
searchindexf	O
oru	O
ris	O
so	O
i	O
will	O
only	O
show	O
the	O
differences	O
public	O
liststring	O
searchindexforurisanddoctext	O
string	O
search	B
query	O
throws	O
exception	O
liststring	O
ret	O
new	O
arrayliststring	O
for	O
i	O
i	O
hits	O
length	O
i	O
document	O
doc	O
hits	O
doci	O
system	O
out	O
println	O
hit	O
hits	O
doci	O
string	O
pair	O
new	O
stringdoc	O
geturi	O
doc	O
gettext	O
ret	O
addpair	O
return	O
ret	O
here	O
we	O
also	O
return	O
the	O
original	O
text	O
from	O
matched	O
documents	O
that	O
we	O
get	O
by	O
fetching	O
the	O
named	O
field	O
text	O
the	O
following	O
code	O
snippet	O
is	O
an	O
example	O
for	O
using	O
the	O
lucenem	O
anager	O
class	O
lucenemanager	O
lm	O
new	O
lucenemanagertmp	O
start	O
fresh	O
create	O
a	O
new	O
index	O
lm	O
createandclearluceneindex	O
is	O
a	O
test	O
for	O
index	O
and	O
a	O
test	O
for	O
search	B
please	O
test	O
the	O
index	O
code	O
test	O
the	O
index	O
code	O
before	O
tomorrow	O
get	O
uris	O
of	O
matching	O
documents	O
liststring	O
doc	O
uris	O
lm	O
searchindexforuristest	O
index	O
system	O
out	O
printlnmatched	O
document	O
uris	O
get	O
uris	O
and	O
document	O
text	O
for	O
matching	O
documents	O
liststring	O
doc	O
uris	O
with	O
text	O
lm	O
searchindexforurisanddoctexttest	O
index	O
indexing	B
and	O
search	B
with	O
nutch	B
clients	O
for	O
uri	O
and	O
text	O
doc	O
uris	O
with	O
text	O
system	O
out	O
printlnmatched	O
document	O
uri	O
system	O
out	O
println	O
document	O
text	O
and	O
here	O
is	O
the	O
sample	O
output	O
debug	O
printout	O
from	O
deleting	O
the	O
old	O
test	O
diskbased	O
index	O
removed	O
matched	O
document	O
uris	O
matched	O
document	O
uri	O
document	O
text	O
this	O
is	O
a	O
test	O
for	O
index	O
and	O
a	O
test	O
for	O
search	B
matched	O
document	O
uri	O
document	O
text	O
please	O
test	O
the	O
index	O
code	O
matched	O
document	O
uri	O
document	O
text	O
please	O
test	O
the	O
index	O
code	O
before	O
tomorrow	O
i	O
use	O
the	O
lucene	B
library	O
frequently	O
on	O
customer	O
projects	O
and	O
although	O
tailoring	O
lucene	B
to	O
specific	O
applications	O
is	O
not	O
simple	O
the	O
wealth	O
of	O
options	O
for	O
analyzing	O
text	O
and	O
maintaining	O
disk-based	O
indices	O
makes	O
lucene	B
a	O
very	O
good	O
tool	O
lucene	B
is	O
also	O
very	O
efficient	O
and	O
scales	O
well	O
to	O
very	O
large	O
indices	O
in	O
section	O
we	O
will	O
look	O
at	O
the	O
nutch	B
system	O
that	O
is	O
built	O
on	O
top	O
of	O
lucene	B
and	O
provides	O
a	O
complete	O
turnkey	O
also	O
highly	O
customizable	O
solution	O
to	O
implementing	O
search	B
in	O
large	O
scale	O
projects	O
where	O
it	O
does	O
not	O
make	O
sense	O
to	O
use	O
lucene	B
in	O
an	O
embedded	O
mode	O
as	O
we	O
did	O
in	O
this	O
section	O
indexing	B
and	O
search	B
with	O
nutch	B
clients	O
this	O
is	O
the	O
last	O
section	O
in	O
this	O
book	O
and	O
we	O
have	O
a	O
great	O
topic	O
for	O
finishing	O
the	O
book	O
the	O
nutch	B
system	O
that	O
is	O
a	O
very	O
useful	O
tool	O
for	O
information	O
storage	O
and	O
retrieval	O
out	O
of	O
the	O
box	O
it	O
only	O
takes	O
about	O
minutes	O
to	O
set	O
up	O
a	O
vanilla	O
nutch	B
server	O
with	O
the	O
default	O
web	O
interface	O
for	O
searching	O
documents	O
nutch	B
can	O
be	O
configured	O
to	O
index	O
documents	O
on	O
a	O
local	O
file	O
system	O
and	O
contains	O
utilities	O
for	O
processing	O
a	O
wide	O
range	O
of	O
document	O
types	O
office	O
openoffice	O
org	O
pdf	O
tml	O
etc	O
you	O
can	O
also	O
configure	O
nutch	B
to	O
spider	O
remote	O
and	O
local	O
private	O
on	O
a	O
company	O
lan	O
web	O
sites	O
information	O
gathering	O
the	O
nutch	B
web	O
site	O
httplucene	O
apache	O
orgnutch	O
contains	O
binary	O
distributions	O
and	O
tutorials	O
for	O
quickly	O
setting	O
up	O
a	O
nutch	B
system	O
and	O
i	O
will	O
not	O
repeat	O
all	O
of	O
these	O
directions	O
here	O
what	O
i	O
do	O
want	O
to	O
show	O
you	O
is	O
how	O
i	O
usually	O
use	O
the	O
nutch	B
system	O
on	O
customer	O
projects	O
after	O
i	O
configure	O
nutch	B
to	O
periodically	O
spider	O
customer	O
specific	O
data	O
sources	O
i	O
then	O
use	O
a	O
web	O
services	O
client	O
library	O
to	O
integrate	O
nutch	B
with	O
other	O
systems	O
that	O
need	O
both	O
document	O
repository	O
and	O
search	B
functionality	O
although	O
you	O
can	O
tightly	O
couple	O
your	O
java	O
applications	O
with	O
nutch	B
using	O
the	O
nutch	B
api	O
i	O
prefer	O
to	O
use	O
the	O
opensearch	O
api	O
that	O
is	O
an	O
extension	O
of	O
rss	O
for	O
performing	O
search	B
using	O
web	O
service	O
calls	O
opensearch	O
was	O
originally	O
developed	O
for	O
amazon	O
s	O
search	B
engine	O
and	O
may	O
become	O
widely	O
adopted	O
since	O
it	O
is	O
a	O
reasonable	O
standard	O
more	O
information	O
on	O
the	O
opensearch	O
standard	O
can	O
be	O
found	O
at	O
httpwww	O
opensearch	O
org	O
but	O
i	O
will	O
cover	O
the	O
basics	O
here	O
nutch	B
server	O
fast	O
start	O
setup	O
for	O
completeness	O
i	O
will	O
quickly	O
go	O
over	O
the	O
steps	O
i	O
use	O
to	O
set	O
up	O
tomcat	O
version	O
with	O
nutch	B
for	O
this	O
discussion	O
i	O
assume	O
that	O
you	O
have	O
unpacked	O
tomcat	O
and	O
changed	O
the	O
directory	O
name	O
to	O
nutch	B
that	O
you	O
have	O
removed	O
all	O
files	O
from	O
the	O
directory	O
nutchwebapps	O
and	O
that	O
you	O
have	O
then	O
moved	O
the	O
file	O
am	O
using	O
nutch	B
version	O
to	O
the	O
tomcat	O
webapps	O
directory	O
changing	O
its	O
name	O
to	O
root	O
war	O
i	O
then	O
move	O
the	O
directory	O
to	O
the	O
file	O
nutchnutchconfcrawl-urlfilter	O
txt	O
needs	O
to	O
be	O
edited	O
to	O
specify	O
a	O
combination	O
of	O
local	O
and	O
remote	O
data	O
sources	O
here	O
i	O
have	O
configured	O
it	O
to	O
spider	O
just	O
my	O
httpknowledgebooks	O
com	O
web	O
site	O
only	O
changes	O
i	O
had	O
to	O
make	O
are	O
the	O
two	O
lines	O
one	O
being	O
a	O
comment	O
line	O
containing	O
the	O
string	O
knowledgebooks	O
com	O
skip	O
file	O
ftp	O
mailto	O
urls	O
skip	O
image	O
and	O
other	O
suffixes	O
we	O
can	O
t	O
yet	O
parse	O
skip	O
urls	O
containing	O
certain	O
characters	O
as	O
probable	O
queries	O
etc	O
indexing	B
and	O
search	B
with	O
nutch	B
clients	O
skip	O
urls	O
with	O
slash-delimited	O
segment	O
that	O
repeats	O
times	O
to	O
break	O
loops	O
accept	O
hosts	O
in	O
knowledgebooks	O
com	O
skip	O
everything	O
else	O
additional	O
regular	O
expression	O
patterns	O
can	O
be	O
added	O
for	O
more	O
root	O
web	O
sites	O
nutch	B
will	O
not	O
spider	O
any	O
site	O
that	O
does	O
not	O
match	O
any	O
regular	O
expression	O
pattern	O
in	O
the	O
configuration	O
file	O
it	O
is	O
important	O
that	O
web	O
search	B
spiders	O
properly	O
identify	O
themselves	O
so	O
it	O
is	O
important	O
that	O
you	O
also	O
edit	O
the	O
file	O
nutchnutchconfnutch-site	O
xml	O
following	O
the	O
directions	O
in	O
the	O
comments	O
to	O
identify	O
yourself	O
or	O
your	O
company	O
to	O
web	O
sites	O
that	O
you	O
spider	O
typetextxsl	O
hrefconfiguration	O
xsl	O
name	O
nutch	B
spidervalue	O
spiderdescription	O
of	O
spider	O
serverdescription	O
email	O
addressvalue	O
at	O
markwatson	O
dot	O
comdescription	O
then	O
create	O
an	O
empty	O
directory	O
and	O
create	O
a	O
text	O
file	O
file	O
name	O
is	O
fine	O
with	O
a	O
list	O
of	O
starting	O
urls	O
to	O
spider	O
in	O
this	O
case	O
i	O
will	O
just	O
add	O
information	O
gathering	O
httpknowledgebooks	O
com	O
then	O
make	O
a	O
small	O
test	O
spider	O
run	O
to	O
create	O
local	O
indices	O
in	O
the	O
subdirectory	O
and	O
start	O
the	O
tomcat	O
server	O
interactively	O
cd	O
nutch	B
binnutch	O
crawl	O
urls	O
crawl	O
run	O
you	O
can	O
run	O
tomcat	O
as	O
a	O
background	O
service	O
using	O
start	O
instead	O
of	O
run	O
in	O
production	O
mode	O
if	O
you	O
rerun	O
the	O
spidering	O
process	O
you	O
will	O
need	O
to	O
first	O
delete	O
the	O
subdirectory	O
or	O
put	O
the	O
new	O
index	O
in	O
a	O
different	O
location	O
and	O
copy	O
it	O
to	O
when	O
the	O
new	O
index	O
is	O
complete	O
the	O
nutch	B
web	O
app	O
running	O
in	O
tomcat	O
will	O
expect	O
a	O
subdirectory	O
named	O
in	O
the	O
directory	O
where	O
you	O
start	O
tomcat	O
just	O
to	O
test	O
that	O
you	O
have	O
nutch	B
up	O
and	O
running	O
with	O
a	O
valid	O
index	O
access	O
the	O
following	O
url	O
localhost	O
assuming	O
that	O
you	O
are	O
running	O
tomcat	O
on	O
your	O
local	O
computer	O
to	O
try	O
this	O
you	O
can	O
then	O
try	O
the	O
opensearch	O
web	O
service	O
interface	O
by	O
accessing	O
the	O
url	O
since	O
i	O
indexed	O
my	O
own	O
web	O
site	O
that	O
i	O
often	O
change	O
the	O
rss	O
xml	O
that	O
you	O
get	O
back	O
may	O
look	O
different	O
than	O
what	O
we	O
see	O
in	O
this	O
example	O
xmlnsnutchhttpwww	O
nutch	B
org	O
java	O
rdftitle	O
search	B
results	O
for	O
query	O
java	O
rdfdescription	O
rdfnutchquery	O
indexing	B
and	O
search	B
with	O
nutch	B
clients	O
ai	O
html	O
snippet	O
for	O
multiple	O
search	B
results	O
there	O
are	O
multiple	O
elements	O
in	O
the	O
returned	O
xml	O
data	O
we	O
will	O
write	O
web	O
service	O
clients	O
to	O
submit	O
remote	O
queries	O
and	O
process	O
the	O
returned	O
rss	O
xml	O
data	O
in	O
section	O
using	O
the	O
nutch	B
opensearch	O
web	O
apis	O
a	O
java	O
opensearch	O
web	O
services	O
client	O
is	O
fairly	O
easy	O
to	O
write	O
build	O
a	O
rest	O
query	O
url	O
with	O
the	O
search	B
phrase	O
url	O
encoded	O
open	O
a	O
httpu	O
rlconnection	O
for	O
this	O
query	O
url	O
read	O
the	O
response	O
and	O
then	O
use	O
an	O
xml	O
parser	O
to	O
process	O
the	O
returned	O
rss	O
xml	O
payload	O
we	O
will	O
first	O
look	O
at	O
an	O
implementation	O
of	O
a	O
nutch	B
client	O
and	O
then	O
look	O
at	O
some	O
interesting	O
things	O
you	O
can	O
do	O
given	O
your	O
own	O
nutch	B
server	O
installation	O
and	O
a	O
client	O
the	O
client	O
class	O
n	O
utchclient	O
has	O
three	O
public	O
static	O
apis	O
search	B
returns	O
a	O
list	O
of	O
maps	O
each	O
map	O
having	O
values	O
for	O
keys	O
title	O
description	O
cache	O
uri	O
and	O
link	O
the	O
title	O
is	O
the	O
web	O
page	O
title	O
the	O
description	O
is	O
an	O
htm	O
snippet	O
showing	O
search	B
terms	O
in	O
original	O
web	O
page	O
text	O
the	O
cache	O
uri	O
is	O
a	O
nutch	B
cache	O
of	O
the	O
original	O
web	O
page	O
and	O
the	O
link	O
is	O
the	O
url	O
to	O
the	O
matched	O
web	O
page	O
searchgetcache	O
like	O
search	B
but	O
each	O
map	O
also	O
contains	O
a	O
key	O
cache	O
content	O
with	O
a	O
value	O
equal	O
to	O
the	O
cached	O
html	O
for	O
the	O
original	O
web	O
page	O
getcachecontent	O
use	O
this	O
api	O
if	O
you	O
first	O
used	O
search	B
and	O
later	O
want	O
the	O
cached	O
web	O
page	O
the	O
implementation	O
is	O
in	O
the	O
file	O
src-index-searchnutchclient	O
java	O
here	O
are	O
a	O
few	O
code	O
snippets	O
showing	O
the	O
public	O
apis	O
static	O
public	O
listhashtablestringstring	O
information	O
gathering	O
searchgetcachestring	O
opensearch	O
url	O
string	O
query	O
throws	O
ioexception	O
parserconfigurationexception	O
saxexception	O
return	O
search	B
helperopensearch	O
url	O
query	O
true	O
static	O
public	O
listhashtablestringstring	O
searchstring	O
opensearch	O
url	O
string	O
query	O
throws	O
ioexception	O
parserconfigurationexception	O
saxexception	O
return	O
search	B
helperopensearch	O
url	O
query	O
false	O
static	O
public	O
string	O
getcachecontentstring	O
cache	O
uri	O
throws	O
ioexception	O
url	O
url	O
new	O
urlcache	O
uri	O
urlconnection	O
uc	O
url	O
openconnection	O
return	O
new	O
scanneruc	O
getinputstream	O
usedelimiterz	O
next	O
the	O
implementation	O
of	O
the	O
private	O
helper	O
method	O
is	O
to	O
fit	O
the	O
page	O
width	O
and	O
with	O
comments	O
on	O
the	O
code	O
static	O
private	O
listhashtablestringstring	O
search	B
helperstring	O
opensearch	O
url	O
string	O
query	O
boolean	O
return	O
cache	O
throws	O
listhashtablestringstring	O
ret	O
new	O
arraylisthashtablestringstring	O
we	O
are	O
using	O
a	O
rest	O
style	O
call	O
so	O
we	O
need	O
to	O
url	O
encode	O
the	O
search	B
terms	O
this	O
involves	O
replacing	O
space	O
characters	O
with	O
etc	O
a	O
search	B
for	O
java	O
ai	O
using	O
a	O
nutch	B
server	O
on	O
my	O
local	O
laptop	O
on	O
port	O
would	O
look	O
like	O
string	O
url	O
str	O
opensearch	O
url	O
urlencoder	O
encodequery	O
url	O
url	O
new	O
urlurl	O
str	O
urlconnection	O
uc	O
url	O
openconnection	O
indexing	B
and	O
search	B
with	O
nutch	B
clients	O
bufferedinputstream	O
bis	O
new	O
bufferedinputstreamuc	O
getinputstream	O
while	O
i	O
usually	O
prefer	O
sax	O
xml	O
parsers	O
for	O
less	O
memory	O
use	O
and	O
efficiency	O
it	O
is	O
easier	O
for	O
small	O
xml	O
payloads	O
just	O
to	O
use	O
the	O
dom-based	O
apis	O
documentbuilder	O
docbuilder	O
documentbuilderfactory	O
newinstance	O
newdocumentbuilder	O
document	O
doc	O
docbuilder	O
parsebis	O
doc	O
getdocumentelement	O
normalize	O
here	O
we	O
use	O
the	O
dom	O
xml	O
apis	O
to	O
get	O
all	O
item	O
tags	O
and	O
for	O
each	O
item	O
tag	O
get	O
the	O
text	O
for	O
the	O
child	O
nodes	O
nodelist	O
listitems	O
doc	O
getelementsbytagnameitem	O
int	O
numitems	O
listitems	O
getlength	O
for	O
inumitems	O
i	O
node	O
item	O
listitems	O
itemi	O
hashtablestringstring	O
new	O
item	O
new	O
hashtablestringstring	O
ret	O
addnew	O
item	O
nodelist	O
item	O
data	O
item	O
getchildnodes	O
int	O
num	O
item	O
data	O
getlength	O
for	O
nnum	O
n	O
node	O
data	O
item	O
data	O
itemn	O
string	O
name	O
data	O
getnodename	O
nutch	B
returns	O
many	O
extra	O
parameters	O
encoded	O
as	O
items	O
that	O
we	O
do	O
not	O
need	O
here	O
we	O
just	O
keep	O
what	O
we	O
need	O
if	O
name	O
equalsdescription	O
name	O
equalslink	O
new	O
item	O
putname	O
data	O
gettextcontent	O
if	O
new	O
item	O
putcache	O
uri	O
data	O
gettextcontent	O
we	O
may	O
want	O
to	O
optionally	O
make	O
another	O
web	O
service	O
call	O
to	O
get	O
the	O
cached	O
web	O
page	O
for	O
this	O
search	B
result	O
doing	O
this	O
approximately	O
doubles	O
the	O
time	O
required	O
for	O
a	O
search	B
query	O
information	O
gathering	O
if	O
new	O
item	O
getcache	O
uri	O
null	O
new	O
item	O
putcache	O
content	O
getcachecontentnew	O
item	O
getcache	O
uri	O
return	O
ret	O
here	O
is	O
a	O
sample	O
use	O
of	O
the	O
client	O
class	O
listhashtablestringstring	O
results	O
nutchclient	O
search	B
system	O
out	O
printlnresults	O
results	O
and	O
the	O
output	O
for	O
brevity	O
results	O
linkhttpknowledgebooks	O
com	O
description	O
java	O
ai	O
titleknowledgebooks	O
com	O
ai	O
technology	O
for	O
linkhttpknowledgebooks	O
comlicense	O
txt	O
description	O
using	O
classhighlightjava	O
titlehttpknowledgebooks	O
comlicense	O
txt	O
the	O
average	O
time	O
for	O
a	O
nutch	B
client	O
web	O
service	O
call	O
on	O
my	O
macbook	O
is	O
milliseconds	O
when	O
i	O
ran	O
both	O
tomcat	O
and	O
the	O
nutch	B
web	O
services	O
client	O
are	O
on	O
the	O
same	O
laptop	O
average	O
response	O
times	O
will	O
only	O
increase	O
slightly	O
when	O
the	O
client	O
and	O
the	O
server	O
are	O
on	O
the	O
same	O
local	O
area	O
network	O
average	O
response	O
times	O
will	O
be	O
longer	O
and	O
less	O
predictable	O
when	O
using	O
any	O
of	O
the	O
public	O
opensearch	O
servers	O
on	O
the	O
internet	O
what	O
can	O
you	O
use	O
a	O
search	B
client	O
for	O
here	O
are	O
a	O
few	O
ideas	O
based	O
on	O
my	O
own	O
work	O
projects	O
roughly	O
determine	O
if	O
two	O
words	O
or	O
phrases	O
are	O
associated	O
with	O
each	O
other	O
by	O
concatenating	O
the	O
words	O
or	O
phrases	O
and	O
counting	O
the	O
number	O
of	O
search	B
results	O
for	O
the	O
combined	O
search	B
query	O
determine	O
if	O
a	O
product	O
name	O
or	O
id	O
code	O
is	O
spelled	O
correctly	O
or	O
if	O
a	O
company	O
carries	O
a	O
product	O
by	O
setting	O
up	O
a	O
custom	O
nutch	B
instance	O
that	O
only	O
spiders	O
the	O
indexing	B
and	O
search	B
with	O
nutch	B
clients	O
company	O
s	O
web	O
sites	O
always	O
follow	O
the	O
terms	O
and	O
conditions	O
of	O
a	O
web	O
site	O
when	O
setting	O
up	O
a	O
spider	O
improve	O
search	B
results	O
by	O
adding	O
a	O
list	O
of	O
project-specific	O
synonyms	O
to	O
the	O
search	B
client	O
expand	O
search	B
terms	O
using	O
the	O
synonym	O
list	O
if	O
you	O
need	O
access	O
to	O
public	O
information	O
spider	O
the	O
information	O
infrequently	O
and	O
then	O
perform	O
local	O
search	B
queries	O
and	O
use	O
the	O
local	O
page	O
caches	O
for	O
very	O
little	O
effort	O
you	O
can	O
set	O
up	O
nutch	B
server	O
instances	O
that	O
spider	O
specific	O
information	O
servers	O
you	O
can	O
often	O
add	O
significant	O
value	O
to	O
application	O
programs	O
by	O
adding	O
search	B
functionality	O
and	O
by	O
using	O
nutch	B
you	O
can	O
locally	O
control	O
the	O
information	O
information	O
gathering	O
conclusions	O
the	O
material	O
in	O
this	O
book	O
was	O
informed	O
by	O
my	O
own	O
work	O
writing	O
software	O
for	O
information	O
processing	O
if	O
you	O
enjoyed	O
reading	O
it	O
and	O
you	O
make	O
practical	O
use	O
of	O
at	O
least	O
some	O
of	O
the	O
material	O
i	O
covered	O
then	O
i	O
consider	O
my	O
effort	O
to	O
be	O
worthwhile	O
writing	O
software	O
is	O
a	O
combination	O
of	O
a	O
business	O
activity	O
promoting	O
good	O
for	O
society	O
and	O
an	O
exploration	O
to	O
try	O
out	O
new	O
ideas	O
for	O
self	O
improvement	O
i	O
believe	O
that	O
there	O
is	O
sometimes	O
a	O
fine	O
line	O
between	O
spending	O
too	O
many	O
resources	O
tracking	O
many	O
new	O
technologies	O
versus	O
getting	O
stuck	O
using	O
old	O
technologies	O
at	O
the	O
expense	O
of	O
lost	O
opportunities	O
my	O
hope	O
is	O
that	O
reading	O
this	O
book	O
was	O
an	O
efficient	O
and	O
pleasurable	O
use	O
of	O
your	O
time	O
in	O
learning	O
some	O
new	O
techniques	O
and	O
technologies	O
that	O
you	O
had	O
not	O
considered	O
before	O
when	O
we	O
can	O
expend	O
resources	O
to	O
try	O
new	O
things	O
it	O
is	O
almost	O
always	O
best	O
to	O
perform	O
many	O
small	O
experiments	O
and	O
then	O
dig	O
deeper	O
into	O
areas	O
that	O
have	O
a	O
good	O
chance	O
for	O
providing	O
high	O
value	O
and	O
capturing	O
your	O
interest	O
fail	O
fast	O
is	O
a	O
common	O
meme	O
but	O
failure	O
that	O
we	O
do	O
not	O
learn	O
from	O
is	O
a	O
waste	O
i	O
have	O
been	O
using	O
the	O
java	O
platform	O
from	O
the	O
very	O
beginning	O
and	O
although	O
i	O
also	O
use	O
many	O
other	O
programming	O
languages	O
in	O
my	O
work	O
and	O
studies	O
both	O
the	O
java	O
language	O
and	O
platform	O
provide	O
high	O
efficiency	O
scalability	O
many	O
well-trained	O
developers	O
and	O
a	O
wealth	O
of	O
existing	O
infrastructure	O
software	O
and	O
libraries	O
investment	O
in	O
java	O
development	O
also	O
pays	O
when	O
using	O
alternative	O
jvm	O
languages	O
like	O
jruby	O
scala	O
and	O
clojure	O
if	O
we	O
never	O
get	O
to	O
meet	O
in	O
person	O
or	O
talk	O
on	O
the	O
telephone	O
then	O
i	O
would	O
like	O
to	O
thank	O
you	O
now	O
for	O
taking	O
the	O
time	O
to	O
read	O
this	O
book	O
conclusions	O
index	O
alpha-beta	B
search	B
chess	B
dark	B
web	I
data	O
source	O
cia	B
world	I
factbook	I
usa	B
state	I
data	I
expert	B
system	I
backward	B
chaining	I
business	B
process	I
knowledge	I
drools	B
drools	B
embedded	I
java	I
drools	B
rule	I
syntax	I
forward	B
chaining	I
jess	B
lhs	B
production	B
rules	I
rhs	B
game	B
playing	I
genetic	B
algorithm	I
chromosome	B
crossover	B
fitness	B
library	B
api	I
mutation	B
indexing	B
lucene	B
nutch	B
jdbc	B
derby	B
knowledge	B
representation	I
logic	B
aristotle	B
description	B
logic	B
first	B
order	I
first	B
order	I
predicate	I
frege	B
peirce	B
loom	B
machine	B
learning	I
nave	B
bayes	I
weka	B
neural	B
network	I
back	B
propagation	I
hopfield	O
neuron	B
open	B
calais	I
powerloom	B
java	B
embedded	I
running	B
interactively	I
prolog	B
reasoning	B
relational	B
database	I
derby	B
search	B
lucene	B
nutch	B
search	B
tree	I
semantic	B
web	I
example	B
rdf	B
data	I
jena	B
index	O
n-triple	B
owl	B
protege	B
rdf	B
rdfs	B
sesame	B
sparql	B
statistical	B
nlp	I
auto-classification	O
auto-tagging	B
markov	B
models	I
named	B
entity	I
extraction	I
spelling	B
tagging	B
text	B
clustering	I
tokenize	B
wordnet	B
tic-tac-toe	B
